{"version":3,"file":"reveal.js","sources":["../js/utils/util.js","../js/utils/device.js","../.yarn/cache/fitty-npm-2.4.2-61211d429e-008e8d6234.zip/node_modules/fitty/dist/fitty.module.js","../js/controllers/slidecontent.js","../js/utils/constants.js","../js/controllers/slidenumber.js","../js/controllers/jumptoslide.js","../js/utils/color.js","../js/controllers/backgrounds.js","../js/controllers/autoanimate.js","../js/controllers/scrollview.js","../js/controllers/printview.js","../js/controllers/fragments.js","../js/controllers/overview.js","../js/controllers/keyboard.js","../js/controllers/location.js","../js/controllers/controls.js","../js/controllers/progress.js","../js/controllers/pointer.js","../js/utils/loader.js","../js/controllers/plugins.js","../js/controllers/overlay.js","../js/controllers/touch.js","../js/controllers/focus.js","../js/controllers/notes.js","../js/components/playback.js","../js/config.js","../js/reveal.js","../js/index.js"],"sourcesContent":["/**\n * Extend object a with the properties of object b.\n * If there's a conflict, object b takes precedence.\n *\n * @param {object} a\n * @param {object} b\n */\nexport const extend = ( a, b ) => {\n\n\tfor( let i in b ) {\n\t\ta[ i ] = b[ i ];\n\t}\n\n\treturn a;\n\n}\n\n/**\n * querySelectorAll but returns an Array.\n */\nexport const queryAll = ( el, selector ) => {\n\n\treturn Array.from( el.querySelectorAll( selector ) );\n\n}\n\n/**\n * classList.toggle() with cross browser support\n */\nexport const toggleClass = ( el, className, value ) => {\n\tif( value ) {\n\t\tel.classList.add( className );\n\t}\n\telse {\n\t\tel.classList.remove( className );\n\t}\n}\n\n/**\n * Utility for deserializing a value.\n *\n * @param {*} value\n * @return {*}\n */\nexport const deserialize = ( value ) => {\n\n\tif( typeof value === 'string' ) {\n\t\tif( value === 'null' ) return null;\n\t\telse if( value === 'true' ) return true;\n\t\telse if( value === 'false' ) return false;\n\t\telse if( value.match( /^-?[\\d\\.]+$/ ) ) return parseFloat( value );\n\t}\n\n\treturn value;\n\n}\n\n/**\n * Measures the distance in pixels between point a\n * and point b.\n *\n * @param {object} a point with x/y properties\n * @param {object} b point with x/y properties\n *\n * @return {number}\n */\nexport const distanceBetween = ( a, b ) => {\n\n\tlet dx = a.x - b.x,\n\t\tdy = a.y - b.y;\n\n\treturn Math.sqrt( dx*dx + dy*dy );\n\n}\n\n/**\n * Applies a CSS transform to the target element.\n *\n * @param {HTMLElement} element\n * @param {string} transform\n */\nexport const transformElement = ( element, transform ) => {\n\n\telement.style.transform = transform;\n\n}\n\n/**\n * Element.matches with IE support.\n *\n * @param {HTMLElement} target The element to match\n * @param {String} selector The CSS selector to match\n * the element against\n *\n * @return {Boolean}\n */\nexport const matches = ( target, selector ) => {\n\n\tlet matchesMethod = target.matches || target.matchesSelector || target.msMatchesSelector;\n\n\treturn !!( matchesMethod && matchesMethod.call( target, selector ) );\n\n}\n\n/**\n * Find the closest parent that matches the given\n * selector.\n *\n * @param {HTMLElement} target The child element\n * @param {String} selector The CSS selector to match\n * the parents against\n *\n * @return {HTMLElement} The matched parent or null\n * if no matching parent was found\n */\nexport const closest = ( target, selector ) => {\n\n\t// Native Element.closest\n\tif( typeof target.closest === 'function' ) {\n\t\treturn target.closest( selector );\n\t}\n\n\t// Polyfill\n\twhile( target ) {\n\t\tif( matches( target, selector ) ) {\n\t\t\treturn target;\n\t\t}\n\n\t\t// Keep searching\n\t\ttarget = target.parentNode;\n\t}\n\n\treturn null;\n\n}\n\n/**\n * Handling the fullscreen functionality via the fullscreen API\n *\n * @see http://fullscreen.spec.whatwg.org/\n * @see https://developer.mozilla.org/en-US/docs/DOM/Using_fullscreen_mode\n */\nexport const enterFullscreen = element => {\n\n\telement = element || document.documentElement;\n\n\t// Check which implementation is available\n\tlet requestMethod = element.requestFullscreen ||\n\t\t\t\t\t\telement.webkitRequestFullscreen ||\n\t\t\t\t\t\telement.webkitRequestFullScreen ||\n\t\t\t\t\t\telement.mozRequestFullScreen ||\n\t\t\t\t\t\telement.msRequestFullscreen;\n\n\tif( requestMethod ) {\n\t\trequestMethod.apply( element );\n\t}\n\n}\n\n/**\n * Creates an HTML element and returns a reference to it.\n * If the element already exists the existing instance will\n * be returned.\n *\n * @param {HTMLElement} container\n * @param {string} tagname\n * @param {string} classname\n * @param {string} innerHTML\n *\n * @return {HTMLElement}\n */\nexport const createSingletonNode = ( container, tagname, classname, innerHTML='' ) => {\n\n\t// Find all nodes matching the description\n\tlet nodes = container.querySelectorAll( '.' + classname );\n\n\t// Check all matches to find one which is a direct child of\n\t// the specified container\n\tfor( let i = 0; i < nodes.length; i++ ) {\n\t\tlet testNode = nodes[i];\n\t\tif( testNode.parentNode === container ) {\n\t\t\treturn testNode;\n\t\t}\n\t}\n\n\t// If no node was found, create it now\n\tlet node = document.createElement( tagname );\n\tnode.className = classname;\n\tnode.innerHTML = innerHTML;\n\tcontainer.appendChild( node );\n\n\treturn node;\n\n}\n\n/**\n * Injects the given CSS styles into the DOM.\n *\n * @param {string} value\n */\nexport const createStyleSheet = ( value ) => {\n\n\tlet tag = document.createElement( 'style' );\n\ttag.type = 'text/css';\n\n\tif( value && value.length > 0 ) {\n\t\tif( tag.styleSheet ) {\n\t\t\ttag.styleSheet.cssText = value;\n\t\t}\n\t\telse {\n\t\t\ttag.appendChild( document.createTextNode( value ) );\n\t\t}\n\t}\n\n\tdocument.head.appendChild( tag );\n\n\treturn tag;\n\n}\n\n/**\n * Returns a key:value hash of all query params.\n */\nexport const getQueryHash = () => {\n\n\tlet query = {};\n\n\tlocation.search.replace( /[A-Z0-9]+?=([\\w\\.%-]*)/gi, a => {\n\t\tquery[ a.split( '=' ).shift() ] = a.split( '=' ).pop();\n\t} );\n\n\t// Basic deserialization\n\tfor( let i in query ) {\n\t\tlet value = query[ i ];\n\n\t\tquery[ i ] = deserialize( unescape( value ) );\n\t}\n\n\t// Do not accept new dependencies via query config to avoid\n\t// the potential of malicious script injection\n\tif( typeof query['dependencies'] !== 'undefined' ) delete query['dependencies'];\n\n\treturn query;\n\n}\n\n/**\n * Returns the remaining height within the parent of the\n * target element.\n *\n * remaining height = [ configured parent height ] - [ current parent height ]\n *\n * @param {HTMLElement} element\n * @param {number} [height]\n */\nexport const getRemainingHeight = ( element, height = 0 ) => {\n\n\tif( element ) {\n\t\tlet newHeight, oldHeight = element.style.height;\n\n\t\t// Change the .stretch element height to 0 in order find the height of all\n\t\t// the other elements\n\t\telement.style.height = '0px';\n\n\t\t// In Overview mode, the parent (.slide) height is set of 700px.\n\t\t// Restore it temporarily to its natural height.\n\t\telement.parentNode.style.height = 'auto';\n\n\t\tnewHeight = height - element.parentNode.offsetHeight;\n\n\t\t// Restore the old height, just in case\n\t\telement.style.height = oldHeight + 'px';\n\n\t\t// Clear the parent (.slide) height. .removeProperty works in IE9+\n\t\telement.parentNode.style.removeProperty('height');\n\n\t\treturn newHeight;\n\t}\n\n\treturn height;\n\n}\n\nconst fileExtensionToMimeMap = {\n\t'mp4': 'video/mp4',\n\t'm4a': 'video/mp4',\n\t'ogv': 'video/ogg',\n\t'mpeg': 'video/mpeg',\n\t'webm': 'video/webm'\n}\n\n/**\n * Guess the MIME type for common file formats.\n */\nexport const getMimeTypeFromFile = ( filename='' ) => {\n\treturn fileExtensionToMimeMap[filename.split('.').pop()]\n}\n\n/**\n * Encodes a string for RFC3986-compliant URL format.\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/encodeURI#encoding_for_rfc3986\n *\n * @param {string} url\n */\nexport const encodeRFC3986URI = ( url='' ) => {\n\treturn encodeURI(url)\n\t  .replace(/%5B/g, \"[\")\n\t  .replace(/%5D/g, \"]\")\n\t  .replace(\n\t\t/[!'()*]/g,\n\t\t(c) => `%${c.charCodeAt(0).toString(16).toUpperCase()}`\n\t  );\n}","const UA = navigator.userAgent;\n\nexport const isMobile = /(iphone|ipod|ipad|android)/gi.test( UA ) ||\n\t\t\t\t\t\t( navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1 ); // iPadOS\n\nexport const isChrome = /chrome/i.test( UA ) && !/edge/i.test( UA );\n\nexport const isAndroid = /android/gi.test( UA );","/**\n * fitty v2.4.2 - Snugly resizes text to fit its parent container\n * Copyright (c) 2023 Rik Schennink <rik@pqina.nl> (https://pqina.nl/)\n */\n\nvar e=function(e){if(e){var t=function(e){return[].slice.call(e)},n=0,i=1,r=2,o=3,a=[],l=null,u=\"requestAnimationFrame\"in e?function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{sync:!1};e.cancelAnimationFrame(l);var n=function(){return s(a.filter((function(e){return e.dirty&&e.active})))};if(t.sync)return n();l=e.requestAnimationFrame(n)}:function(){},c=function(e){return function(t){a.forEach((function(t){return t.dirty=e})),u(t)}},s=function(e){e.filter((function(e){return!e.styleComputed})).forEach((function(e){e.styleComputed=m(e)})),e.filter(y).forEach(v);var t=e.filter(p);t.forEach(d),t.forEach((function(e){v(e),f(e)})),t.forEach(S)},f=function(e){return e.dirty=n},d=function(e){e.availableWidth=e.element.parentNode.clientWidth,e.currentWidth=e.element.scrollWidth,e.previousFontSize=e.currentFontSize,e.currentFontSize=Math.min(Math.max(e.minSize,e.availableWidth/e.currentWidth*e.previousFontSize),e.maxSize),e.whiteSpace=e.multiLine&&e.currentFontSize===e.minSize?\"normal\":\"nowrap\"},p=function(e){return e.dirty!==r||e.dirty===r&&e.element.parentNode.clientWidth!==e.availableWidth},m=function(t){var n=e.getComputedStyle(t.element,null);return t.currentFontSize=parseFloat(n.getPropertyValue(\"font-size\")),t.display=n.getPropertyValue(\"display\"),t.whiteSpace=n.getPropertyValue(\"white-space\"),!0},y=function(e){var t=!1;return!e.preStyleTestCompleted&&(/inline-/.test(e.display)||(t=!0,e.display=\"inline-block\"),\"nowrap\"!==e.whiteSpace&&(t=!0,e.whiteSpace=\"nowrap\"),e.preStyleTestCompleted=!0,t)},v=function(e){e.element.style.whiteSpace=e.whiteSpace,e.element.style.display=e.display,e.element.style.fontSize=e.currentFontSize+\"px\"},S=function(e){e.element.dispatchEvent(new CustomEvent(\"fit\",{detail:{oldValue:e.previousFontSize,newValue:e.currentFontSize,scaleFactor:e.currentFontSize/e.previousFontSize}}))},h=function(e,t){return function(n){e.dirty=t,e.active&&u(n)}},w=function(e){return function(){a=a.filter((function(t){return t.element!==e.element})),e.observeMutations&&e.observer.disconnect(),e.element.style.whiteSpace=e.originalStyle.whiteSpace,e.element.style.display=e.originalStyle.display,e.element.style.fontSize=e.originalStyle.fontSize}},b=function(e){return function(){e.active||(e.active=!0,u())}},z=function(e){return function(){return e.active=!1}},F=function(e){e.observeMutations&&(e.observer=new MutationObserver(h(e,i)),e.observer.observe(e.element,e.observeMutations))},g={minSize:16,maxSize:512,multiLine:!0,observeMutations:\"MutationObserver\"in e&&{subtree:!0,childList:!0,characterData:!0}},W=null,E=function(){e.clearTimeout(W),W=e.setTimeout(c(r),x.observeWindowDelay)},M=[\"resize\",\"orientationchange\"];return Object.defineProperty(x,\"observeWindow\",{set:function(t){var n=\"\".concat(t?\"add\":\"remove\",\"EventListener\");M.forEach((function(t){e[n](t,E)}))}}),x.observeWindow=!0,x.observeWindowDelay=100,x.fitAll=c(o),x}function C(e,t){var n=Object.assign({},g,t),i=e.map((function(e){var t=Object.assign({},n,{element:e,active:!0});return function(e){e.originalStyle={whiteSpace:e.element.style.whiteSpace,display:e.element.style.display,fontSize:e.element.style.fontSize},F(e),e.newbie=!0,e.dirty=!0,a.push(e)}(t),{element:e,fit:h(t,o),unfreeze:b(t),freeze:z(t),unsubscribe:w(t)}}));return u(),i}function x(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return\"string\"==typeof e?C(t(document.querySelectorAll(e)),n):C([e],n)[0]}}(\"undefined\"==typeof window?null:window);export default e;\n","import { extend, queryAll, closest, getMimeTypeFromFile, encodeRFC3986URI } from '../utils/util.js'\nimport { isMobile } from '../utils/device.js'\n\nimport fitty from 'fitty';\n\n/**\n * Handles loading, unloading and playback of slide\n * content such as images, videos and iframes.\n */\nexport default class SlideContent {\n\n\tallowedToPlay = true;\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.startEmbeddedIframe = this.startEmbeddedIframe.bind( this );\n\t\tthis.preventIframeAutoFocus = this.preventIframeAutoFocus.bind( this );\n\t\tthis.ensureMobileMediaPlaying = this.ensureMobileMediaPlaying.bind( this );\n\n\t}\n\n\t/**\n\t * Should the given element be preloaded?\n\t * Decides based on local element attributes and global config.\n\t *\n\t * @param {HTMLElement} element\n\t */\n\tshouldPreload( element ) {\n\n\t\tif( this.Reveal.isScrollView() ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Prefer an explicit global preload setting\n\t\tlet preload = this.Reveal.getConfig().preloadIframes;\n\n\t\t// If no global setting is available, fall back on the element's\n\t\t// own preload setting\n\t\tif( typeof preload !== 'boolean' ) {\n\t\t\tpreload = element.hasAttribute( 'data-preload' );\n\t\t}\n\n\t\treturn preload;\n\t}\n\n\t/**\n\t * Called when the given slide is within the configured view\n\t * distance. Shows the slide element and loads any content\n\t * that is set to load lazily (data-src).\n\t *\n\t * @param {HTMLElement} slide Slide to show\n\t */\n\tload( slide, options = {} ) {\n\n\t\t// Show the slide element\n\t\tconst displayValue = this.Reveal.getConfig().display;\n\t\tif( displayValue.includes('!important') ) {\n\t\t\tconst value = displayValue.replace(/\\s*!important\\s*$/, '').trim();\n\t\t\tslide.style.setProperty('display', value, 'important');\n\t\t} else {\n\t\t\tslide.style.display = displayValue;\n\t\t}\n\n\t\t// Media and iframe elements with data-src attributes\n\t\tqueryAll( slide, 'img[data-src], video[data-src], audio[data-src], iframe[data-src]' ).forEach( element => {\n\t\t\tconst isIframe = element.tagName === 'IFRAME';\n\t\t\tif( !isIframe || this.shouldPreload( element ) ) {\n\t\t\t\telement.setAttribute( 'src', element.getAttribute( 'data-src' ) );\n\t\t\t\telement.setAttribute( 'data-lazy-loaded', '' );\n\t\t\t\telement.removeAttribute( 'data-src' );\n\n\t\t\t\tif( isIframe ) {\n\t\t\t\t\telement.addEventListener( 'load', this.preventIframeAutoFocus );\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\n\t\t// Media elements with <source> children\n\t\tqueryAll( slide, 'video, audio' ).forEach( media => {\n\t\t\tlet sources = 0;\n\n\t\t\tqueryAll( media, 'source[data-src]' ).forEach( source => {\n\t\t\t\tsource.setAttribute( 'src', source.getAttribute( 'data-src' ) );\n\t\t\t\tsource.removeAttribute( 'data-src' );\n\t\t\t\tsource.setAttribute( 'data-lazy-loaded', '' );\n\t\t\t\tsources += 1;\n\t\t\t} );\n\n\t\t\t// Enable inline video playback in mobile Safari\n\t\t\tif( isMobile && media.tagName === 'VIDEO' ) {\n\t\t\t\tmedia.setAttribute( 'playsinline', '' );\n\t\t\t}\n\n\t\t\t// If we rewrote sources for this video/audio element, we need\n\t\t\t// to manually tell it to load from its new origin\n\t\t\tif( sources > 0 ) {\n\t\t\t\tmedia.load();\n\t\t\t}\n\t\t} );\n\n\n\t\t// Show the corresponding background element\n\t\tlet background = slide.slideBackgroundElement;\n\t\tif( background ) {\n\t\t\tbackground.style.display = 'block';\n\n\t\t\tlet backgroundContent = slide.slideBackgroundContentElement;\n\t\t\tlet backgroundIframe = slide.getAttribute( 'data-background-iframe' );\n\n\t\t\t// If the background contains media, load it\n\t\t\tif( background.hasAttribute( 'data-loaded' ) === false ) {\n\t\t\t\tbackground.setAttribute( 'data-loaded', 'true' );\n\n\t\t\t\tlet backgroundImage = slide.getAttribute( 'data-background-image' ),\n\t\t\t\t\tbackgroundVideo = slide.getAttribute( 'data-background-video' ),\n\t\t\t\t\tbackgroundVideoLoop = slide.hasAttribute( 'data-background-video-loop' ),\n\t\t\t\t\tbackgroundVideoMuted = slide.hasAttribute( 'data-background-video-muted' );\n\n\t\t\t\t// Images\n\t\t\t\tif( backgroundImage ) {\n\t\t\t\t\t// base64\n\t\t\t\t\tif(  /^data:/.test( backgroundImage.trim() ) ) {\n\t\t\t\t\t\tbackgroundContent.style.backgroundImage = `url(${backgroundImage.trim()})`;\n\t\t\t\t\t}\n\t\t\t\t\t// URL(s)\n\t\t\t\t\telse {\n\t\t\t\t\t\tbackgroundContent.style.backgroundImage = backgroundImage.split( ',' ).map( background => {\n\t\t\t\t\t\t\t// Decode URL(s) that are already encoded first\n\t\t\t\t\t\t\tlet decoded = decodeURI(background.trim());\n\t\t\t\t\t\t\treturn `url(${encodeRFC3986URI(decoded)})`;\n\t\t\t\t\t\t}).join( ',' );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Videos\n\t\t\t\telse if ( backgroundVideo ) {\n\t\t\t\t\tlet video = document.createElement( 'video' );\n\n\t\t\t\t\tif( backgroundVideoLoop ) {\n\t\t\t\t\t\tvideo.setAttribute( 'loop', '' );\n\t\t\t\t\t}\n\n\t\t\t\t\tif( backgroundVideoMuted || this.Reveal.isSpeakerNotes() ) {\n\t\t\t\t\t\tvideo.muted = true;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Enable inline playback in mobile Safari\n\t\t\t\t\t//\n\t\t\t\t\t// Mute is required for video to play when using\n\t\t\t\t\t// swipe gestures to navigate since they don't\n\t\t\t\t\t// count as direct user actions :'(\n\t\t\t\t\tif( isMobile ) {\n\t\t\t\t\t\tvideo.muted = true;\n\t\t\t\t\t\tvideo.setAttribute( 'playsinline', '' );\n\t\t\t\t\t}\n\n\t\t\t\t\t// Support comma separated lists of video sources\n\t\t\t\t\tbackgroundVideo.split( ',' ).forEach( source => {\n\t\t\t\t\t\tconst sourceElement = document.createElement( 'source' );\n\t\t\t\t\t\tsourceElement.setAttribute( 'src', source );\n\n\t\t\t\t\t\tlet type = getMimeTypeFromFile( source );\n\t\t\t\t\t\tif( type ) {\n\t\t\t\t\t\t\tsourceElement.setAttribute( 'type', type );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvideo.appendChild( sourceElement );\n\t\t\t\t\t} );\n\n\t\t\t\t\tbackgroundContent.appendChild( video );\n\t\t\t\t}\n\t\t\t\t// Iframes\n\t\t\t\telse if( backgroundIframe && options.excludeIframes !== true ) {\n\t\t\t\t\tlet iframe = document.createElement( 'iframe' );\n\t\t\t\t\tiframe.setAttribute( 'allowfullscreen', '' );\n\t\t\t\t\tiframe.setAttribute( 'mozallowfullscreen', '' );\n\t\t\t\t\tiframe.setAttribute( 'webkitallowfullscreen', '' );\n\t\t\t\t\tiframe.setAttribute( 'allow', 'autoplay' );\n\n\t\t\t\t\tiframe.setAttribute( 'data-src', backgroundIframe );\n\n\t\t\t\t\tiframe.style.width  = '100%';\n\t\t\t\t\tiframe.style.height = '100%';\n\t\t\t\t\tiframe.style.maxHeight = '100%';\n\t\t\t\t\tiframe.style.maxWidth = '100%';\n\n\t\t\t\t\tbackgroundContent.appendChild( iframe );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Start loading preloadable iframes\n\t\t\tlet backgroundIframeElement = backgroundContent.querySelector( 'iframe[data-src]' );\n\t\t\tif( backgroundIframeElement ) {\n\n\t\t\t\t// Check if this iframe is eligible to be preloaded\n\t\t\t\tif( this.shouldPreload( background ) && !/autoplay=(1|true|yes)/gi.test( backgroundIframe ) ) {\n\t\t\t\t\tif( backgroundIframeElement.getAttribute( 'src' ) !== backgroundIframe ) {\n\t\t\t\t\t\tbackgroundIframeElement.setAttribute( 'src', backgroundIframe );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.layout( slide );\n\n\t}\n\n\t/**\n\t * Applies JS-dependent layout helpers for the scope.\n\t */\n\tlayout( scopeElement ) {\n\n\t\t// Autosize text with the r-fit-text class based on the\n\t\t// size of its container. This needs to happen after the\n\t\t// slide is visible in order to measure the text.\n\t\tArray.from( scopeElement.querySelectorAll( '.r-fit-text' ) ).forEach( element => {\n\t\t\tfitty( element, {\n\t\t\t\tminSize: 24,\n\t\t\t\tmaxSize: this.Reveal.getConfig().height * 0.8,\n\t\t\t\tobserveMutations: false,\n\t\t\t\tobserveWindow: false\n\t\t\t} );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Unloads and hides the given slide. This is called when the\n\t * slide is moved outside of the configured view distance.\n\t *\n\t * @param {HTMLElement} slide\n\t */\n\tunload( slide ) {\n\n\t\t// Hide the slide element\n\t\tslide.style.display = 'none';\n\n\t\t// Hide the corresponding background element\n\t\tlet background = this.Reveal.getSlideBackground( slide );\n\t\tif( background ) {\n\t\t\tbackground.style.display = 'none';\n\n\t\t\t// Unload any background iframes\n\t\t\tqueryAll( background, 'iframe[src]' ).forEach( element => {\n\t\t\t\telement.removeAttribute( 'src' );\n\t\t\t} );\n\t\t}\n\n\t\t// Reset lazy-loaded media elements with src attributes\n\t\tqueryAll( slide, 'video[data-lazy-loaded][src], audio[data-lazy-loaded][src], iframe[data-lazy-loaded][src]' ).forEach( element => {\n\t\t\telement.setAttribute( 'data-src', element.getAttribute( 'src' ) );\n\t\t\telement.removeAttribute( 'src' );\n\t\t} );\n\n\t\t// Reset lazy-loaded media elements with <source> children\n\t\tqueryAll( slide, 'video[data-lazy-loaded] source[src], audio source[src]' ).forEach( source => {\n\t\t\tsource.setAttribute( 'data-src', source.getAttribute( 'src' ) );\n\t\t\tsource.removeAttribute( 'src' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Enforces origin-specific format rules for embedded media.\n\t */\n\tformatEmbeddedContent() {\n\n\t\tlet _appendParamToIframeSource = ( sourceAttribute, sourceURL, param ) => {\n\t\t\tqueryAll( this.Reveal.getSlidesElement(), 'iframe['+ sourceAttribute +'*=\"'+ sourceURL +'\"]' ).forEach( el => {\n\t\t\t\tlet src = el.getAttribute( sourceAttribute );\n\t\t\t\tif( src && src.indexOf( param ) === -1 ) {\n\t\t\t\t\tel.setAttribute( sourceAttribute, src + ( !/\\?/.test( src ) ? '?' : '&' ) + param );\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\t// YouTube frames must include \"?enablejsapi=1\"\n\t\t_appendParamToIframeSource( 'src', 'youtube.com/embed/', 'enablejsapi=1' );\n\t\t_appendParamToIframeSource( 'data-src', 'youtube.com/embed/', 'enablejsapi=1' );\n\n\t\t// Vimeo frames must include \"?api=1\"\n\t\t_appendParamToIframeSource( 'src', 'player.vimeo.com/', 'api=1' );\n\t\t_appendParamToIframeSource( 'data-src', 'player.vimeo.com/', 'api=1' );\n\n\t}\n\n\t/**\n\t * Start playback of any embedded content inside of\n\t * the given element.\n\t *\n\t * @param {HTMLElement} element\n\t */\n\tstartEmbeddedContent( element ) {\n\n\t\tif( element ) {\n\n\t\t\tconst isSpeakerNotesWindow = this.Reveal.isSpeakerNotes();\n\n\t\t\t// Restart GIFs\n\t\t\tqueryAll( element, 'img[src$=\".gif\"]' ).forEach( el => {\n\t\t\t\t// Setting the same unchanged source like this was confirmed\n\t\t\t\t// to work in Chrome, FF & Safari\n\t\t\t\tel.setAttribute( 'src', el.getAttribute( 'src' ) );\n\t\t\t} );\n\n\t\t\t// HTML5 media elements\n\t\t\tqueryAll( element, 'video, audio' ).forEach( el => {\n\t\t\t\tif( closest( el, '.fragment' ) && !closest( el, '.fragment.visible' ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Prefer an explicit global autoplay setting\n\t\t\t\tlet autoplay = this.Reveal.getConfig().autoPlayMedia;\n\n\t\t\t\t// If no global setting is available, fall back on the element's\n\t\t\t\t// own autoplay setting\n\t\t\t\tif( typeof autoplay !== 'boolean' ) {\n\t\t\t\t\tautoplay = el.hasAttribute( 'data-autoplay' ) || !!closest( el, '.slide-background' );\n\t\t\t\t}\n\n\t\t\t\tif( autoplay && typeof el.play === 'function' ) {\n\n\t\t\t\t\t// In the speaker view we only auto-play muted media\n\t\t\t\t\tif( isSpeakerNotesWindow && !el.muted ) return;\n\n\t\t\t\t\t// If the media is ready, start playback\n\t\t\t\t\tif( el.readyState > 1 ) {\n\t\t\t\t\t\tthis.startEmbeddedMedia( { target: el } );\n\t\t\t\t\t}\n\t\t\t\t\t// Mobile devices never fire a loaded event so instead\n\t\t\t\t\t// of waiting, we initiate playback\n\t\t\t\t\telse if( isMobile ) {\n\t\t\t\t\t\tlet promise = el.play();\n\n\t\t\t\t\t\tel.addEventListener( 'canplay', this.ensureMobileMediaPlaying );\n\n\t\t\t\t\t\t// If autoplay does not work, ensure that the controls are visible so\n\t\t\t\t\t\t// that the viewer can start the media on their own\n\t\t\t\t\t\tif( promise && typeof promise.catch === 'function' && el.controls === false ) {\n\t\t\t\t\t\t\tpromise\n\t\t\t\t\t\t\t.then( () => {\n\t\t\t\t\t\t\t\tthis.allowedToPlay = true;\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.catch( () => {\n\t\t\t\t\t\t\t\tel.controls = true;\n\n\t\t\t\t\t\t\t\t// Once the video does start playing, hide the controls again\n\t\t\t\t\t\t\t\tel.addEventListener( 'play', () => {\n\t\t\t\t\t\t\t\t\tel.controls = false;\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// If the media isn't loaded, wait before playing\n\t\t\t\t\telse {\n\t\t\t\t\t\tel.removeEventListener( 'loadeddata', this.startEmbeddedMedia ); // remove first to avoid dupes\n\t\t\t\t\t\tel.addEventListener( 'loadeddata', this.startEmbeddedMedia );\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t// Don't play iframe content in the speaker view since we can't\n\t\t\t// guarantee that it's muted\n\t\t\tif( !isSpeakerNotesWindow ) {\n\n\t\t\t\t// Normal iframes\n\t\t\t\tqueryAll( element, 'iframe[src]' ).forEach( el => {\n\t\t\t\t\tif( closest( el, '.fragment' ) && !closest( el, '.fragment.visible' ) ) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.startEmbeddedIframe( { target: el } );\n\t\t\t\t} );\n\n\t\t\t\t// Lazy loading iframes\n\t\t\t\tqueryAll( element, 'iframe[data-src]' ).forEach( el => {\n\t\t\t\t\tif( closest( el, '.fragment' ) && !closest( el, '.fragment.visible' ) ) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif( el.getAttribute( 'src' ) !== el.getAttribute( 'data-src' ) ) {\n\t\t\t\t\t\tel.removeEventListener( 'load', this.startEmbeddedIframe ); // remove first to avoid dupes\n\t\t\t\t\t\tel.addEventListener( 'load', this.startEmbeddedIframe );\n\t\t\t\t\t\tel.setAttribute( 'src', el.getAttribute( 'data-src' ) );\n\t\t\t\t\t}\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Ensure that an HTMLMediaElement is playing on mobile devices.\n\t *\n\t * This is a workaround for a bug in mobile Safari where\n\t * the media fails to display if many videos are started\n\t * at the same moment. When this happens, Mobile Safari\n\t * reports the video is playing, and the current time\n\t * advances, but nothing is visible.\n\t *\n\t * @param {Event} event\n\t */\n\tensureMobileMediaPlaying( event ) {\n\n\t\tconst el = event.target;\n\n\t\t// Ignore this check incompatible browsers\n\t\tif( typeof el.getVideoPlaybackQuality !== 'function' ) {\n\t\t\treturn;\n\t\t}\n\n\t\tsetTimeout( () => {\n\n\t\t\tconst playing = el.paused === false;\n\t\t\tconst totalFrames = el.getVideoPlaybackQuality().totalVideoFrames;\n\n\t\t\tif( playing && totalFrames === 0 ) {\n\t\t\t\tel.load();\n\t\t\t\tel.play();\n\t\t\t}\n\n\t\t}, 1000 );\n\n\t}\n\n\t/**\n\t * Starts playing an embedded video/audio element after\n\t * it has finished loading.\n\t *\n\t * @param {object} event\n\t */\n\tstartEmbeddedMedia( event ) {\n\n\t\tlet isAttachedToDOM = !!closest( event.target, 'html' ),\n\t\t\tisVisible  \t\t= !!closest( event.target, '.present' );\n\n\t\tif( isAttachedToDOM && isVisible ) {\n\t\t\t// Don't restart if media is already playing\n\t\t\tif( event.target.paused || event.target.ended ) {\n\t\t\t\tevent.target.currentTime = 0;\n\t\t\t\tconst promise = event.target.play();\n\n\t\t\t\tif( promise && typeof promise.catch === 'function' ) {\n\t\t\t\t\tpromise\n\t\t\t\t\t\t.then( () => {\n\t\t\t\t\t\t\tthis.allowedToPlay = true;\n\t\t\t\t\t\t} )\n\t\t\t\t\t\t.catch( ( error ) => {\n\t\t\t\t\t\t\tif( error.name === 'NotAllowedError' ) {\n\t\t\t\t\t\t\t\tthis.allowedToPlay = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tevent.target.removeEventListener( 'loadeddata', this.startEmbeddedMedia );\n\n\t}\n\n\t/**\n\t * \"Starts\" the content of an embedded iframe using the\n\t * postMessage API.\n\t *\n\t * @param {object} event\n\t */\n\tstartEmbeddedIframe( event ) {\n\n\t\tlet iframe = event.target;\n\n\t\tthis.preventIframeAutoFocus( event );\n\n\t\tif( iframe && iframe.contentWindow ) {\n\n\t\t\tlet isAttachedToDOM = !!closest( event.target, 'html' ),\n\t\t\t\tisVisible  \t\t= !!closest( event.target, '.present' );\n\n\t\t\tif( isAttachedToDOM && isVisible ) {\n\n\t\t\t\t// Prefer an explicit global autoplay setting\n\t\t\t\tlet autoplay = this.Reveal.getConfig().autoPlayMedia;\n\n\t\t\t\t// If no global setting is available, fall back on the element's\n\t\t\t\t// own autoplay setting\n\t\t\t\tif( typeof autoplay !== 'boolean' ) {\n\t\t\t\t\tautoplay = iframe.hasAttribute( 'data-autoplay' ) || !!closest( iframe, '.slide-background' );\n\t\t\t\t}\n\n\t\t\t\t// YouTube postMessage API\n\t\t\t\tif( /youtube\\.com\\/embed\\//.test( iframe.getAttribute( 'src' ) ) && autoplay ) {\n\t\t\t\t\tiframe.contentWindow.postMessage( '{\"event\":\"command\",\"func\":\"playVideo\",\"args\":\"\"}', '*' );\n\t\t\t\t}\n\t\t\t\t// Vimeo postMessage API\n\t\t\t\telse if( /player\\.vimeo\\.com\\//.test( iframe.getAttribute( 'src' ) ) && autoplay ) {\n\t\t\t\t\tiframe.contentWindow.postMessage( '{\"method\":\"play\"}', '*' );\n\t\t\t\t}\n\t\t\t\t// Generic postMessage API\n\t\t\t\telse {\n\t\t\t\t\tiframe.contentWindow.postMessage( 'slide:start', '*' );\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Stop playback of any embedded content inside of\n\t * the targeted slide.\n\t *\n\t * @param {HTMLElement} element\n\t */\n\tstopEmbeddedContent( element, options = {} ) {\n\n\t\toptions = extend( {\n\t\t\t// Defaults\n\t\t\tunloadIframes: true\n\t\t}, options );\n\n\t\tif( element && element.parentNode ) {\n\t\t\t// HTML5 media elements\n\t\t\tqueryAll( element, 'video, audio' ).forEach( el => {\n\t\t\t\tif( !el.hasAttribute( 'data-ignore' ) && typeof el.pause === 'function' ) {\n\t\t\t\t\tel.setAttribute('data-paused-by-reveal', '');\n\t\t\t\t\tel.pause();\n\n\t\t\t\t\tif( isMobile ) {\n\t\t\t\t\t\tel.removeEventListener( 'canplay', this.ensureMobileMediaPlaying );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t// Generic postMessage API for non-lazy loaded iframes\n\t\t\tqueryAll( element, 'iframe' ).forEach( el => {\n\t\t\t\tif( el.contentWindow ) el.contentWindow.postMessage( 'slide:stop', '*' );\n\t\t\t\tel.removeEventListener( 'load', this.preventIframeAutoFocus );\n\t\t\t\tel.removeEventListener( 'load', this.startEmbeddedIframe );\n\t\t\t});\n\n\t\t\t// YouTube postMessage API\n\t\t\tqueryAll( element, 'iframe[src*=\"youtube.com/embed/\"]' ).forEach( el => {\n\t\t\t\tif( !el.hasAttribute( 'data-ignore' ) && el.contentWindow && typeof el.contentWindow.postMessage === 'function' ) {\n\t\t\t\t\tel.contentWindow.postMessage( '{\"event\":\"command\",\"func\":\"pauseVideo\",\"args\":\"\"}', '*' );\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Vimeo postMessage API\n\t\t\tqueryAll( element, 'iframe[src*=\"player.vimeo.com/\"]' ).forEach( el => {\n\t\t\t\tif( !el.hasAttribute( 'data-ignore' ) && el.contentWindow && typeof el.contentWindow.postMessage === 'function' ) {\n\t\t\t\t\tel.contentWindow.postMessage( '{\"method\":\"pause\"}', '*' );\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif( options.unloadIframes === true ) {\n\t\t\t\t// Unload lazy-loaded iframes\n\t\t\t\tqueryAll( element, 'iframe[data-src]' ).forEach( el => {\n\t\t\t\t\t// Only removing the src doesn't actually unload the frame\n\t\t\t\t\t// in all browsers (Firefox) so we set it to blank first\n\t\t\t\t\tel.setAttribute( 'src', 'about:blank' );\n\t\t\t\t\tel.removeAttribute( 'src' );\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks whether media playback is blocked by the browser. This\n\t * typically happens when media playback is initiated without a\n\t * direct user interaction.\n\t */\n\tisNotAllowedToPlay() {\n\n\t\treturn !this.allowedToPlay;\n\n\t}\n\n\t/**\n\t * Prevents iframes from automatically focusing themselves.\n\t *\n\t * @param {Event} event\n\t */\n\tpreventIframeAutoFocus( event ) {\n\n\t\tconst iframe = event.target;\n\n\t\tconsole.log(111)\n\n\t\tif( iframe && this.Reveal.getConfig().preventIframeAutoFocus ) {\n\n\t\t\tlet elapsed = 0;\n\t\t\tconst interval = 100;\n\t\t\tconst maxTime = 1000;\n\t\t\tconst checkFocus = () => {\n\t\t\t\tif( document.activeElement === iframe ) {\n\t\t\t\t\tdocument.activeElement.blur();\n\t\t\t\t} else if( elapsed < maxTime ) {\n\t\t\t\t\telapsed += interval;\n\t\t\t\t\tsetTimeout( checkFocus, interval );\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tsetTimeout( checkFocus, interval );\n\n\t\t}\n\n\t}\n\n}\n","\nexport const SLIDES_SELECTOR = '.slides section';\nexport const HORIZONTAL_SLIDES_SELECTOR = '.slides>section';\nexport const VERTICAL_SLIDES_SELECTOR = '.slides>section.present>section';\nexport const HORIZONTAL_BACKGROUNDS_SELECTOR = '.backgrounds>.slide-background';\n\n// Methods that may not be invoked via the postMessage API\nexport const POST_MESSAGE_METHOD_BLACKLIST = /registerPlugin|registerKeyboardShortcut|addKeyBinding|addEventListener|showPreview/;\n\n// Regex for retrieving the fragment style from a class attribute\nexport const FRAGMENT_STYLE_REGEX = /fade-(down|up|right|left|out|in-then-out|in-then-semi-out)|semi-fade-out|current-visible|shrink|grow/;\n\n// Slide number formats\nexport const SLIDE_NUMBER_FORMAT_HORIZONTAL_DOT_VERTICAL = 'h.v';\nexport const SLIDE_NUMBER_FORMAT_HORIZONTAL_SLASH_VERTICAL = 'h/v';\nexport const SLIDE_NUMBER_FORMAT_CURRENT = 'c';\nexport const SLIDE_NUMBER_FORMAT_CURRENT_SLASH_TOTAL = 'c/t';","import {\n\tSLIDE_NUMBER_FORMAT_CURRENT,\n\tSLIDE_NUMBER_FORMAT_CURRENT_SLASH_TOTAL,\n\tSLIDE_NUMBER_FORMAT_HORIZONTAL_DOT_VERTICAL,\n\tSLIDE_NUMBER_FORMAT_HORIZONTAL_SLASH_VERTICAL\n} from \"../utils/constants\";\n\n/**\n * Handles the display of reveal.js' optional slide number.\n */\nexport default class SlideNumber {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'slide-number';\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tlet slideNumberDisplay = 'none';\n\t\tif( config.slideNumber && !this.Reveal.isPrintView() ) {\n\t\t\tif( config.showSlideNumber === 'all' ) {\n\t\t\t\tslideNumberDisplay = 'block';\n\t\t\t}\n\t\t\telse if( config.showSlideNumber === 'speaker' && this.Reveal.isSpeakerNotes() ) {\n\t\t\t\tslideNumberDisplay = 'block';\n\t\t\t}\n\t\t}\n\n\t\tthis.element.style.display = slideNumberDisplay;\n\n\t}\n\n\t/**\n\t * Updates the slide number to match the current slide.\n\t */\n\tupdate() {\n\n\t\t// Update slide number if enabled\n\t\tif( this.Reveal.getConfig().slideNumber && this.element ) {\n\t\t\tthis.element.innerHTML = this.getSlideNumber();\n\t\t}\n\n\t}\n\n\t/**\n\t * Returns the HTML string corresponding to the current slide\n\t * number, including formatting.\n\t */\n\tgetSlideNumber( slide = this.Reveal.getCurrentSlide() ) {\n\n\t\tlet config = this.Reveal.getConfig();\n\t\tlet value;\n\t\tlet format = SLIDE_NUMBER_FORMAT_HORIZONTAL_DOT_VERTICAL;\n\n\t\tif ( typeof config.slideNumber === 'function' ) {\n\t\t\tvalue = config.slideNumber( slide );\n\t\t} else {\n\t\t\t// Check if a custom number format is available\n\t\t\tif( typeof config.slideNumber === 'string' ) {\n\t\t\t\tformat = config.slideNumber;\n\t\t\t}\n\n\t\t\t// If there are ONLY vertical slides in this deck, always use\n\t\t\t// a flattened slide number\n\t\t\tif( !/c/.test( format ) && this.Reveal.getHorizontalSlides().length === 1 ) {\n\t\t\t\tformat = SLIDE_NUMBER_FORMAT_CURRENT;\n\t\t\t}\n\n\t\t\t// Offset the current slide number by 1 to make it 1-indexed\n\t\t\tlet horizontalOffset = slide && slide.dataset.visibility === 'uncounted' ? 0 : 1;\n\n\t\t\tvalue = [];\n\t\t\tswitch( format ) {\n\t\t\t\tcase SLIDE_NUMBER_FORMAT_CURRENT:\n\t\t\t\t\tvalue.push( this.Reveal.getSlidePastCount( slide ) + horizontalOffset );\n\t\t\t\t\tbreak;\n\t\t\t\tcase SLIDE_NUMBER_FORMAT_CURRENT_SLASH_TOTAL:\n\t\t\t\t\tvalue.push( this.Reveal.getSlidePastCount( slide ) + horizontalOffset, '/', this.Reveal.getTotalSlides() );\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tlet indices = this.Reveal.getIndices( slide );\n\t\t\t\t\tvalue.push( indices.h + horizontalOffset );\n\t\t\t\t\tlet sep = format === SLIDE_NUMBER_FORMAT_HORIZONTAL_SLASH_VERTICAL ? '/' : '.';\n\t\t\t\t\tif( this.Reveal.isVerticalSlide( slide ) ) value.push( sep, indices.v + 1 );\n\t\t\t}\n\t\t}\n\n\t\tlet url = '#' + this.Reveal.location.getHash( slide );\n\t\treturn this.formatNumber( value[0], value[1], value[2], url );\n\n\t}\n\n\t/**\n\t * Applies HTML formatting to a slide number before it's\n\t * written to the DOM.\n\t *\n\t * @param {number} a Current slide\n\t * @param {string} delimiter Character to separate slide numbers\n\t * @param {(number|*)} b Total slides\n\t * @param {HTMLElement} [url='#'+locationHash()] The url to link to\n\t * @return {string} HTML string fragment\n\t */\n\tformatNumber( a, delimiter, b, url = '#' + this.Reveal.location.getHash() ) {\n\n\t\tif( typeof b === 'number' && !isNaN( b ) ) {\n\t\t\treturn  `<a href=\"${url}\">\n\t\t\t\t\t<span class=\"slide-number-a\">${a}</span>\n\t\t\t\t\t<span class=\"slide-number-delimiter\">${delimiter}</span>\n\t\t\t\t\t<span class=\"slide-number-b\">${b}</span>\n\t\t\t\t\t</a>`;\n\t\t}\n\t\telse {\n\t\t\treturn `<a href=\"${url}\">\n\t\t\t\t\t<span class=\"slide-number-a\">${a}</span>\n\t\t\t\t\t</a>`;\n\t\t}\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.element.remove();\n\n\t}\n\n}","import {\n\tSLIDE_NUMBER_FORMAT_CURRENT,\n\tSLIDE_NUMBER_FORMAT_CURRENT_SLASH_TOTAL\n} from \"../utils/constants\";\n\n/**\n * Makes it possible to jump to a slide by entering its\n * slide number or id.\n */\nexport default class JumpToSlide {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.onInput = this.onInput.bind( this );\n\t\tthis.onBlur = this.onBlur.bind( this );\n\t\tthis.onKeyDown = this.onKeyDown.bind( this );\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'jump-to-slide';\n\n    this.jumpInput = document.createElement( 'input' );\n    this.jumpInput.type = 'text';\n    this.jumpInput.className = 'jump-to-slide-input';\n    this.jumpInput.placeholder = 'Jump to slide';\n\t\tthis.jumpInput.addEventListener( 'input', this.onInput );\n\t\tthis.jumpInput.addEventListener( 'keydown', this.onKeyDown );\n\t\tthis.jumpInput.addEventListener( 'blur', this.onBlur );\n\n    this.element.appendChild( this.jumpInput );\n\n\t}\n\n\tshow() {\n\n\t\tthis.indicesOnShow = this.Reveal.getIndices();\n\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\t\tthis.jumpInput.focus();\n\n\t}\n\n\thide() {\n\n\t\tif( this.isVisible() ) {\n\t\t\tthis.element.remove();\n\t\t\tthis.jumpInput.value = '';\n\n\t\t\tclearTimeout( this.jumpTimeout );\n\t\t\tdelete this.jumpTimeout;\n\t\t}\n\n\t}\n\n\tisVisible() {\n\n\t\treturn !!this.element.parentNode;\n\n\t}\n\n\t/**\n\t * Parses the current input and jumps to the given slide.\n\t */\n\tjump() {\n\n\t\tclearTimeout( this.jumpTimeout );\n\t\tdelete this.jumpTimeout;\n\n\t\tlet query = this.jumpInput.value.trim( '' );\n\t\tlet indices;\n\n\t\t// When slide numbers are formatted to be a single linear number\n\t\t// (instead of showing a separate horizontal/vertical index) we\n\t\t// use the same format for slide jumps\n\t\tif( /^\\d+$/.test( query ) ) {\n\t\t\tconst slideNumberFormat = this.Reveal.getConfig().slideNumber;\n\t\t\tif( slideNumberFormat === SLIDE_NUMBER_FORMAT_CURRENT || slideNumberFormat === SLIDE_NUMBER_FORMAT_CURRENT_SLASH_TOTAL ) {\n\t\t\t\tconst slide = this.Reveal.getSlides()[ parseInt( query, 10 ) - 1 ];\n\t\t\t\tif( slide ) {\n\t\t\t\t\tindices = this.Reveal.getIndices( slide );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif( !indices ) {\n\t\t\t// If the query uses \"horizontal.vertical\" format, convert to\n\t\t\t// \"horizontal/vertical\" so that our URL parser can understand\n\t\t\tif( /^\\d+\\.\\d+$/.test( query ) ) {\n\t\t\t\tquery = query.replace( '.', '/' );\n\t\t\t}\n\n\t\t\tindices = this.Reveal.location.getIndicesFromHash( query, { oneBasedIndex: true } );\n\t\t}\n\n\t\t// Still no valid index? Fall back on a text search\n\t\tif( !indices && /\\S+/i.test( query ) && query.length > 1 ) {\n\t\t\tindices = this.search( query );\n\t\t}\n\n\t\tif( indices && query !== '' ) {\n\t\t\tthis.Reveal.slide( indices.h, indices.v, indices.f );\n\t\t\treturn true;\n\t\t}\n\t\telse {\n\t\t\tthis.Reveal.slide( this.indicesOnShow.h, this.indicesOnShow.v, this.indicesOnShow.f );\n\t\t\treturn false;\n\t\t}\n\n\t}\n\n\tjumpAfter( delay ) {\n\n\t\tclearTimeout( this.jumpTimeout );\n\t\tthis.jumpTimeout = setTimeout( () => this.jump(), delay );\n\n\t}\n\n\t/**\n\t * A lofi search that looks for the given query in all\n\t * of our slides and returns the first match.\n\t */\n\tsearch( query ) {\n\n\t\tconst regex = new RegExp( '\\\\b' + query.trim() + '\\\\b', 'i' );\n\n\t\tconst slide = this.Reveal.getSlides().find( ( slide ) => {\n\t\t\treturn regex.test( slide.innerText );\n\t\t} );\n\n\t\tif( slide ) {\n\t\t\treturn this.Reveal.getIndices( slide );\n\t\t}\n\t\telse {\n\t\t\treturn null;\n\t\t}\n\n\t}\n\n\t/**\n\t * Reverts back to the slide we were on when jump to slide was\n\t * invoked.\n\t */\n\tcancel() {\n\n\t\tthis.Reveal.slide( this.indicesOnShow.h, this.indicesOnShow.v, this.indicesOnShow.f );\n\t\tthis.hide();\n\n\t}\n\n\tconfirm() {\n\n\t\tthis.jump();\n\t\tthis.hide();\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.jumpInput.removeEventListener( 'input', this.onInput );\n\t\tthis.jumpInput.removeEventListener( 'keydown', this.onKeyDown );\n\t\tthis.jumpInput.removeEventListener( 'blur', this.onBlur );\n\n\t\tthis.element.remove();\n\n\t}\n\n\tonKeyDown( event ) {\n\n\t\tif( event.keyCode === 13 ) {\n\t\t\tthis.confirm();\n\t\t}\n\t\telse if( event.keyCode === 27 ) {\n\t\t\tthis.cancel();\n\n\t\t\tevent.stopImmediatePropagation();\n\t\t}\n\n\t}\n\n\tonInput( event ) {\n\n\t\tthis.jumpAfter( 200 );\n\n\t}\n\n\tonBlur() {\n\n\t\tsetTimeout( () => this.hide(), 1 );\n\n\t}\n\n}","/**\n * Converts various color input formats to an {r:0,g:0,b:0} object.\n *\n * @param {string} color The string representation of a color\n * @example\n * colorToRgb('#000');\n * @example\n * colorToRgb('#000000');\n * @example\n * colorToRgb('rgb(0,0,0)');\n * @example\n * colorToRgb('rgba(0,0,0)');\n *\n * @return {{r: number, g: number, b: number, [a]: number}|null}\n */\nexport const colorToRgb = ( color ) => {\n\n\tlet hex3 = color.match( /^#([0-9a-f]{3})$/i );\n\tif( hex3 && hex3[1] ) {\n\t\thex3 = hex3[1];\n\t\treturn {\n\t\t\tr: parseInt( hex3.charAt( 0 ), 16 ) * 0x11,\n\t\t\tg: parseInt( hex3.charAt( 1 ), 16 ) * 0x11,\n\t\t\tb: parseInt( hex3.charAt( 2 ), 16 ) * 0x11\n\t\t};\n\t}\n\n\tlet hex6 = color.match( /^#([0-9a-f]{6})$/i );\n\tif( hex6 && hex6[1] ) {\n\t\thex6 = hex6[1];\n\t\treturn {\n\t\t\tr: parseInt( hex6.slice( 0, 2 ), 16 ),\n\t\t\tg: parseInt( hex6.slice( 2, 4 ), 16 ),\n\t\t\tb: parseInt( hex6.slice( 4, 6 ), 16 )\n\t\t};\n\t}\n\n\tlet rgb = color.match( /^rgb\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)$/i );\n\tif( rgb ) {\n\t\treturn {\n\t\t\tr: parseInt( rgb[1], 10 ),\n\t\t\tg: parseInt( rgb[2], 10 ),\n\t\t\tb: parseInt( rgb[3], 10 )\n\t\t};\n\t}\n\n\tlet rgba = color.match( /^rgba\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*([\\d]+|[\\d]*.[\\d]+)\\s*\\)$/i );\n\tif( rgba ) {\n\t\treturn {\n\t\t\tr: parseInt( rgba[1], 10 ),\n\t\t\tg: parseInt( rgba[2], 10 ),\n\t\t\tb: parseInt( rgba[3], 10 ),\n\t\t\ta: parseFloat( rgba[4] )\n\t\t};\n\t}\n\n\treturn null;\n\n}\n\n/**\n * Calculates brightness on a scale of 0-255.\n *\n * @param {string} color See colorToRgb for supported formats.\n * @see {@link colorToRgb}\n */\nexport const colorBrightness = ( color ) => {\n\n\tif( typeof color === 'string' ) color = colorToRgb( color );\n\n\tif( color ) {\n\t\treturn ( color.r * 299 + color.g * 587 + color.b * 114 ) / 1000;\n\t}\n\n\treturn null;\n\n}","import { queryAll } from '../utils/util.js'\nimport { colorToRgb, colorBrightness } from '../utils/color.js'\n\n/**\n * Creates and updates slide backgrounds.\n */\nexport default class Backgrounds {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'backgrounds';\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t}\n\n\t/**\n\t * Creates the slide background elements and appends them\n\t * to the background container. One element is created per\n\t * slide no matter if the given slide has visible background.\n\t */\n\tcreate() {\n\n\t\t// Clear prior backgrounds\n\t\tthis.element.innerHTML = '';\n\t\tthis.element.classList.add( 'no-transition' );\n\n\t\t// Iterate over all horizontal slides\n\t\tthis.Reveal.getHorizontalSlides().forEach( slideh => {\n\n\t\t\tlet backgroundStack = this.createBackground( slideh, this.element );\n\n\t\t\t// Iterate over all vertical slides\n\t\t\tqueryAll( slideh, 'section' ).forEach( slidev => {\n\n\t\t\t\tthis.createBackground( slidev, backgroundStack );\n\n\t\t\t\tbackgroundStack.classList.add( 'stack' );\n\n\t\t\t} );\n\n\t\t} );\n\n\t\t// Add parallax background if specified\n\t\tif( this.Reveal.getConfig().parallaxBackgroundImage ) {\n\n\t\t\tthis.element.style.backgroundImage = 'url(\"' + this.Reveal.getConfig().parallaxBackgroundImage + '\")';\n\t\t\tthis.element.style.backgroundSize = this.Reveal.getConfig().parallaxBackgroundSize;\n\t\t\tthis.element.style.backgroundRepeat = this.Reveal.getConfig().parallaxBackgroundRepeat;\n\t\t\tthis.element.style.backgroundPosition = this.Reveal.getConfig().parallaxBackgroundPosition;\n\n\t\t\t// Make sure the below properties are set on the element - these properties are\n\t\t\t// needed for proper transitions to be set on the element via CSS. To remove\n\t\t\t// annoying background slide-in effect when the presentation starts, apply\n\t\t\t// these properties after short time delay\n\t\t\tsetTimeout( () => {\n\t\t\t\tthis.Reveal.getRevealElement().classList.add( 'has-parallax-background' );\n\t\t\t}, 1 );\n\n\t\t}\n\t\telse {\n\n\t\t\tthis.element.style.backgroundImage = '';\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'has-parallax-background' );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Creates a background for the given slide.\n\t *\n\t * @param {HTMLElement} slide\n\t * @param {HTMLElement} container The element that the background\n\t * should be appended to\n\t * @return {HTMLElement} New background div\n\t */\n\tcreateBackground( slide, container ) {\n\n\t\t// Main slide background element\n\t\tlet element = document.createElement( 'div' );\n\t\telement.className = 'slide-background ' + slide.className.replace( /present|past|future/, '' );\n\n\t\t// Inner background element that wraps images/videos/iframes\n\t\tlet contentElement = document.createElement( 'div' );\n\t\tcontentElement.className = 'slide-background-content';\n\n\t\telement.appendChild( contentElement );\n\t\tcontainer.appendChild( element );\n\n\t\tslide.slideBackgroundElement = element;\n\t\tslide.slideBackgroundContentElement = contentElement;\n\n\t\t// Syncs the background to reflect all current background settings\n\t\tthis.sync( slide );\n\n\t\treturn element;\n\n\t}\n\n\t/**\n\t * Renders all of the visual properties of a slide background\n\t * based on the various background attributes.\n\t *\n\t * @param {HTMLElement} slide\n\t */\n\tsync( slide ) {\n\n\t\tconst element = slide.slideBackgroundElement,\n\t\t\tcontentElement = slide.slideBackgroundContentElement;\n\n\t\tconst data = {\n\t\t\tbackground: slide.getAttribute( 'data-background' ),\n\t\t\tbackgroundSize: slide.getAttribute( 'data-background-size' ),\n\t\t\tbackgroundImage: slide.getAttribute( 'data-background-image' ),\n\t\t\tbackgroundVideo: slide.getAttribute( 'data-background-video' ),\n\t\t\tbackgroundIframe: slide.getAttribute( 'data-background-iframe' ),\n\t\t\tbackgroundColor: slide.getAttribute( 'data-background-color' ),\n\t\t\tbackgroundGradient: slide.getAttribute( 'data-background-gradient' ),\n\t\t\tbackgroundRepeat: slide.getAttribute( 'data-background-repeat' ),\n\t\t\tbackgroundPosition: slide.getAttribute( 'data-background-position' ),\n\t\t\tbackgroundTransition: slide.getAttribute( 'data-background-transition' ),\n\t\t\tbackgroundOpacity: slide.getAttribute( 'data-background-opacity' ),\n\t\t};\n\n\t\tconst dataPreload = slide.hasAttribute( 'data-preload' );\n\n\t\t// Reset the prior background state in case this is not the\n\t\t// initial sync\n\t\tslide.classList.remove( 'has-dark-background' );\n\t\tslide.classList.remove( 'has-light-background' );\n\n\t\telement.removeAttribute( 'data-loaded' );\n\t\telement.removeAttribute( 'data-background-hash' );\n\t\telement.removeAttribute( 'data-background-size' );\n\t\telement.removeAttribute( 'data-background-transition' );\n\t\telement.style.backgroundColor = '';\n\n\t\tcontentElement.style.backgroundSize = '';\n\t\tcontentElement.style.backgroundRepeat = '';\n\t\tcontentElement.style.backgroundPosition = '';\n\t\tcontentElement.style.backgroundImage = '';\n\t\tcontentElement.style.opacity = '';\n\t\tcontentElement.innerHTML = '';\n\n\t\tif( data.background ) {\n\t\t\t// Auto-wrap image urls in url(...)\n\t\t\tif( /^(http|file|\\/\\/)/gi.test( data.background ) || /\\.(svg|png|jpg|jpeg|gif|bmp|webp)([?#\\s]|$)/gi.test( data.background ) ) {\n\t\t\t\tslide.setAttribute( 'data-background-image', data.background );\n\t\t\t}\n\t\t\telse {\n\t\t\t\telement.style.background = data.background;\n\t\t\t}\n\t\t}\n\n\t\t// Create a hash for this combination of background settings.\n\t\t// This is used to determine when two slide backgrounds are\n\t\t// the same.\n\t\tif( data.background || data.backgroundColor || data.backgroundGradient || data.backgroundImage || data.backgroundVideo || data.backgroundIframe ) {\n\t\t\telement.setAttribute( 'data-background-hash', data.background +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundSize +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundImage +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundVideo +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundIframe +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundColor +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundGradient +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundRepeat +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundPosition +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundTransition +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundOpacity );\n\t\t}\n\n\t\t// Additional and optional background properties\n\t\tif( data.backgroundSize ) element.setAttribute( 'data-background-size', data.backgroundSize );\n\t\tif( data.backgroundColor ) element.style.backgroundColor = data.backgroundColor;\n\t\tif( data.backgroundGradient ) element.style.backgroundImage = data.backgroundGradient;\n\t\tif( data.backgroundTransition ) element.setAttribute( 'data-background-transition', data.backgroundTransition );\n\n\t\tif( dataPreload ) element.setAttribute( 'data-preload', '' );\n\n\t\t// Background image options are set on the content wrapper\n\t\tif( data.backgroundSize ) contentElement.style.backgroundSize = data.backgroundSize;\n\t\tif( data.backgroundRepeat ) contentElement.style.backgroundRepeat = data.backgroundRepeat;\n\t\tif( data.backgroundPosition ) contentElement.style.backgroundPosition = data.backgroundPosition;\n\t\tif( data.backgroundOpacity ) contentElement.style.opacity = data.backgroundOpacity;\n\n\t\tconst contrastClass = this.getContrastClass( slide );\n\n\t\tif( typeof contrastClass === 'string' ) {\n\t\t\tslide.classList.add( contrastClass );\n\t\t}\n\n\t}\n\n\t/**\n\t * Returns a class name that can be applied to a slide to indicate\n\t * if it has a light or dark background.\n\t *\n\t * @param {*} slide\n\t *\n\t * @returns {string|null}\n\t */\n\tgetContrastClass( slide ) {\n\n\t\tconst element = slide.slideBackgroundElement;\n\n\t\t// If this slide has a background color, we add a class that\n\t\t// signals if it is light or dark. If the slide has no background\n\t\t// color, no class will be added\n\t\tlet contrastColor = slide.getAttribute( 'data-background-color' );\n\n\t\t// If no bg color was found, or it cannot be converted by colorToRgb, check the computed background\n\t\tif( !contrastColor || !colorToRgb( contrastColor ) ) {\n\t\t\tlet computedBackgroundStyle = window.getComputedStyle( element );\n\t\t\tif( computedBackgroundStyle && computedBackgroundStyle.backgroundColor ) {\n\t\t\t\tcontrastColor = computedBackgroundStyle.backgroundColor;\n\t\t\t}\n\t\t}\n\n\t\tif( contrastColor ) {\n\t\t\tconst rgb = colorToRgb( contrastColor );\n\n\t\t\t// Ignore fully transparent backgrounds. Some browsers return\n\t\t\t// rgba(0,0,0,0) when reading the computed background color of\n\t\t\t// an element with no background\n\t\t\tif( rgb && rgb.a !== 0 ) {\n\t\t\t\tif( colorBrightness( contrastColor ) < 128 ) {\n\t\t\t\t\treturn 'has-dark-background';\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn 'has-light-background';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t/**\n\t * Bubble the 'has-light-background'/'has-dark-background' classes.\n\t */\n\tbubbleSlideContrastClassToElement( slide, target ) {\n\n\t\t[ 'has-light-background', 'has-dark-background' ].forEach( classToBubble => {\n\t\t\tif( slide.classList.contains( classToBubble ) ) {\n\t\t\t\ttarget.classList.add( classToBubble );\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttarget.classList.remove( classToBubble );\n\t\t\t}\n\t\t}, this );\n\n\t}\n\n\t/**\n\t * Updates the background elements to reflect the current\n\t * slide.\n\t *\n\t * @param {boolean} includeAll If true, the backgrounds of\n\t * all vertical slides (not just the present) will be updated.\n\t */\n\tupdate( includeAll = false ) {\n\n\t\tlet config = this.Reveal.getConfig();\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tlet indices = this.Reveal.getIndices();\n\n\t\tlet currentBackground = null;\n\n\t\t// Reverse past/future classes when in RTL mode\n\t\tlet horizontalPast = config.rtl ? 'future' : 'past',\n\t\t\thorizontalFuture = config.rtl ? 'past' : 'future';\n\n\t\t// Update the classes of all backgrounds to match the\n\t\t// states of their slides (past/present/future)\n\t\tArray.from( this.element.childNodes ).forEach( ( backgroundh, h ) => {\n\n\t\t\tbackgroundh.classList.remove( 'past', 'present', 'future' );\n\n\t\t\tif( h < indices.h ) {\n\t\t\t\tbackgroundh.classList.add( horizontalPast );\n\t\t\t}\n\t\t\telse if ( h > indices.h ) {\n\t\t\t\tbackgroundh.classList.add( horizontalFuture );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbackgroundh.classList.add( 'present' );\n\n\t\t\t\t// Store a reference to the current background element\n\t\t\t\tcurrentBackground = backgroundh;\n\t\t\t}\n\n\t\t\tif( includeAll || h === indices.h ) {\n\t\t\t\tqueryAll( backgroundh, '.slide-background' ).forEach( ( backgroundv, v ) => {\n\n\t\t\t\t\tbackgroundv.classList.remove( 'past', 'present', 'future' );\n\n\t\t\t\t\tconst indexv = typeof indices.v === 'number' ? indices.v : 0;\n\n\t\t\t\t\tif( v < indexv ) {\n\t\t\t\t\t\tbackgroundv.classList.add( 'past' );\n\t\t\t\t\t}\n\t\t\t\t\telse if ( v > indexv ) {\n\t\t\t\t\t\tbackgroundv.classList.add( 'future' );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tbackgroundv.classList.add( 'present' );\n\n\t\t\t\t\t\t// Only if this is the present horizontal and vertical slide\n\t\t\t\t\t\tif( h === indices.h ) currentBackground = backgroundv;\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\t\t\t}\n\n\t\t} );\n\n\t\t// The previous background may refer to a DOM element that has\n\t\t// been removed after a presentation is synced & bgs are recreated\n\t\tif( this.previousBackground && !this.previousBackground.closest( 'body' ) ) {\n\t\t\tthis.previousBackground = null;\n\t\t}\n\n\t\tif( currentBackground && this.previousBackground ) {\n\n\t\t\t// Don't transition between identical backgrounds. This\n\t\t\t// prevents unwanted flicker.\n\t\t\tlet previousBackgroundHash = this.previousBackground.getAttribute( 'data-background-hash' );\n\t\t\tlet currentBackgroundHash = currentBackground.getAttribute( 'data-background-hash' );\n\n\t\t\tif( currentBackgroundHash && currentBackgroundHash === previousBackgroundHash && currentBackground !== this.previousBackground ) {\n\t\t\t\tthis.element.classList.add( 'no-transition' );\n\n\t\t\t\t// If multiple slides have the same background video, carry\n\t\t\t\t// the <video> element forward so that it plays continuously\n\t\t\t\t// across multiple slides\n\t\t\t\tconst currentVideo = currentBackground.querySelector( 'video' );\n\t\t\t\tconst previousVideo = this.previousBackground.querySelector( 'video' );\n\n\t\t\t\tif( currentVideo && previousVideo ) {\n\n\t\t\t\t\tconst currentVideoParent = currentVideo.parentNode;\n\t\t\t\t\tconst previousVideoParent = previousVideo.parentNode;\n\n\t\t\t\t\t// Swap the two videos\n\t\t\t\t\tpreviousVideoParent.appendChild( currentVideo );\n\t\t\t\t\tcurrentVideoParent.appendChild( previousVideo );\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\n\t\tconst backgroundChanged = currentBackground !== this.previousBackground;\n\n\t\t// Stop content inside of previous backgrounds\n\t\tif( backgroundChanged && this.previousBackground ) {\n\n\t\t\tthis.Reveal.slideContent.stopEmbeddedContent( this.previousBackground, { unloadIframes: !this.Reveal.slideContent.shouldPreload( this.previousBackground ) } );\n\n\t\t}\n\n\t\t// Start content in the current background\n\t\tif( backgroundChanged && currentBackground ) {\n\n\t\t\tthis.Reveal.slideContent.startEmbeddedContent( currentBackground );\n\n\t\t\tlet currentBackgroundContent = currentBackground.querySelector( '.slide-background-content' );\n\t\t\tif( currentBackgroundContent ) {\n\n\t\t\t\tlet backgroundImageURL = currentBackgroundContent.style.backgroundImage || '';\n\n\t\t\t\t// Restart GIFs (doesn't work in Firefox)\n\t\t\t\tif( /\\.gif/i.test( backgroundImageURL ) ) {\n\t\t\t\t\tcurrentBackgroundContent.style.backgroundImage = '';\n\t\t\t\t\twindow.getComputedStyle( currentBackgroundContent ).opacity;\n\t\t\t\t\tcurrentBackgroundContent.style.backgroundImage = backgroundImageURL;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.previousBackground = currentBackground;\n\n\t\t}\n\n\t\t// If there's a background brightness flag for this slide,\n\t\t// bubble it to the .reveal container\n\t\tif( currentSlide ) {\n\t\t\tthis.bubbleSlideContrastClassToElement( currentSlide, this.Reveal.getRevealElement() );\n\t\t}\n\n\t\t// Allow the first background to apply without transition\n\t\tsetTimeout( () => {\n\t\t\tthis.element.classList.remove( 'no-transition' );\n\t\t}, 10 );\n\n\t}\n\n\t/**\n\t * Updates the position of the parallax background based\n\t * on the current slide index.\n\t */\n\tupdateParallax() {\n\n\t\tlet indices = this.Reveal.getIndices();\n\n\t\tif( this.Reveal.getConfig().parallaxBackgroundImage ) {\n\n\t\t\tlet horizontalSlides = this.Reveal.getHorizontalSlides(),\n\t\t\t\tverticalSlides = this.Reveal.getVerticalSlides();\n\n\t\t\tlet backgroundSize = this.element.style.backgroundSize.split( ' ' ),\n\t\t\t\tbackgroundWidth, backgroundHeight;\n\n\t\t\tif( backgroundSize.length === 1 ) {\n\t\t\t\tbackgroundWidth = backgroundHeight = parseInt( backgroundSize[0], 10 );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbackgroundWidth = parseInt( backgroundSize[0], 10 );\n\t\t\t\tbackgroundHeight = parseInt( backgroundSize[1], 10 );\n\t\t\t}\n\n\t\t\tlet slideWidth = this.element.offsetWidth,\n\t\t\t\thorizontalSlideCount = horizontalSlides.length,\n\t\t\t\thorizontalOffsetMultiplier,\n\t\t\t\thorizontalOffset;\n\n\t\t\tif( typeof this.Reveal.getConfig().parallaxBackgroundHorizontal === 'number' ) {\n\t\t\t\thorizontalOffsetMultiplier = this.Reveal.getConfig().parallaxBackgroundHorizontal;\n\t\t\t}\n\t\t\telse {\n\t\t\t\thorizontalOffsetMultiplier = horizontalSlideCount > 1 ? ( backgroundWidth - slideWidth ) / ( horizontalSlideCount-1 ) : 0;\n\t\t\t}\n\n\t\t\thorizontalOffset = horizontalOffsetMultiplier * indices.h * -1;\n\n\t\t\tlet slideHeight = this.element.offsetHeight,\n\t\t\t\tverticalSlideCount = verticalSlides.length,\n\t\t\t\tverticalOffsetMultiplier,\n\t\t\t\tverticalOffset;\n\n\t\t\tif( typeof this.Reveal.getConfig().parallaxBackgroundVertical === 'number' ) {\n\t\t\t\tverticalOffsetMultiplier = this.Reveal.getConfig().parallaxBackgroundVertical;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tverticalOffsetMultiplier = ( backgroundHeight - slideHeight ) / ( verticalSlideCount-1 );\n\t\t\t}\n\n\t\t\tverticalOffset = verticalSlideCount > 0 ?  verticalOffsetMultiplier * indices.v : 0;\n\n\t\t\tthis.element.style.backgroundPosition = horizontalOffset + 'px ' + -verticalOffset + 'px';\n\n\t\t}\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.element.remove();\n\n\t}\n\n}\n","import { queryAll, extend, createStyleSheet, matches, closest } from '../utils/util.js'\nimport { FRAGMENT_STYLE_REGEX } from '../utils/constants.js'\n\n// Counter used to generate unique IDs for auto-animated elements\nlet autoAnimateCounter = 0;\n\n/**\n * Automatically animates matching elements across\n * slides with the [data-auto-animate] attribute.\n */\nexport default class AutoAnimate {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\t/**\n\t * Runs an auto-animation between the given slides.\n\t *\n\t * @param  {HTMLElement} fromSlide\n\t * @param  {HTMLElement} toSlide\n\t */\n\trun( fromSlide, toSlide ) {\n\n\t\t// Clean up after prior animations\n\t\tthis.reset();\n\n\t\tlet allSlides = this.Reveal.getSlides();\n\t\tlet toSlideIndex = allSlides.indexOf( toSlide );\n\t\tlet fromSlideIndex = allSlides.indexOf( fromSlide );\n\n\t\t// Ensure that;\n\t\t// 1. Both slides exist.\n\t\t// 2. Both slides are auto-animate targets with the same\n\t\t//    data-auto-animate-id value (including null if absent on both).\n\t\t// 3. data-auto-animate-restart isn't set on the physically latter\n\t\t//    slide (independent of slide direction).\n\t\tif( fromSlide && toSlide && fromSlide.hasAttribute( 'data-auto-animate' ) && toSlide.hasAttribute( 'data-auto-animate' )\n\t\t\t\t&& fromSlide.getAttribute( 'data-auto-animate-id' ) === toSlide.getAttribute( 'data-auto-animate-id' ) \n\t\t\t\t&& !( toSlideIndex > fromSlideIndex ? toSlide : fromSlide ).hasAttribute( 'data-auto-animate-restart' ) ) {\n\n\t\t\t// Create a new auto-animate sheet\n\t\t\tthis.autoAnimateStyleSheet = this.autoAnimateStyleSheet || createStyleSheet();\n\n\t\t\tlet animationOptions = this.getAutoAnimateOptions( toSlide );\n\n\t\t\t// Set our starting state\n\t\t\tfromSlide.dataset.autoAnimate = 'pending';\n\t\t\ttoSlide.dataset.autoAnimate = 'pending';\n\n\t\t\t// Flag the navigation direction, needed for fragment buildup\n\t\t\tanimationOptions.slideDirection = toSlideIndex > fromSlideIndex ? 'forward' : 'backward';\n\n\t\t\t// If the from-slide is hidden because it has moved outside\n\t\t\t// the view distance, we need to temporarily show it while\n\t\t\t// measuring\n\t\t\tlet fromSlideIsHidden = fromSlide.style.display === 'none';\n\t\t\tif( fromSlideIsHidden ) fromSlide.style.display = this.Reveal.getConfig().display;\n\n\t\t\t// Inject our auto-animate styles for this transition\n\t\t\tlet css = this.getAutoAnimatableElements( fromSlide, toSlide ).map( elements => {\n\t\t\t\treturn this.autoAnimateElements( elements.from, elements.to, elements.options || {}, animationOptions, autoAnimateCounter++ );\n\t\t\t} );\n\n\t\t\tif( fromSlideIsHidden ) fromSlide.style.display = 'none';\n\n\t\t\t// Animate unmatched elements, if enabled\n\t\t\tif( toSlide.dataset.autoAnimateUnmatched !== 'false' && this.Reveal.getConfig().autoAnimateUnmatched === true ) {\n\n\t\t\t\t// Our default timings for unmatched elements\n\t\t\t\tlet defaultUnmatchedDuration = animationOptions.duration * 0.8,\n\t\t\t\t\tdefaultUnmatchedDelay = animationOptions.duration * 0.2;\n\n\t\t\t\tthis.getUnmatchedAutoAnimateElements( toSlide ).forEach( unmatchedElement => {\n\n\t\t\t\t\tlet unmatchedOptions = this.getAutoAnimateOptions( unmatchedElement, animationOptions );\n\t\t\t\t\tlet id = 'unmatched';\n\n\t\t\t\t\t// If there is a duration or delay set specifically for this\n\t\t\t\t\t// element our unmatched elements should adhere to those\n\t\t\t\t\tif( unmatchedOptions.duration !== animationOptions.duration || unmatchedOptions.delay !== animationOptions.delay ) {\n\t\t\t\t\t\tid = 'unmatched-' + autoAnimateCounter++;\n\t\t\t\t\t\tcss.push( `[data-auto-animate=\"running\"] [data-auto-animate-target=\"${id}\"] { transition: opacity ${unmatchedOptions.duration}s ease ${unmatchedOptions.delay}s; }` );\n\t\t\t\t\t}\n\n\t\t\t\t\tunmatchedElement.dataset.autoAnimateTarget = id;\n\n\t\t\t\t}, this );\n\n\t\t\t\t// Our default transition for unmatched elements\n\t\t\t\tcss.push( `[data-auto-animate=\"running\"] [data-auto-animate-target=\"unmatched\"] { transition: opacity ${defaultUnmatchedDuration}s ease ${defaultUnmatchedDelay}s; }` );\n\n\t\t\t}\n\n\t\t\t// Setting the whole chunk of CSS at once is the most\n\t\t\t// efficient way to do this. Using sheet.insertRule\n\t\t\t// is multiple factors slower.\n\t\t\tthis.autoAnimateStyleSheet.innerHTML = css.join( '' );\n\n\t\t\t// Start the animation next cycle\n\t\t\trequestAnimationFrame( () => {\n\t\t\t\tif( this.autoAnimateStyleSheet ) {\n\t\t\t\t\t// This forces our newly injected styles to be applied in Firefox\n\t\t\t\t\tgetComputedStyle( this.autoAnimateStyleSheet ).fontWeight;\n\n\t\t\t\t\ttoSlide.dataset.autoAnimate = 'running';\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\ttype: 'autoanimate',\n\t\t\t\tdata: {\n\t\t\t\t\tfromSlide,\n\t\t\t\t\ttoSlide,\n\t\t\t\t\tsheet: this.autoAnimateStyleSheet\n\t\t\t\t}\n\t\t\t});\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Rolls back all changes that we've made to the DOM so\n\t * that as part of animating.\n\t */\n\treset() {\n\n\t\t// Reset slides\n\t\tqueryAll( this.Reveal.getRevealElement(), '[data-auto-animate]:not([data-auto-animate=\"\"])' ).forEach( element => {\n\t\t\telement.dataset.autoAnimate = '';\n\t\t} );\n\n\t\t// Reset elements\n\t\tqueryAll( this.Reveal.getRevealElement(), '[data-auto-animate-target]' ).forEach( element => {\n\t\t\tdelete element.dataset.autoAnimateTarget;\n\t\t} );\n\n\t\t// Remove the animation sheet\n\t\tif( this.autoAnimateStyleSheet && this.autoAnimateStyleSheet.parentNode ) {\n\t\t\tthis.autoAnimateStyleSheet.parentNode.removeChild( this.autoAnimateStyleSheet );\n\t\t\tthis.autoAnimateStyleSheet = null;\n\t\t}\n\n\t}\n\n\t/**\n\t * Creates a FLIP animation where the `to` element starts out\n\t * in the `from` element position and animates to its original\n\t * state.\n\t *\n\t * @param {HTMLElement} from\n\t * @param {HTMLElement} to\n\t * @param {Object} elementOptions Options for this element pair\n\t * @param {Object} animationOptions Options set at the slide level\n\t * @param {String} id Unique ID that we can use to identify this\n\t * auto-animate element in the DOM\n\t */\n\tautoAnimateElements( from, to, elementOptions, animationOptions, id ) {\n\n\t\t// 'from' elements are given a data-auto-animate-target with no value,\n\t\t// 'to' elements are are given a data-auto-animate-target with an ID\n\t\tfrom.dataset.autoAnimateTarget = '';\n\t\tto.dataset.autoAnimateTarget = id;\n\n\t\t// Each element may override any of the auto-animate options\n\t\t// like transition easing, duration and delay via data-attributes\n\t\tlet options = this.getAutoAnimateOptions( to, animationOptions );\n\n\t\t// If we're using a custom element matcher the element options\n\t\t// may contain additional transition overrides\n\t\tif( typeof elementOptions.delay !== 'undefined' ) options.delay = elementOptions.delay;\n\t\tif( typeof elementOptions.duration !== 'undefined' ) options.duration = elementOptions.duration;\n\t\tif( typeof elementOptions.easing !== 'undefined' ) options.easing = elementOptions.easing;\n\n\t\tlet fromProps = this.getAutoAnimatableProperties( 'from', from, elementOptions ),\n\t\t\ttoProps = this.getAutoAnimatableProperties( 'to', to, elementOptions );\n\n\t\tif( to.classList.contains( 'fragment' ) ) {\n\n\t\t\t// Don't auto-animate the opacity of fragments to avoid\n\t\t\t// conflicts with fragment animations\n\t\t\tdelete toProps.styles['opacity'];\n\n\t\t}\n\n\t\t// If translation and/or scaling are enabled, css transform\n\t\t// the 'to' element so that it matches the position and size\n\t\t// of the 'from' element\n\t\tif( elementOptions.translate !== false || elementOptions.scale !== false ) {\n\n\t\t\tlet presentationScale = this.Reveal.getScale();\n\n\t\t\tlet delta = {\n\t\t\t\tx: ( fromProps.x - toProps.x ) / presentationScale,\n\t\t\t\ty: ( fromProps.y - toProps.y ) / presentationScale,\n\t\t\t\tscaleX: fromProps.width / toProps.width,\n\t\t\t\tscaleY: fromProps.height / toProps.height\n\t\t\t};\n\n\t\t\t// Limit decimal points to avoid 0.0001px blur and stutter\n\t\t\tdelta.x = Math.round( delta.x * 1000 ) / 1000;\n\t\t\tdelta.y = Math.round( delta.y * 1000 ) / 1000;\n\t\t\tdelta.scaleX = Math.round( delta.scaleX * 1000 ) / 1000;\n\t\t\tdelta.scaleX = Math.round( delta.scaleX * 1000 ) / 1000;\n\n\t\t\tlet translate = elementOptions.translate !== false && ( delta.x !== 0 || delta.y !== 0 ),\n\t\t\t\tscale = elementOptions.scale !== false && ( delta.scaleX !== 0 || delta.scaleY !== 0 );\n\n\t\t\t// No need to transform if nothing's changed\n\t\t\tif( translate || scale ) {\n\n\t\t\t\tlet transform = [];\n\n\t\t\t\tif( translate ) transform.push( `translate(${delta.x}px, ${delta.y}px)` );\n\t\t\t\tif( scale ) transform.push( `scale(${delta.scaleX}, ${delta.scaleY})` );\n\n\t\t\t\tfromProps.styles['transform'] = transform.join( ' ' );\n\t\t\t\tfromProps.styles['transform-origin'] = 'top left';\n\n\t\t\t\ttoProps.styles['transform'] = 'none';\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Delete all unchanged 'to' styles\n\t\tfor( let propertyName in toProps.styles ) {\n\t\t\tconst toValue = toProps.styles[propertyName];\n\t\t\tconst fromValue = fromProps.styles[propertyName];\n\n\t\t\tif( toValue === fromValue ) {\n\t\t\t\tdelete toProps.styles[propertyName];\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// If these property values were set via a custom matcher providing\n\t\t\t\t// an explicit 'from' and/or 'to' value, we always inject those values.\n\t\t\t\tif( toValue.explicitValue === true ) {\n\t\t\t\t\ttoProps.styles[propertyName] = toValue.value;\n\t\t\t\t}\n\n\t\t\t\tif( fromValue.explicitValue === true ) {\n\t\t\t\t\tfromProps.styles[propertyName] = fromValue.value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet css = '';\n\n\t\tlet toStyleProperties = Object.keys( toProps.styles );\n\n\t\t// Only create animate this element IF at least one style\n\t\t// property has changed\n\t\tif( toStyleProperties.length > 0 ) {\n\n\t\t\t// Instantly move to the 'from' state\n\t\t\tfromProps.styles['transition'] = 'none';\n\n\t\t\t// Animate towards the 'to' state\n\t\t\ttoProps.styles['transition'] = `all ${options.duration}s ${options.easing} ${options.delay}s`;\n\t\t\ttoProps.styles['transition-property'] = toStyleProperties.join( ', ' );\n\t\t\ttoProps.styles['will-change'] = toStyleProperties.join( ', ' );\n\n\t\t\t// Build up our custom CSS. We need to override inline styles\n\t\t\t// so we need to make our styles vErY IMPORTANT!1!!\n\t\t\tlet fromCSS = Object.keys( fromProps.styles ).map( propertyName => {\n\t\t\t\treturn propertyName + ': ' + fromProps.styles[propertyName] + ' !important;';\n\t\t\t} ).join( '' );\n\n\t\t\tlet toCSS = Object.keys( toProps.styles ).map( propertyName => {\n\t\t\t\treturn propertyName + ': ' + toProps.styles[propertyName] + ' !important;';\n\t\t\t} ).join( '' );\n\n\t\t\tcss = \t'[data-auto-animate-target=\"'+ id +'\"] {'+ fromCSS +'}' +\n\t\t\t\t\t'[data-auto-animate=\"running\"] [data-auto-animate-target=\"'+ id +'\"] {'+ toCSS +'}';\n\n\t\t}\n\n\t\treturn css;\n\n\t}\n\n\t/**\n\t * Returns the auto-animate options for the given element.\n\t *\n\t * @param {HTMLElement} element Element to pick up options\n\t * from, either a slide or an animation target\n\t * @param {Object} [inheritedOptions] Optional set of existing\n\t * options\n\t */\n\tgetAutoAnimateOptions( element, inheritedOptions ) {\n\n\t\tlet options = {\n\t\t\teasing: this.Reveal.getConfig().autoAnimateEasing,\n\t\t\tduration: this.Reveal.getConfig().autoAnimateDuration,\n\t\t\tdelay: 0\n\t\t};\n\n\t\toptions = extend( options, inheritedOptions );\n\n\t\t// Inherit options from parent elements\n\t\tif( element.parentNode ) {\n\t\t\tlet autoAnimatedParent = closest( element.parentNode, '[data-auto-animate-target]' );\n\t\t\tif( autoAnimatedParent ) {\n\t\t\t\toptions = this.getAutoAnimateOptions( autoAnimatedParent, options );\n\t\t\t}\n\t\t}\n\n\t\tif( element.dataset.autoAnimateEasing ) {\n\t\t\toptions.easing = element.dataset.autoAnimateEasing;\n\t\t}\n\n\t\tif( element.dataset.autoAnimateDuration ) {\n\t\t\toptions.duration = parseFloat( element.dataset.autoAnimateDuration );\n\t\t}\n\n\t\tif( element.dataset.autoAnimateDelay ) {\n\t\t\toptions.delay = parseFloat( element.dataset.autoAnimateDelay );\n\t\t}\n\n\t\treturn options;\n\n\t}\n\n\t/**\n\t * Returns an object containing all of the properties\n\t * that can be auto-animated for the given element and\n\t * their current computed values.\n\t *\n\t * @param {String} direction 'from' or 'to'\n\t */\n\tgetAutoAnimatableProperties( direction, element, elementOptions ) {\n\n\t\tlet config = this.Reveal.getConfig();\n\n\t\tlet properties = { styles: [] };\n\n\t\t// Position and size\n\t\tif( elementOptions.translate !== false || elementOptions.scale !== false ) {\n\t\t\tlet bounds;\n\n\t\t\t// Custom auto-animate may optionally return a custom tailored\n\t\t\t// measurement function\n\t\t\tif( typeof elementOptions.measure === 'function' ) {\n\t\t\t\tbounds = elementOptions.measure( element );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif( config.center ) {\n\t\t\t\t\t// More precise, but breaks when used in combination\n\t\t\t\t\t// with zoom for scaling the deck ¯\\_(ツ)_/¯\n\t\t\t\t\tbounds = element.getBoundingClientRect();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlet scale = this.Reveal.getScale();\n\t\t\t\t\tbounds = {\n\t\t\t\t\t\tx: element.offsetLeft * scale,\n\t\t\t\t\t\ty: element.offsetTop * scale,\n\t\t\t\t\t\twidth: element.offsetWidth * scale,\n\t\t\t\t\t\theight: element.offsetHeight * scale\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tproperties.x = bounds.x;\n\t\t\tproperties.y = bounds.y;\n\t\t\tproperties.width = bounds.width;\n\t\t\tproperties.height = bounds.height;\n\t\t}\n\n\t\tconst computedStyles = getComputedStyle( element );\n\n\t\t// CSS styles\n\t\t( elementOptions.styles || config.autoAnimateStyles ).forEach( style => {\n\t\t\tlet value;\n\n\t\t\t// `style` is either the property name directly, or an object\n\t\t\t// definition of a style property\n\t\t\tif( typeof style === 'string' ) style = { property: style };\n\n\t\t\tif( typeof style.from !== 'undefined' && direction === 'from' ) {\n\t\t\t\tvalue = { value: style.from, explicitValue: true };\n\t\t\t}\n\t\t\telse if( typeof style.to !== 'undefined' && direction === 'to' ) {\n\t\t\t\tvalue = { value: style.to, explicitValue: true };\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Use a unitless value for line-height so that it inherits properly\n\t\t\t\tif( style.property === 'line-height' ) {\n\t\t\t\t\tvalue = parseFloat( computedStyles['line-height'] ) / parseFloat( computedStyles['font-size'] );\n\t\t\t\t}\n\n\t\t\t\tif( isNaN(value) ) {\n\t\t\t\t\tvalue = computedStyles[style.property];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif( value !== '' ) {\n\t\t\t\tproperties.styles[style.property] = value;\n\t\t\t}\n\t\t} );\n\n\t\treturn properties;\n\n\t}\n\n\t/**\n\t * Get a list of all element pairs that we can animate\n\t * between the given slides.\n\t *\n\t * @param {HTMLElement} fromSlide\n\t * @param {HTMLElement} toSlide\n\t *\n\t * @return {Array} Each value is an array where [0] is\n\t * the element we're animating from and [1] is the\n\t * element we're animating to\n\t */\n\tgetAutoAnimatableElements( fromSlide, toSlide ) {\n\n\t\tlet matcher = typeof this.Reveal.getConfig().autoAnimateMatcher === 'function' ? this.Reveal.getConfig().autoAnimateMatcher : this.getAutoAnimatePairs;\n\n\t\tlet pairs = matcher.call( this, fromSlide, toSlide );\n\n\t\tlet reserved = [];\n\n\t\t// Remove duplicate pairs\n\t\treturn pairs.filter( ( pair, index ) => {\n\t\t\tif( reserved.indexOf( pair.to ) === -1 ) {\n\t\t\t\treserved.push( pair.to );\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} );\n\n\t}\n\n\t/**\n\t * Identifies matching elements between slides.\n\t *\n\t * You can specify a custom matcher function by using\n\t * the `autoAnimateMatcher` config option.\n\t */\n\tgetAutoAnimatePairs( fromSlide, toSlide ) {\n\n\t\tlet pairs = [];\n\n\t\tconst codeNodes = 'pre';\n\t\tconst textNodes = 'h1, h2, h3, h4, h5, h6, p, li';\n\t\tconst mediaNodes = 'img, video, iframe';\n\n\t\t// Explicit matches via data-id\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, '[data-id]', node => {\n\t\t\treturn node.nodeName + ':::' + node.getAttribute( 'data-id' );\n\t\t} );\n\n\t\t// Text\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, textNodes, node => {\n\t\t\treturn node.nodeName + ':::' + node.textContent.trim();\n\t\t} );\n\n\t\t// Media\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, mediaNodes, node => {\n\t\t\treturn node.nodeName + ':::' + ( node.getAttribute( 'src' ) || node.getAttribute( 'data-src' ) );\n\t\t} );\n\n\t\t// Code\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, codeNodes, node => {\n\t\t\treturn node.nodeName + ':::' + node.textContent.trim();\n\t\t} );\n\n\t\tpairs.forEach( pair => {\n\t\t\t// Disable scale transformations on text nodes, we transition\n\t\t\t// each individual text property instead\n\t\t\tif( matches( pair.from, textNodes ) ) {\n\t\t\t\tpair.options = { scale: false };\n\t\t\t}\n\t\t\t// Animate individual lines of code\n\t\t\telse if( matches( pair.from, codeNodes ) ) {\n\n\t\t\t\t// Transition the code block's width and height instead of scaling\n\t\t\t\t// to prevent its content from being squished\n\t\t\t\tpair.options = { scale: false, styles: [ 'width', 'height' ] };\n\n\t\t\t\t// Lines of code\n\t\t\t\tthis.findAutoAnimateMatches( pairs, pair.from, pair.to, '.hljs .hljs-ln-code', node => {\n\t\t\t\t\treturn node.textContent;\n\t\t\t\t}, {\n\t\t\t\t\tscale: false,\n\t\t\t\t\tstyles: [],\n\t\t\t\t\tmeasure: this.getLocalBoundingBox.bind( this )\n\t\t\t\t} );\n\n\t\t\t\t// Line numbers\n\t\t\t\tthis.findAutoAnimateMatches( pairs, pair.from, pair.to, '.hljs .hljs-ln-numbers[data-line-number]', node => {\n\t\t\t\t\treturn node.getAttribute( 'data-line-number' );\n\t\t\t\t}, {\n\t\t\t\t\tscale: false,\n\t\t\t\t\tstyles: [ 'width' ],\n\t\t\t\t\tmeasure: this.getLocalBoundingBox.bind( this )\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t}, this );\n\n\t\treturn pairs;\n\n\t}\n\n\t/**\n\t * Helper method which returns a bounding box based on\n\t * the given elements offset coordinates.\n\t *\n\t * @param {HTMLElement} element\n\t * @return {Object} x, y, width, height\n\t */\n\tgetLocalBoundingBox( element ) {\n\n\t\tconst presentationScale = this.Reveal.getScale();\n\n\t\treturn {\n\t\t\tx: Math.round( ( element.offsetLeft * presentationScale ) * 100 ) / 100,\n\t\t\ty: Math.round( ( element.offsetTop * presentationScale ) * 100 ) / 100,\n\t\t\twidth: Math.round( ( element.offsetWidth * presentationScale ) * 100 ) / 100,\n\t\t\theight: Math.round( ( element.offsetHeight * presentationScale ) * 100 ) / 100\n\t\t};\n\n\t}\n\n\t/**\n\t * Finds matching elements between two slides.\n\t *\n\t * @param {Array} pairs            \tList of pairs to push matches to\n\t * @param {HTMLElement} fromScope   Scope within the from element exists\n\t * @param {HTMLElement} toScope     Scope within the to element exists\n\t * @param {String} selector         CSS selector of the element to match\n\t * @param {Function} serializer     A function that accepts an element and returns\n\t *                                  a stringified ID based on its contents\n\t * @param {Object} animationOptions Optional config options for this pair\n\t */\n\tfindAutoAnimateMatches( pairs, fromScope, toScope, selector, serializer, animationOptions ) {\n\n\t\tlet fromMatches = {};\n\t\tlet toMatches = {};\n\n\t\t[].slice.call( fromScope.querySelectorAll( selector ) ).forEach( ( element, i ) => {\n\t\t\tconst key = serializer( element );\n\t\t\tif( typeof key === 'string' && key.length ) {\n\t\t\t\tfromMatches[key] = fromMatches[key] || [];\n\t\t\t\tfromMatches[key].push( element );\n\t\t\t}\n\t\t} );\n\n\t\t[].slice.call( toScope.querySelectorAll( selector ) ).forEach( ( element, i ) => {\n\t\t\tconst key = serializer( element );\n\t\t\ttoMatches[key] = toMatches[key] || [];\n\t\t\ttoMatches[key].push( element );\n\n\t\t\tlet fromElement;\n\n\t\t\t// Retrieve the 'from' element\n\t\t\tif( fromMatches[key] ) {\n\t\t\t\tconst primaryIndex = toMatches[key].length - 1;\n\t\t\t\tconst secondaryIndex = fromMatches[key].length - 1;\n\n\t\t\t\t// If there are multiple identical from elements, retrieve\n\t\t\t\t// the one at the same index as our to-element.\n\t\t\t\tif( fromMatches[key][ primaryIndex ] ) {\n\t\t\t\t\tfromElement = fromMatches[key][ primaryIndex ];\n\t\t\t\t\tfromMatches[key][ primaryIndex ] = null;\n\t\t\t\t}\n\t\t\t\t// If there are no matching from-elements at the same index,\n\t\t\t\t// use the last one.\n\t\t\t\telse if( fromMatches[key][ secondaryIndex ] ) {\n\t\t\t\t\tfromElement = fromMatches[key][ secondaryIndex ];\n\t\t\t\t\tfromMatches[key][ secondaryIndex ] = null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If we've got a matching pair, push it to the list of pairs\n\t\t\tif( fromElement ) {\n\t\t\t\tpairs.push({\n\t\t\t\t\tfrom: fromElement,\n\t\t\t\t\tto: element,\n\t\t\t\t\toptions: animationOptions\n\t\t\t\t});\n\t\t\t}\n\t\t} );\n\n\t}\n\n\t/**\n\t * Returns a all elements within the given scope that should\n\t * be considered unmatched in an auto-animate transition. If\n\t * fading of unmatched elements is turned on, these elements\n\t * will fade when going between auto-animate slides.\n\t *\n\t * Note that parents of auto-animate targets are NOT considered\n\t * unmatched since fading them would break the auto-animation.\n\t *\n\t * @param {HTMLElement} rootElement\n\t * @return {Array}\n\t */\n\tgetUnmatchedAutoAnimateElements( rootElement ) {\n\n\t\treturn [].slice.call( rootElement.children ).reduce( ( result, element ) => {\n\n\t\t\tconst containsAnimatedElements = element.querySelector( '[data-auto-animate-target]' );\n\n\t\t\t// The element is unmatched if\n\t\t\t// - It is not an auto-animate target\n\t\t\t// - It does not contain any auto-animate targets\n\t\t\tif( !element.hasAttribute( 'data-auto-animate-target' ) && !containsAnimatedElements ) {\n\t\t\t\tresult.push( element );\n\t\t\t}\n\n\t\t\tif( element.querySelector( '[data-auto-animate-target]' ) ) {\n\t\t\t\tresult = result.concat( this.getUnmatchedAutoAnimateElements( element ) );\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t}, [] );\n\n\t}\n\n}\n","import { HORIZONTAL_SLIDES_SELECTOR, HORIZONTAL_BACKGROUNDS_SELECTOR } from '../utils/constants.js'\nimport { queryAll } from '../utils/util.js'\n\nconst HIDE_SCROLLBAR_TIMEOUT = 500;\nconst MAX_PROGRESS_SPACING = 4;\nconst MIN_PROGRESS_SEGMENT_HEIGHT = 6;\nconst MIN_PLAYHEAD_HEIGHT = 8;\n\n/**\n * The scroll view lets you read a reveal.js presentation\n * as a linear scrollable page.\n */\nexport default class ScrollView {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.active = false;\n\t\tthis.activatedCallbacks = [];\n\n\t\tthis.onScroll = this.onScroll.bind( this );\n\n\t}\n\n\t/**\n\t * Activates the scroll view. This rearranges the presentation DOM\n\t * by—among other things—wrapping each slide in a page element.\n\t */\n\tactivate() {\n\n\t\tif( this.active ) return;\n\n\t\tconst stateBeforeActivation = this.Reveal.getState();\n\n\t\tthis.active = true;\n\n\t\t// Store the full presentation HTML so that we can restore it\n\t\t// when/if the scroll view is deactivated\n\t\tthis.slideHTMLBeforeActivation = this.Reveal.getSlidesElement().innerHTML;\n\n\t\tconst horizontalSlides = queryAll( this.Reveal.getRevealElement(), HORIZONTAL_SLIDES_SELECTOR );\n\t\tconst horizontalBackgrounds = queryAll( this.Reveal.getRevealElement(), HORIZONTAL_BACKGROUNDS_SELECTOR );\n\n\t\tthis.viewportElement.classList.add( 'loading-scroll-mode', 'reveal-scroll' );\n\n\t\tlet presentationBackground;\n\n\t\tconst viewportStyles = window.getComputedStyle( this.viewportElement );\n\t\tif( viewportStyles && viewportStyles.background ) {\n\t\t\tpresentationBackground = viewportStyles.background;\n\t\t}\n\n\t\tconst pageElements = [];\n\t\tconst pageContainer = horizontalSlides[0].parentNode;\n\n\t\tlet previousSlide;\n\n\t\t// Creates a new page element and appends the given slide/bg\n\t\t// to it.\n\t\tconst createPageElement = ( slide, h, v, isVertical ) => {\n\n\t\t\tlet contentContainer;\n\n\t\t\t// If this slide is part of an auto-animation sequence, we\n\t\t\t// group it under the same page element as the previous slide\n\t\t\tif( previousSlide && this.Reveal.shouldAutoAnimateBetween( previousSlide, slide ) ) {\n\t\t\t\tcontentContainer = document.createElement( 'div' );\n\t\t\t\tcontentContainer.className = 'scroll-page-content scroll-auto-animate-page';\n\t\t\t\tcontentContainer.style.display = 'none';\n\t\t\t\tpreviousSlide.closest( '.scroll-page-content' ).parentNode.appendChild( contentContainer );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Wrap the slide in a page element and hide its overflow\n\t\t\t\t// so that no page ever flows onto another\n\t\t\t\tconst page = document.createElement( 'div' );\n\t\t\t\tpage.className = 'scroll-page';\n\t\t\t\tpageElements.push( page );\n\n\t\t\t\t// This transfers over the background of the vertical stack containing\n\t\t\t\t// the slide if it exists. Otherwise, it uses the presentation-wide\n\t\t\t\t// background.\n\t\t\t\tif( isVertical && horizontalBackgrounds.length > h ) {\n\t\t\t\t\tconst slideBackground = horizontalBackgrounds[h];\n\t\t\t\t\tconst pageBackground = window.getComputedStyle( slideBackground );\n\n\t\t\t\t\tif( pageBackground && pageBackground.background ) {\n\t\t\t\t\t\tpage.style.background = pageBackground.background;\n\t\t\t\t\t}\n\t\t\t\t\telse if( presentationBackground ) {\n\t\t\t\t\t\tpage.style.background = presentationBackground;\n\t\t\t\t\t}\n\t\t\t\t} else if( presentationBackground ) {\n\t\t\t\t\tpage.style.background = presentationBackground;\n\t\t\t\t}\n\n\t\t\t\tconst stickyContainer = document.createElement( 'div' );\n\t\t\t\tstickyContainer.className = 'scroll-page-sticky';\n\t\t\t\tpage.appendChild( stickyContainer );\n\n\t\t\t\tcontentContainer = document.createElement( 'div' );\n\t\t\t\tcontentContainer.className = 'scroll-page-content';\n\t\t\t\tstickyContainer.appendChild( contentContainer );\n\t\t\t}\n\n\t\t\tcontentContainer.appendChild( slide );\n\n\t\t\tslide.classList.remove( 'past', 'future' );\n\t\t\tslide.setAttribute( 'data-index-h', h );\n\t\t\tslide.setAttribute( 'data-index-v', v );\n\n\t\t\tif( slide.slideBackgroundElement ) {\n\t\t\t\tslide.slideBackgroundElement.remove( 'past', 'future' );\n\t\t\t\tcontentContainer.insertBefore( slide.slideBackgroundElement, slide );\n\t\t\t}\n\n\t\t\tpreviousSlide = slide;\n\n\t\t}\n\n\t\t// Slide and slide background layout\n\t\thorizontalSlides.forEach( ( horizontalSlide, h ) => {\n\n\t\t\tif( this.Reveal.isVerticalStack( horizontalSlide ) ) {\n\t\t\t\thorizontalSlide.querySelectorAll( 'section' ).forEach( ( verticalSlide, v ) => {\n\t\t\t\t\tcreatePageElement( verticalSlide, h, v, true );\n\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tcreatePageElement( horizontalSlide, h, 0 );\n\t\t\t}\n\n\t\t}, this );\n\n\t\tthis.createProgressBar();\n\n\t\t// Remove leftover stacks\n\t\tqueryAll( this.Reveal.getRevealElement(), '.stack' ).forEach( stack => stack.remove() );\n\n\t\t// Add our newly created pages to the DOM\n\t\tpageElements.forEach( page => pageContainer.appendChild( page ) );\n\n\t\t// Re-run JS-based content layout after the slide is added to page DOM\n\t\tthis.Reveal.slideContent.layout( this.Reveal.getSlidesElement() );\n\n\t\tthis.Reveal.layout();\n\t\tthis.Reveal.setState( stateBeforeActivation );\n\n\t\tthis.activatedCallbacks.forEach( callback => callback() );\n\t\tthis.activatedCallbacks = [];\n\n\t\tthis.restoreScrollPosition();\n\n\t\tthis.viewportElement.classList.remove( 'loading-scroll-mode' );\n\t\tthis.viewportElement.addEventListener( 'scroll', this.onScroll, { passive: true } );\n\n\t}\n\n\t/**\n\t * Deactivates the scroll view and restores the standard slide-based\n\t * presentation.\n\t */\n\tdeactivate() {\n\n\t\tif( !this.active ) return;\n\n\t\tconst stateBeforeDeactivation = this.Reveal.getState();\n\n\t\tthis.active = false;\n\n\t\tthis.viewportElement.removeEventListener( 'scroll', this.onScroll );\n\t\tthis.viewportElement.classList.remove( 'reveal-scroll' );\n\n\t\tthis.removeProgressBar();\n\n\t\tthis.Reveal.getSlidesElement().innerHTML = this.slideHTMLBeforeActivation;\n\t\tthis.Reveal.sync();\n\t\tthis.Reveal.setState( stateBeforeDeactivation );\n\n\t\tthis.slideHTMLBeforeActivation = null;\n\n\t}\n\n\ttoggle( override ) {\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? this.activate() : this.deactivate();\n\t\t}\n\t\telse {\n\t\t\tthis.isActive() ? this.deactivate() : this.activate();\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if the scroll view is currently active.\n\t */\n\tisActive() {\n\n\t\treturn this.active;\n\n\t}\n\n\t/**\n\t * Renders the progress bar component.\n\t */\n\tcreateProgressBar() {\n\n\t\tthis.progressBar = document.createElement( 'div' );\n\t\tthis.progressBar.className = 'scrollbar';\n\n\t\tthis.progressBarInner = document.createElement( 'div' );\n\t\tthis.progressBarInner.className = 'scrollbar-inner';\n\t\tthis.progressBar.appendChild( this.progressBarInner );\n\n\t\tthis.progressBarPlayhead = document.createElement( 'div' );\n\t\tthis.progressBarPlayhead.className = 'scrollbar-playhead';\n\t\tthis.progressBarInner.appendChild( this.progressBarPlayhead );\n\n\t\tthis.viewportElement.insertBefore( this.progressBar, this.viewportElement.firstChild );\n\n\t\tconst handleDocumentMouseMove\t= ( event ) => {\n\n\t\t\tlet progress = ( event.clientY - this.progressBarInner.getBoundingClientRect().top ) / this.progressBarHeight;\n\t\t\tprogress = Math.max( Math.min( progress, 1 ), 0 );\n\n\t\t\tthis.viewportElement.scrollTop = progress * ( this.viewportElement.scrollHeight - this.viewportElement.offsetHeight );\n\n\t\t};\n\n\t\tconst handleDocumentMouseUp = ( event ) => {\n\n\t\t\tthis.draggingProgressBar = false;\n\t\t\tthis.showProgressBar();\n\n\t\t\tdocument.removeEventListener( 'mousemove', handleDocumentMouseMove );\n\t\t\tdocument.removeEventListener( 'mouseup', handleDocumentMouseUp );\n\n\t\t};\n\n\t\tconst handleMouseDown = ( event ) => {\n\n\t\t\tevent.preventDefault();\n\n\t\t\tthis.draggingProgressBar = true;\n\n\t\t\tdocument.addEventListener( 'mousemove', handleDocumentMouseMove );\n\t\t\tdocument.addEventListener( 'mouseup', handleDocumentMouseUp );\n\n\t\t\thandleDocumentMouseMove( event );\n\n\t\t};\n\n\t\tthis.progressBarInner.addEventListener( 'mousedown', handleMouseDown );\n\n\t}\n\n\tremoveProgressBar() {\n\n\t\tif( this.progressBar ) {\n\t\t\tthis.progressBar.remove();\n\t\t\tthis.progressBar = null;\n\t\t}\n\n\t}\n\n\tlayout() {\n\n\t\tif( this.isActive() ) {\n\t\t\tthis.syncPages();\n\t\t\tthis.syncScrollPosition();\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates our pages to match the latest configuration and\n\t * presentation size.\n\t */\n\tsyncPages() {\n\n\t\tconst config = this.Reveal.getConfig();\n\n\t\tconst slideSize = this.Reveal.getComputedSlideSize( window.innerWidth, window.innerHeight );\n\t\tconst scale = this.Reveal.getScale();\n\t\tconst useCompactLayout = config.scrollLayout === 'compact';\n\n\t\tconst viewportHeight = this.viewportElement.offsetHeight;\n\t\tconst compactHeight = slideSize.height * scale;\n\t\tconst pageHeight = useCompactLayout ? compactHeight : viewportHeight;\n\n\t\t// The height that needs to be scrolled between scroll triggers\n\t\tthis.scrollTriggerHeight = useCompactLayout ? compactHeight : viewportHeight;\n\n\t\tthis.viewportElement.style.setProperty( '--page-height', pageHeight + 'px' );\n\t\tthis.viewportElement.style.scrollSnapType = typeof config.scrollSnap === 'string' ? `y ${config.scrollSnap}` : '';\n\n\t\t// This will hold all scroll triggers used to show/hide slides\n\t\tthis.slideTriggers = [];\n\n\t\tconst pageElements = Array.from( this.Reveal.getRevealElement().querySelectorAll( '.scroll-page' ) );\n\n\t\tthis.pages = pageElements.map( pageElement => {\n\t\t\tconst page = this.createPage({\n\t\t\t\tpageElement,\n\t\t\t\tslideElement: pageElement.querySelector( 'section' ),\n\t\t\t\tstickyElement: pageElement.querySelector( '.scroll-page-sticky' ),\n\t\t\t\tcontentElement: pageElement.querySelector( '.scroll-page-content' ),\n\t\t\t\tbackgroundElement: pageElement.querySelector( '.slide-background' ),\n\t\t\t\tautoAnimateElements: pageElement.querySelectorAll( '.scroll-auto-animate-page' ),\n\t\t\t\tautoAnimatePages: []\n\t\t\t});\n\n\t\t\tpage.pageElement.style.setProperty( '--slide-height', config.center === true ? 'auto' : slideSize.height + 'px' );\n\n\t\t\tthis.slideTriggers.push({\n\t\t\t\tpage: page,\n\t\t\t\tactivate: () => this.activatePage( page ),\n\t\t\t\tdeactivate: () => this.deactivatePage( page )\n\t\t\t});\n\n\t\t\t// Create scroll triggers that show/hide fragments\n\t\t\tthis.createFragmentTriggersForPage( page );\n\n\t\t\t// Create scroll triggers for triggering auto-animate steps\n\t\t\tif( page.autoAnimateElements.length > 0 ) {\n\t\t\t\tthis.createAutoAnimateTriggersForPage( page );\n\t\t\t}\n\n\t\t\tlet totalScrollTriggerCount = Math.max( page.scrollTriggers.length - 1, 0 );\n\n\t\t\t// Each auto-animate step may include its own scroll triggers\n\t\t\t// for fragments, ensure we count those as well\n\t\t\ttotalScrollTriggerCount += page.autoAnimatePages.reduce( ( total, page ) => {\n\t\t\t\treturn total + Math.max( page.scrollTriggers.length - 1, 0 );\n\t\t\t}, page.autoAnimatePages.length );\n\n\t\t\t// Clean up from previous renders\n\t\t\tpage.pageElement.querySelectorAll( '.scroll-snap-point' ).forEach( el => el.remove() );\n\n\t\t\t// Create snap points for all scroll triggers\n\t\t\t// - Can't be absolute in FF\n\t\t\t// - Can't be 0-height in Safari\n\t\t\t// - Can't use snap-align on parent in Safari because then\n\t\t\t//   inner triggers won't work\n\t\t\tfor( let i = 0; i < totalScrollTriggerCount + 1; i++ ) {\n\t\t\t\tconst triggerStick = document.createElement( 'div' );\n\t\t\t\ttriggerStick.className = 'scroll-snap-point';\n\t\t\t\ttriggerStick.style.height = this.scrollTriggerHeight + 'px';\n\t\t\t\ttriggerStick.style.scrollSnapAlign = useCompactLayout ? 'center' : 'start';\n\t\t\t\tpage.pageElement.appendChild( triggerStick );\n\n\t\t\t\tif( i === 0 ) {\n\t\t\t\t\ttriggerStick.style.marginTop = -this.scrollTriggerHeight + 'px';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// In the compact layout, only slides with scroll triggers cover the\n\t\t\t// full viewport height. This helps avoid empty gaps before or after\n\t\t\t// a sticky slide.\n\t\t\tif( useCompactLayout && page.scrollTriggers.length > 0 ) {\n\t\t\t\tpage.pageHeight = viewportHeight;\n\t\t\t\tpage.pageElement.style.setProperty( '--page-height', viewportHeight + 'px' );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpage.pageHeight = pageHeight;\n\t\t\t\tpage.pageElement.style.removeProperty( '--page-height' );\n\t\t\t}\n\n\t\t\t// Add scroll padding based on how many scroll triggers we have\n\t\t\tpage.scrollPadding = this.scrollTriggerHeight * totalScrollTriggerCount;\n\n\t\t\t// The total height including scrollable space\n\t\t\tpage.totalHeight = page.pageHeight + page.scrollPadding;\n\n\t\t\t// This is used to pad the height of our page in CSS\n\t\t\tpage.pageElement.style.setProperty( '--page-scroll-padding', page.scrollPadding + 'px' );\n\n\t\t\t// If this is a sticky page, stick it to the vertical center\n\t\t\tif( totalScrollTriggerCount > 0 ) {\n\t\t\t\tpage.stickyElement.style.position = 'sticky';\n\t\t\t\tpage.stickyElement.style.top = Math.max( ( viewportHeight - page.pageHeight ) / 2, 0 ) + 'px';\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpage.stickyElement.style.position = 'relative';\n\t\t\t\tpage.pageElement.style.scrollSnapAlign = page.pageHeight < viewportHeight ? 'center' : 'start';\n\t\t\t}\n\n\t\t\treturn page;\n\t\t} );\n\n\t\tthis.setTriggerRanges();\n\n\t\t/*\n\t\tconsole.log(this.slideTriggers.map( t => {\n\t\t\treturn {\n\t\t\t\trange: `${t.range[0].toFixed(2)}-${t.range[1].toFixed(2)}`,\n\t\t\t\ttriggers: t.page.scrollTriggers.map( t => {\n\t\t\t\t\treturn `${t.range[0].toFixed(2)}-${t.range[1].toFixed(2)}`\n\t\t\t\t}).join( ', ' ),\n\t\t\t}\n\t\t}))\n\t\t*/\n\n\t\tthis.viewportElement.setAttribute( 'data-scrollbar', config.scrollProgress );\n\n\t\tif( config.scrollProgress && this.totalScrollTriggerCount > 1 ) {\n\t\t\t// Create the progress bar if it doesn't already exist\n\t\t\tif( !this.progressBar ) this.createProgressBar();\n\n\t\t\tthis.syncProgressBar();\n\t\t}\n\t\telse {\n\t\t\tthis.removeProgressBar();\n\t\t}\n\n\t}\n\n\t/**\n\t * Calculates and sets the scroll range for all of our scroll\n\t * triggers.\n\t */\n\tsetTriggerRanges() {\n\n\t\t// Calculate the total number of scroll triggers\n\t\tthis.totalScrollTriggerCount = this.slideTriggers.reduce( ( total, trigger ) => {\n\t\t\treturn total + Math.max( trigger.page.scrollTriggers.length, 1 );\n\t\t}, 0 );\n\n\t\tlet rangeStart = 0;\n\n\t\t// Calculate the scroll range of each scroll trigger on a scale\n\t\t// of 0-1\n\t\tthis.slideTriggers.forEach( ( trigger, i ) => {\n\t\t\ttrigger.range = [\n\t\t\t\trangeStart,\n\t\t\t\trangeStart + Math.max( trigger.page.scrollTriggers.length, 1 ) / this.totalScrollTriggerCount\n\t\t\t];\n\n\t\t\tconst scrollTriggerSegmentSize = ( trigger.range[1] - trigger.range[0] ) / trigger.page.scrollTriggers.length;\n\t\t\t// Set the range for each inner scroll trigger\n\t\t\ttrigger.page.scrollTriggers.forEach( ( scrollTrigger, i ) => {\n\t\t\t\tscrollTrigger.range = [\n\t\t\t\t\trangeStart + i * scrollTriggerSegmentSize,\n\t\t\t\t\trangeStart + ( i + 1 ) * scrollTriggerSegmentSize\n\t\t\t\t];\n\t\t\t} );\n\n\t\t\trangeStart = trigger.range[1];\n\t\t} );\n\n\t\t// Ensure the last trigger extends to the end of the page, otherwise\n\t\t// rounding errors can cause the last trigger to end at 0.999999...\n\t\tthis.slideTriggers[this.slideTriggers.length - 1].range[1] = 1;\n\n\t}\n\n\t/**\n\t * Creates one scroll trigger for each fragments in the given page.\n\t *\n\t * @param {*} page\n\t */\n\tcreateFragmentTriggersForPage( page, slideElement ) {\n\n\t\tslideElement = slideElement || page.slideElement;\n\n\t\t// Each fragment 'group' is an array containing one or more\n\t\t// fragments. Multiple fragments that appear at the same time\n\t\t// are part of the same group.\n\t\tconst fragmentGroups = this.Reveal.fragments.sort( slideElement.querySelectorAll( '.fragment' ), true );\n\n\t\t// Create scroll triggers that show/hide fragments\n\t\tif( fragmentGroups.length ) {\n\t\t\tpage.fragments = this.Reveal.fragments.sort( slideElement.querySelectorAll( '.fragment:not(.disabled)' ) );\n\t\t\tpage.scrollTriggers.push(\n\t\t\t\t// Trigger for the initial state with no fragments visible\n\t\t\t\t{\n\t\t\t\t\tactivate: () => {\n\t\t\t\t\t\tthis.Reveal.fragments.update( -1, page.fragments, slideElement );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\n\t\t\t// Triggers for each fragment group\n\t\t\tfragmentGroups.forEach( ( fragments, i ) => {\n\t\t\t\tpage.scrollTriggers.push({\n\t\t\t\t\tactivate: () => {\n\t\t\t\t\t\tthis.Reveal.fragments.update( i, page.fragments, slideElement );\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} );\n\t\t}\n\n\n\t\treturn page.scrollTriggers.length;\n\n\t}\n\n\t/**\n\t * Creates scroll triggers for the auto-animate steps in the\n\t * given page.\n\t *\n\t * @param {*} page\n\t */\n\tcreateAutoAnimateTriggersForPage( page ) {\n\n\t\tif( page.autoAnimateElements.length > 0 ) {\n\n\t\t\t// Triggers for each subsequent auto-animate slide\n\t\t\tthis.slideTriggers.push( ...Array.from( page.autoAnimateElements ).map( ( autoAnimateElement, i ) => {\n\t\t\t\tlet autoAnimatePage = this.createPage({\n\t\t\t\t\tslideElement: autoAnimateElement.querySelector( 'section' ),\n\t\t\t\t\tcontentElement: autoAnimateElement,\n\t\t\t\t\tbackgroundElement: autoAnimateElement.querySelector( '.slide-background' )\n\t\t\t\t});\n\n\t\t\t\t// Create fragment scroll triggers for the auto-animate slide\n\t\t\t\tthis.createFragmentTriggersForPage( autoAnimatePage, autoAnimatePage.slideElement );\n\n\t\t\t\tpage.autoAnimatePages.push( autoAnimatePage );\n\n\t\t\t\t// Return our slide trigger\n\t\t\t\treturn {\n\t\t\t\t\tpage: autoAnimatePage,\n\t\t\t\t\tactivate: () => this.activatePage( autoAnimatePage ),\n\t\t\t\t\tdeactivate: () => this.deactivatePage( autoAnimatePage )\n\t\t\t\t};\n\t\t\t}));\n\t\t}\n\n\t}\n\n\t/**\n\t * Helper method for creating a page definition and adding\n\t * required fields. A \"page\" is a slide or auto-animate step.\n\t */\n\tcreatePage( page ) {\n\n\t\tpage.scrollTriggers = [];\n\t\tpage.indexh = parseInt( page.slideElement.getAttribute( 'data-index-h' ), 10 );\n\t\tpage.indexv = parseInt( page.slideElement.getAttribute( 'data-index-v' ), 10 );\n\n\t\treturn page;\n\n\t}\n\n\t/**\n\t * Rerenders progress bar segments so that they match the current\n\t * reveal.js config and size.\n\t */\n\tsyncProgressBar() {\n\n\t\tthis.progressBarInner.querySelectorAll( '.scrollbar-slide' ).forEach( slide => slide.remove() );\n\n\t\tconst scrollHeight = this.viewportElement.scrollHeight;\n\t\tconst viewportHeight = this.viewportElement.offsetHeight;\n\t\tconst viewportHeightFactor = viewportHeight / scrollHeight;\n\n\t\tthis.progressBarHeight = this.progressBarInner.offsetHeight;\n\t\tthis.playheadHeight = Math.max( viewportHeightFactor * this.progressBarHeight, MIN_PLAYHEAD_HEIGHT );\n\t\tthis.progressBarScrollableHeight = this.progressBarHeight - this.playheadHeight;\n\n\t\tconst progressSegmentHeight = viewportHeight / scrollHeight * this.progressBarHeight;\n\t\tconst spacing = Math.min( progressSegmentHeight / 8, MAX_PROGRESS_SPACING );\n\n\t\tthis.progressBarPlayhead.style.height = this.playheadHeight - spacing + 'px';\n\n\t\t// Don't show individual segments if they're too small\n\t\tif( progressSegmentHeight > MIN_PROGRESS_SEGMENT_HEIGHT ) {\n\n\t\t\tthis.slideTriggers.forEach( slideTrigger => {\n\n\t\t\t\tconst { page } = slideTrigger;\n\n\t\t\t\t// Visual representation of a slide\n\t\t\t\tpage.progressBarSlide = document.createElement( 'div' );\n\t\t\t\tpage.progressBarSlide.className = 'scrollbar-slide';\n\t\t\t\tpage.progressBarSlide.style.top = slideTrigger.range[0] * this.progressBarHeight + 'px';\n\t\t\t\tpage.progressBarSlide.style.height = ( slideTrigger.range[1] - slideTrigger.range[0] ) * this.progressBarHeight - spacing + 'px';\n\t\t\t\tpage.progressBarSlide.classList.toggle( 'has-triggers', page.scrollTriggers.length > 0 );\n\t\t\t\tthis.progressBarInner.appendChild( page.progressBarSlide );\n\n\t\t\t\t// Visual representations of each scroll trigger\n\t\t\t\tpage.scrollTriggerElements = page.scrollTriggers.map( ( trigger, i ) => {\n\n\t\t\t\t\tconst triggerElement = document.createElement( 'div' );\n\t\t\t\t\ttriggerElement.className = 'scrollbar-trigger';\n\t\t\t\t\ttriggerElement.style.top = ( trigger.range[0] - slideTrigger.range[0] ) * this.progressBarHeight + 'px';\n\t\t\t\t\ttriggerElement.style.height = ( trigger.range[1] - trigger.range[0] ) * this.progressBarHeight - spacing + 'px';\n\t\t\t\t\tpage.progressBarSlide.appendChild( triggerElement );\n\n\t\t\t\t\tif( i === 0 ) triggerElement.style.display = 'none';\n\n\t\t\t\t\treturn triggerElement;\n\n\t\t\t\t} );\n\n\t\t\t} );\n\n\t\t}\n\t\telse {\n\n\t\t\tthis.pages.forEach( page => page.progressBarSlide = null );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Reads the current scroll position and updates our active\n\t * trigger states accordingly.\n\t */\n\tsyncScrollPosition() {\n\n\t\tconst viewportHeight = this.viewportElement.offsetHeight;\n\t\tconst viewportHeightFactor = viewportHeight / this.viewportElement.scrollHeight;\n\n\t\tconst scrollTop = this.viewportElement.scrollTop;\n\t\tconst scrollHeight = this.viewportElement.scrollHeight - viewportHeight\n\t\tconst scrollProgress = Math.max( Math.min( scrollTop / scrollHeight, 1 ), 0 );\n\t\tconst scrollProgressMid = Math.max( Math.min( ( scrollTop + viewportHeight / 2 ) / this.viewportElement.scrollHeight, 1 ), 0 );\n\n\t\tlet activePage;\n\n\t\tthis.slideTriggers.forEach( ( trigger ) => {\n\t\t\tconst { page } = trigger;\n\n\t\t\tconst shouldPreload = scrollProgress >= trigger.range[0] - viewportHeightFactor*2 &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tscrollProgress <= trigger.range[1] + viewportHeightFactor*2;\n\n\t\t\t// Load slides that are within the preload range\n\t\t\tif( shouldPreload && !page.loaded ) {\n\t\t\t\tpage.loaded = true;\n\t\t\t\tthis.Reveal.slideContent.load( page.slideElement );\n\t\t\t}\n\t\t\telse if( page.loaded ) {\n\t\t\t\tpage.loaded = false;\n\t\t\t\tthis.Reveal.slideContent.unload( page.slideElement );\n\t\t\t}\n\n\t\t\t// If we're within this trigger range, activate it\n\t\t\tif( scrollProgress >= trigger.range[0] && scrollProgress <= trigger.range[1] ) {\n\t\t\t\tthis.activateTrigger( trigger );\n\t\t\t\tactivePage = trigger.page;\n\t\t\t}\n\t\t\t// .. otherwise deactivate\n\t\t\telse if( trigger.active ) {\n\t\t\t\tthis.deactivateTrigger( trigger );\n\t\t\t}\n\t\t} );\n\n\t\t// Each page can have its own scroll triggers, check if any of those\n\t\t// need to be activated/deactivated\n\t\tif( activePage ) {\n\t\t\tactivePage.scrollTriggers.forEach( ( trigger ) => {\n\t\t\t\tif( scrollProgressMid >= trigger.range[0] && scrollProgressMid <= trigger.range[1] ) {\n\t\t\t\t\tthis.activateTrigger( trigger );\n\t\t\t\t}\n\t\t\t\telse if( trigger.active ) {\n\t\t\t\t\tthis.deactivateTrigger( trigger );\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\n\t\t// Update our visual progress indication\n\t\tthis.setProgressBarValue( scrollTop / ( this.viewportElement.scrollHeight - viewportHeight ) );\n\n\t}\n\n\t/**\n\t * Moves the progress bar playhead to the specified position.\n\t *\n\t * @param {number} progress 0-1\n\t */\n\tsetProgressBarValue( progress ) {\n\n\t\tif( this.progressBar ) {\n\n\t\t\tthis.progressBarPlayhead.style.transform = `translateY(${progress * this.progressBarScrollableHeight}px)`;\n\n\t\t\tthis.getAllPages()\n\t\t\t\t.filter( page => page.progressBarSlide )\n\t\t\t\t.forEach( ( page ) => {\n\t\t\t\t\tpage.progressBarSlide.classList.toggle( 'active', page.active === true );\n\n\t\t\t\t\tpage.scrollTriggers.forEach( ( trigger, i ) => {\n\t\t\t\t\t\tpage.scrollTriggerElements[i].classList.toggle( 'active', page.active === true && trigger.active === true );\n\t\t\t\t\t} );\n\t\t\t\t} );\n\n\t\t\tthis.showProgressBar();\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Show the progress bar and, if configured, automatically hide\n\t * it after a delay.\n\t */\n\tshowProgressBar() {\n\n\t\tthis.progressBar.classList.add( 'visible' );\n\n\t\tclearTimeout( this.hideProgressBarTimeout );\n\n\t\tif( this.Reveal.getConfig().scrollProgress === 'auto' && !this.draggingProgressBar ) {\n\n\t\t\tthis.hideProgressBarTimeout = setTimeout( () => {\n\t\t\t\tif( this.progressBar ) {\n\t\t\t\t\tthis.progressBar.classList.remove( 'visible' );\n\t\t\t\t}\n\t\t\t}, HIDE_SCROLLBAR_TIMEOUT );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Scroll to the previous page.\n\t */\n\tprev() {\n\n\t\tthis.viewportElement.scrollTop -= this.scrollTriggerHeight;\n\n\t}\n\n\t/**\n\t * Scroll to the next page.\n\t */\n\tnext() {\n\n\t\tthis.viewportElement.scrollTop += this.scrollTriggerHeight;\n\n\t}\n\n\t/**\n\t * Scrolls the given slide element into view.\n\t *\n\t * @param {HTMLElement} slideElement\n\t */\n\tscrollToSlide( slideElement ) {\n\n\t\t// If the scroll view isn't active yet, queue this action\n\t\tif( !this.active ) {\n\t\t\tthis.activatedCallbacks.push( () => this.scrollToSlide( slideElement ) );\n\t\t}\n\t\telse {\n\t\t\t// Find the trigger for this slide\n\t\t\tconst trigger = this.getScrollTriggerBySlide( slideElement );\n\n\t\t\tif( trigger ) {\n\t\t\t\t// Use the trigger's range to calculate the scroll position\n\t\t\t\tthis.viewportElement.scrollTop = trigger.range[0] * ( this.viewportElement.scrollHeight - this.viewportElement.offsetHeight );\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Persists the current scroll position to session storage\n\t * so that it can be restored.\n\t */\n\tstoreScrollPosition() {\n\n\t\tclearTimeout( this.storeScrollPositionTimeout );\n\n\t\tthis.storeScrollPositionTimeout = setTimeout( () => {\n\t\t\tsessionStorage.setItem( 'reveal-scroll-top', this.viewportElement.scrollTop );\n\t\t\tsessionStorage.setItem( 'reveal-scroll-origin', location.origin + location.pathname );\n\n\t\t\tthis.storeScrollPositionTimeout = null;\n\t\t}, 50 );\n\n\t}\n\n\t/**\n\t * Restores the scroll position when a deck is reloader.\n\t */\n\trestoreScrollPosition() {\n\n\t\tconst scrollPosition = sessionStorage.getItem( 'reveal-scroll-top' );\n\t\tconst scrollOrigin = sessionStorage.getItem( 'reveal-scroll-origin' );\n\n\t\tif( scrollPosition && scrollOrigin === location.origin + location.pathname ) {\n\t\t\tthis.viewportElement.scrollTop = parseInt( scrollPosition, 10 );\n\t\t}\n\n\t}\n\n\t/**\n\t * Activates the given page and starts its embedded content\n\t * if there is any.\n\t *\n\t * @param {object} page\n\t */\n\tactivatePage( page ) {\n\n\t\tif( !page.active ) {\n\n\t\t\tpage.active = true;\n\n\t\t\tconst { slideElement, backgroundElement, contentElement, indexh, indexv } = page;\n\n\t\t\tcontentElement.style.display = 'block';\n\n\t\t\tslideElement.classList.add( 'present' );\n\n\t\t\tif( backgroundElement ) {\n\t\t\t\tbackgroundElement.classList.add( 'present' );\n\t\t\t}\n\n\t\t\tthis.Reveal.setCurrentScrollPage( slideElement, indexh, indexv );\n\t\t\tthis.Reveal.backgrounds.bubbleSlideContrastClassToElement( slideElement, this.viewportElement );\n\n\t\t\t// If this page is part of an auto-animation there will be one\n\t\t\t// content element per auto-animated page. We need to show the\n\t\t\t// current page and hide all others.\n\t\t\tArray.from( contentElement.parentNode.querySelectorAll( '.scroll-page-content' ) ).forEach( sibling => {\n\t\t\t\tif( sibling !== contentElement ) {\n\t\t\t\t\tsibling.style.display = 'none';\n\t\t\t\t}\n\t\t\t});\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Deactivates the page after it has been visible.\n\t *\n\t * @param {object} page\n\t */\n\tdeactivatePage( page ) {\n\n\t\tif( page.active ) {\n\n\t\t\tpage.active = false;\n\t\t\tif( page.slideElement ) page.slideElement.classList.remove( 'present' );\n\t\t\tif( page.backgroundElement ) page.backgroundElement.classList.remove( 'present' );\n\n\t\t}\n\n\t}\n\n\tactivateTrigger( trigger ) {\n\n\t\tif( !trigger.active ) {\n\t\t\ttrigger.active = true;\n\t\t\ttrigger.activate();\n\t\t}\n\n\t}\n\n\tdeactivateTrigger( trigger ) {\n\n\t\tif( trigger.active ) {\n\t\t\ttrigger.active = false;\n\n\t\t\tif( trigger.deactivate ) {\n\t\t\t\ttrigger.deactivate();\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Retrieve a slide by its original h/v index (i.e. the indices the\n\t * slide had before being linearized).\n\t *\n\t * @param {number} h\n\t * @param {number} v\n\t * @returns {HTMLElement}\n\t */\n\tgetSlideByIndices( h, v ) {\n\n\t\tconst page = this.getAllPages().find( page => {\n\t\t\treturn page.indexh === h && page.indexv === v;\n\t\t} );\n\n\t\treturn page ? page.slideElement : null;\n\n\t}\n\n\t/**\n\t * Retrieve a list of all scroll triggers for the given slide\n\t * DOM element.\n\t *\n\t * @param {HTMLElement} slide\n\t * @returns {Array}\n\t */\n\tgetScrollTriggerBySlide( slide ) {\n\n\t\treturn this.slideTriggers.find( trigger => trigger.page.slideElement === slide );\n\n\t}\n\n\t/**\n\t * Get a list of all pages in the scroll view. This includes\n\t * both top-level slides and auto-animate steps.\n\t *\n\t * @returns {Array}\n\t */\n\tgetAllPages() {\n\n\t\treturn this.pages.flatMap( page => [page, ...(page.autoAnimatePages || [])] );\n\n\t}\n\n\tonScroll() {\n\n\t\tthis.syncScrollPosition();\n\t\tthis.storeScrollPosition();\n\n\t}\n\n\tget viewportElement() {\n\n\t\treturn this.Reveal.getViewportElement();\n\n\t}\n\n}\n","import { SLIDES_SELECTOR } from '../utils/constants.js'\nimport { queryAll, createStyleSheet } from '../utils/util.js'\n\n/**\n * Setups up our presentation for printing/exporting to PDF.\n */\nexport default class PrintView {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\t/**\n\t * Configures the presentation for printing to a static\n\t * PDF.\n\t */\n\tasync activate() {\n\n\t\tconst config = this.Reveal.getConfig();\n\t\tconst slides = queryAll( this.Reveal.getRevealElement(), SLIDES_SELECTOR )\n\n\t\t// Compute slide numbers now, before we start duplicating slides\n\t\tconst injectPageNumbers = config.slideNumber && /all|print/i.test( config.showSlideNumber );\n\n\t\tconst slideSize = this.Reveal.getComputedSlideSize( window.innerWidth, window.innerHeight );\n\n\t\t// Dimensions of the PDF pages\n\t\tconst pageWidth = Math.floor( slideSize.width * ( 1 + config.margin ) ),\n\t\t\tpageHeight = Math.floor( slideSize.height * ( 1 + config.margin ) );\n\n\t\t// Dimensions of slides within the pages\n\t\tconst slideWidth = slideSize.width,\n\t\t\tslideHeight = slideSize.height;\n\n\t\tawait new Promise( requestAnimationFrame );\n\n\t\t// Let the browser know what page size we want to print\n\t\tcreateStyleSheet( '@page{size:'+ pageWidth +'px '+ pageHeight +'px; margin: 0px;}' );\n\n\t\t// Limit the size of certain elements to the dimensions of the slide\n\t\tcreateStyleSheet( '.reveal section>img, .reveal section>video, .reveal section>iframe{max-width: '+ slideWidth +'px; max-height:'+ slideHeight +'px}' );\n\n\t\tdocument.documentElement.classList.add( 'reveal-print', 'print-pdf' );\n\t\tdocument.body.style.width = pageWidth + 'px';\n\t\tdocument.body.style.height = pageHeight + 'px';\n\n\t\tconst viewportElement = this.Reveal.getViewportElement();\n\t\tlet presentationBackground;\n\t\tif( viewportElement ) {\n\t\t\tconst viewportStyles = window.getComputedStyle( viewportElement );\n\t\t\tif( viewportStyles && viewportStyles.background ) {\n\t\t\t\tpresentationBackground = viewportStyles.background;\n\t\t\t}\n\t\t}\n\n\t\t// Make sure stretch elements fit on slide\n\t\tawait new Promise( requestAnimationFrame );\n\t\tthis.Reveal.layoutSlideContents( slideWidth, slideHeight );\n\n\t\t// Batch scrollHeight access to prevent layout thrashing\n\t\tawait new Promise( requestAnimationFrame );\n\n\t\tconst slideScrollHeights = slides.map( slide => slide.scrollHeight );\n\n\t\tconst pages = [];\n\t\tconst pageContainer = slides[0].parentNode;\n\t\tlet slideNumber = 1;\n\n\t\t// Slide and slide background layout\n\t\tslides.forEach( function( slide, index ) {\n\n\t\t\t// Vertical stacks are not centred since their section\n\t\t\t// children will be\n\t\t\tif( slide.classList.contains( 'stack' ) === false ) {\n\t\t\t\t// Center the slide inside of the page, giving the slide some margin\n\t\t\t\tlet left = ( pageWidth - slideWidth ) / 2;\n\t\t\t\tlet top = ( pageHeight - slideHeight ) / 2;\n\n\t\t\t\tconst contentHeight = slideScrollHeights[ index ];\n\t\t\t\tlet numberOfPages = Math.max( Math.ceil( contentHeight / pageHeight ), 1 );\n\n\t\t\t\t// Adhere to configured pages per slide limit\n\t\t\t\tnumberOfPages = Math.min( numberOfPages, config.pdfMaxPagesPerSlide );\n\n\t\t\t\t// Center slides vertically\n\t\t\t\tif( numberOfPages === 1 && config.center || slide.classList.contains( 'center' ) ) {\n\t\t\t\t\ttop = Math.max( ( pageHeight - contentHeight ) / 2, 0 );\n\t\t\t\t}\n\n\t\t\t\t// Wrap the slide in a page element and hide its overflow\n\t\t\t\t// so that no page ever flows onto another\n\t\t\t\tconst page = document.createElement( 'div' );\n\t\t\t\tpages.push( page );\n\n\t\t\t\tpage.className = 'pdf-page';\n\t\t\t\tpage.style.height = ( ( pageHeight + config.pdfPageHeightOffset ) * numberOfPages ) + 'px';\n\n\t\t\t\t// Copy the presentation-wide background to each individual\n\t\t\t\t// page when printing\n\t\t\t\tif( presentationBackground ) {\n\t\t\t\t\tpage.style.background = presentationBackground;\n\t\t\t\t}\n\n\t\t\t\tpage.appendChild( slide );\n\n\t\t\t\t// Position the slide inside of the page\n\t\t\t\tslide.style.left = left + 'px';\n\t\t\t\tslide.style.top = top + 'px';\n\t\t\t\tslide.style.width = slideWidth + 'px';\n\n\t\t\t\tthis.Reveal.slideContent.layout( slide );\n\n\t\t\t\tif( slide.slideBackgroundElement ) {\n\t\t\t\t\tpage.insertBefore( slide.slideBackgroundElement, slide );\n\t\t\t\t}\n\n\t\t\t\t// Inject notes if `showNotes` is enabled\n\t\t\t\tif( config.showNotes ) {\n\n\t\t\t\t\t// Are there notes for this slide?\n\t\t\t\t\tconst notes = this.Reveal.getSlideNotes( slide );\n\t\t\t\t\tif( notes ) {\n\n\t\t\t\t\t\tconst notesSpacing = 8;\n\t\t\t\t\t\tconst notesLayout = typeof config.showNotes === 'string' ? config.showNotes : 'inline';\n\t\t\t\t\t\tconst notesElement = document.createElement( 'div' );\n\t\t\t\t\t\tnotesElement.classList.add( 'speaker-notes' );\n\t\t\t\t\t\tnotesElement.classList.add( 'speaker-notes-pdf' );\n\t\t\t\t\t\tnotesElement.setAttribute( 'data-layout', notesLayout );\n\t\t\t\t\t\tnotesElement.innerHTML = notes;\n\n\t\t\t\t\t\tif( notesLayout === 'separate-page' ) {\n\t\t\t\t\t\t\tpages.push( notesElement );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tnotesElement.style.left = notesSpacing + 'px';\n\t\t\t\t\t\t\tnotesElement.style.bottom = notesSpacing + 'px';\n\t\t\t\t\t\t\tnotesElement.style.width = ( pageWidth - notesSpacing*2 ) + 'px';\n\t\t\t\t\t\t\tpage.appendChild( notesElement );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// Inject page numbers if `slideNumbers` are enabled\n\t\t\t\tif( injectPageNumbers ) {\n\t\t\t\t\tconst numberElement = document.createElement( 'div' );\n\t\t\t\t\tnumberElement.classList.add( 'slide-number' );\n\t\t\t\t\tnumberElement.classList.add( 'slide-number-pdf' );\n\t\t\t\t\tnumberElement.innerHTML = slideNumber++;\n\t\t\t\t\tpage.appendChild( numberElement );\n\t\t\t\t}\n\n\t\t\t\t// Copy page and show fragments one after another\n\t\t\t\tif( config.pdfSeparateFragments ) {\n\n\t\t\t\t\t// Each fragment 'group' is an array containing one or more\n\t\t\t\t\t// fragments. Multiple fragments that appear at the same time\n\t\t\t\t\t// are part of the same group.\n\t\t\t\t\tconst fragmentGroups = this.Reveal.fragments.sort( page.querySelectorAll( '.fragment' ), true );\n\n\t\t\t\t\tlet previousFragmentStep;\n\n\t\t\t\t\tfragmentGroups.forEach( function( fragments, index ) {\n\n\t\t\t\t\t\t// Remove 'current-fragment' from the previous group\n\t\t\t\t\t\tif( previousFragmentStep ) {\n\t\t\t\t\t\t\tpreviousFragmentStep.forEach( function( fragment ) {\n\t\t\t\t\t\t\t\tfragment.classList.remove( 'current-fragment' );\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Show the fragments for the current index\n\t\t\t\t\t\tfragments.forEach( function( fragment ) {\n\t\t\t\t\t\t\tfragment.classList.add( 'visible', 'current-fragment' );\n\t\t\t\t\t\t}, this );\n\n\t\t\t\t\t\t// Create a separate page for the current fragment state\n\t\t\t\t\t\tconst clonedPage = page.cloneNode( true );\n\n\t\t\t\t\t\t// Inject unique page numbers for fragments\n\t\t\t\t\t\tif( injectPageNumbers ) {\n\t\t\t\t\t\t\tconst numberElement = clonedPage.querySelector( '.slide-number-pdf' );\n\t\t\t\t\t\t\tconst fragmentNumber = index + 1;\n\t\t\t\t\t\t\tnumberElement.innerHTML += '.' + fragmentNumber;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tpages.push( clonedPage );\n\n\t\t\t\t\t\tpreviousFragmentStep = fragments;\n\n\t\t\t\t\t}, this );\n\n\t\t\t\t\t// Reset the first/original page so that all fragments are hidden\n\t\t\t\t\tfragmentGroups.forEach( function( fragments ) {\n\t\t\t\t\t\tfragments.forEach( function( fragment ) {\n\t\t\t\t\t\t\tfragment.classList.remove( 'visible', 'current-fragment' );\n\t\t\t\t\t\t} );\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\t\t\t\t// Show all fragments\n\t\t\t\telse {\n\t\t\t\t\tqueryAll( page, '.fragment:not(.fade-out)' ).forEach( function( fragment ) {\n\t\t\t\t\t\tfragment.classList.add( 'visible' );\n\t\t\t\t\t} );\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}, this );\n\n\t\tawait new Promise( requestAnimationFrame );\n\n\t\tpages.forEach( page => pageContainer.appendChild( page ) );\n\n\t\t// Re-run JS-based content layout after the slide is added to page DOM\n\t\tthis.Reveal.slideContent.layout( this.Reveal.getSlidesElement() );\n\n\t\t// Notify subscribers that the PDF layout is good to go\n\t\tthis.Reveal.dispatchEvent({ type: 'pdf-ready' });\n\n\t\tviewportElement.classList.remove( 'loading-scroll-mode' );\n\n\t}\n\n\t/**\n\t * Checks if the print mode is/should be activated.\n\t */\n\tisActive() {\n\n\t\treturn this.Reveal.getConfig().view === 'print';\n\n\t}\n\n}","import { extend, queryAll } from '../utils/util.js'\n\n/**\n * Handles sorting and navigation of slide fragments.\n * Fragments are elements within a slide that are\n * revealed/animated incrementally.\n */\nexport default class Fragments {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.fragments === false ) {\n\t\t\tthis.disable();\n\t\t}\n\t\telse if( oldConfig.fragments === false ) {\n\t\t\tthis.enable();\n\t\t}\n\n\t}\n\n\t/**\n\t * If fragments are disabled in the deck, they should all be\n\t * visible rather than stepped through.\n\t */\n\tdisable() {\n\n\t\tqueryAll( this.Reveal.getSlidesElement(), '.fragment' ).forEach( element => {\n\t\t\telement.classList.add( 'visible' );\n\t\t\telement.classList.remove( 'current-fragment' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Reverse of #disable(). Only called if fragments have\n\t * previously been disabled.\n\t */\n\tenable() {\n\n\t\tqueryAll( this.Reveal.getSlidesElement(), '.fragment' ).forEach( element => {\n\t\t\telement.classList.remove( 'visible' );\n\t\t\telement.classList.remove( 'current-fragment' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Returns an object describing the available fragment\n\t * directions.\n\t *\n\t * @return {{prev: boolean, next: boolean}}\n\t */\n\tavailableRoutes() {\n\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tif( currentSlide && this.Reveal.getConfig().fragments ) {\n\t\t\tlet fragments = currentSlide.querySelectorAll( '.fragment:not(.disabled)' );\n\t\t\tlet hiddenFragments = currentSlide.querySelectorAll( '.fragment:not(.disabled):not(.visible)' );\n\n\t\t\treturn {\n\t\t\t\tprev: fragments.length - hiddenFragments.length > 0,\n\t\t\t\tnext: !!hiddenFragments.length\n\t\t\t};\n\t\t}\n\t\telse {\n\t\t\treturn { prev: false, next: false };\n\t\t}\n\n\t}\n\n\t/**\n\t * Return a sorted fragments list, ordered by an increasing\n\t * \"data-fragment-index\" attribute.\n\t *\n\t * Fragments will be revealed in the order that they are returned by\n\t * this function, so you can use the index attributes to control the\n\t * order of fragment appearance.\n\t *\n\t * To maintain a sensible default fragment order, fragments are presumed\n\t * to be passed in document order. This function adds a \"fragment-index\"\n\t * attribute to each node if such an attribute is not already present,\n\t * and sets that attribute to an integer value which is the position of\n\t * the fragment within the fragments list.\n\t *\n\t * @param {object[]|*} fragments\n\t * @param {boolean} grouped If true the returned array will contain\n\t * nested arrays for all fragments with the same index\n\t * @return {object[]} sorted Sorted array of fragments\n\t */\n\tsort( fragments, grouped = false ) {\n\n\t\tfragments = Array.from( fragments );\n\n\t\tlet ordered = [],\n\t\t\tunordered = [],\n\t\t\tsorted = [];\n\n\t\t// Group ordered and unordered elements\n\t\tfragments.forEach( fragment => {\n\t\t\tif( fragment.hasAttribute( 'data-fragment-index' ) ) {\n\t\t\t\tlet index = parseInt( fragment.getAttribute( 'data-fragment-index' ), 10 );\n\n\t\t\t\tif( !ordered[index] ) {\n\t\t\t\t\tordered[index] = [];\n\t\t\t\t}\n\n\t\t\t\tordered[index].push( fragment );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tunordered.push( [ fragment ] );\n\t\t\t}\n\t\t} );\n\n\t\t// Append fragments without explicit indices in their\n\t\t// DOM order\n\t\tordered = ordered.concat( unordered );\n\n\t\t// Manually count the index up per group to ensure there\n\t\t// are no gaps\n\t\tlet index = 0;\n\n\t\t// Push all fragments in their sorted order to an array,\n\t\t// this flattens the groups\n\t\tordered.forEach( group => {\n\t\t\tgroup.forEach( fragment => {\n\t\t\t\tsorted.push( fragment );\n\t\t\t\tfragment.setAttribute( 'data-fragment-index', index );\n\t\t\t} );\n\n\t\t\tindex ++;\n\t\t} );\n\n\t\treturn grouped === true ? ordered : sorted;\n\n\t}\n\n\t/**\n\t * Sorts and formats all of fragments in the\n\t * presentation.\n\t */\n\tsortAll() {\n\n\t\tthis.Reveal.getHorizontalSlides().forEach( horizontalSlide => {\n\n\t\t\tlet verticalSlides = queryAll( horizontalSlide, 'section' );\n\t\t\tverticalSlides.forEach( ( verticalSlide, y ) => {\n\n\t\t\t\tthis.sort( verticalSlide.querySelectorAll( '.fragment' ) );\n\n\t\t\t}, this );\n\n\t\t\tif( verticalSlides.length === 0 ) this.sort( horizontalSlide.querySelectorAll( '.fragment' ) );\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Refreshes the fragments on the current slide so that they\n\t * have the appropriate classes (.visible + .current-fragment).\n\t *\n\t * @param {number} [index] The index of the current fragment\n\t * @param {array} [fragments] Array containing all fragments\n\t * in the current slide\n\t *\n\t * @return {{shown: array, hidden: array}}\n\t */\n\tupdate( index, fragments, slide = this.Reveal.getCurrentSlide() ) {\n\n\t\tlet changedFragments = {\n\t\t\tshown: [],\n\t\t\thidden: []\n\t\t};\n\n\t\tif( slide && this.Reveal.getConfig().fragments ) {\n\n\t\t\tfragments = fragments || this.sort( slide.querySelectorAll( '.fragment' ) );\n\n\t\t\tif( fragments.length ) {\n\n\t\t\t\tlet maxIndex = 0;\n\n\t\t\t\tif( typeof index !== 'number' ) {\n\t\t\t\t\tlet currentFragment = this.sort( slide.querySelectorAll( '.fragment.visible' ) ).pop();\n\t\t\t\t\tif( currentFragment ) {\n\t\t\t\t\t\tindex = parseInt( currentFragment.getAttribute( 'data-fragment-index' ) || 0, 10 );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tArray.from( fragments ).forEach( ( el, i ) => {\n\n\t\t\t\t\tif( el.hasAttribute( 'data-fragment-index' ) ) {\n\t\t\t\t\t\ti = parseInt( el.getAttribute( 'data-fragment-index' ), 10 );\n\t\t\t\t\t}\n\n\t\t\t\t\tmaxIndex = Math.max( maxIndex, i );\n\n\t\t\t\t\t// Visible fragments\n\t\t\t\t\tif( i <= index ) {\n\t\t\t\t\t\tlet wasVisible = el.classList.contains( 'visible' )\n\t\t\t\t\t\tel.classList.add( 'visible' );\n\t\t\t\t\t\tel.classList.remove( 'current-fragment' );\n\n\t\t\t\t\t\tif( i === index ) {\n\t\t\t\t\t\t\t// Announce the fragments one by one to the Screen Reader\n\t\t\t\t\t\t\tthis.Reveal.announceStatus( this.Reveal.getStatusText( el ) );\n\n\t\t\t\t\t\t\tel.classList.add( 'current-fragment' );\n\t\t\t\t\t\t\tthis.Reveal.slideContent.startEmbeddedContent( el );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif( !wasVisible ) {\n\t\t\t\t\t\t\tchangedFragments.shown.push( el )\n\t\t\t\t\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\t\t\t\t\ttarget: el,\n\t\t\t\t\t\t\t\ttype: 'visible',\n\t\t\t\t\t\t\t\tbubbles: false\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// Hidden fragments\n\t\t\t\t\telse {\n\t\t\t\t\t\tlet wasVisible = el.classList.contains( 'visible' )\n\t\t\t\t\t\tel.classList.remove( 'visible' );\n\t\t\t\t\t\tel.classList.remove( 'current-fragment' );\n\n\t\t\t\t\t\tif( wasVisible ) {\n\t\t\t\t\t\t\tthis.Reveal.slideContent.stopEmbeddedContent( el );\n\t\t\t\t\t\t\tchangedFragments.hidden.push( el );\n\t\t\t\t\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\t\t\t\t\ttarget: el,\n\t\t\t\t\t\t\t\ttype: 'hidden',\n\t\t\t\t\t\t\t\tbubbles: false\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\t// Write the current fragment index to the slide <section>.\n\t\t\t\t// This can be used by end users to apply styles based on\n\t\t\t\t// the current fragment index.\n\t\t\t\tindex = typeof index === 'number' ? index : -1;\n\t\t\t\tindex = Math.max( Math.min( index, maxIndex ), -1 );\n\t\t\t\tslide.setAttribute( 'data-fragment', index );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif( changedFragments.hidden.length ) {\n\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\ttype: 'fragmenthidden',\n\t\t\t\tdata: {\n\t\t\t\t\tfragment: changedFragments.hidden[0],\n\t\t\t\t\tfragments: changedFragments.hidden\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tif( changedFragments.shown.length ) {\n\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\ttype: 'fragmentshown',\n\t\t\t\tdata: {\n\t\t\t\t\tfragment: changedFragments.shown[0],\n\t\t\t\t\tfragments: changedFragments.shown\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\treturn changedFragments;\n\n\t}\n\n\t/**\n\t * Formats the fragments on the given slide so that they have\n\t * valid indices. Call this if fragments are changed in the DOM\n\t * after reveal.js has already initialized.\n\t *\n\t * @param {HTMLElement} slide\n\t * @return {Array} a list of the HTML fragments that were synced\n\t */\n\tsync( slide = this.Reveal.getCurrentSlide() ) {\n\n\t\treturn this.sort( slide.querySelectorAll( '.fragment' ) );\n\n\t}\n\n\t/**\n\t * Navigate to the specified slide fragment.\n\t *\n\t * @param {?number} index The index of the fragment that\n\t * should be shown, -1 means all are invisible\n\t * @param {number} offset Integer offset to apply to the\n\t * fragment index\n\t *\n\t * @return {boolean} true if a change was made in any\n\t * fragments visibility as part of this call\n\t */\n\tgoto( index, offset = 0 ) {\n\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tif( currentSlide && this.Reveal.getConfig().fragments ) {\n\n\t\t\tlet fragments = this.sort( currentSlide.querySelectorAll( '.fragment:not(.disabled)' ) );\n\t\t\tif( fragments.length ) {\n\n\t\t\t\t// If no index is specified, find the current\n\t\t\t\tif( typeof index !== 'number' ) {\n\t\t\t\t\tlet lastVisibleFragment = this.sort( currentSlide.querySelectorAll( '.fragment:not(.disabled).visible' ) ).pop();\n\n\t\t\t\t\tif( lastVisibleFragment ) {\n\t\t\t\t\t\tindex = parseInt( lastVisibleFragment.getAttribute( 'data-fragment-index' ) || 0, 10 );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tindex = -1;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Apply the offset if there is one\n\t\t\t\tindex += offset;\n\n\t\t\t\tlet changedFragments = this.update( index, fragments );\n\n\t\t\t\tthis.Reveal.controls.update();\n\t\t\t\tthis.Reveal.progress.update();\n\n\t\t\t\tif( this.Reveal.getConfig().fragmentInURL ) {\n\t\t\t\t\tthis.Reveal.location.writeURL();\n\t\t\t\t}\n\n\t\t\t\treturn !!( changedFragments.shown.length || changedFragments.hidden.length );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Navigate to the next slide fragment.\n\t *\n\t * @return {boolean} true if there was a next fragment,\n\t * false otherwise\n\t */\n\tnext() {\n\n\t\treturn this.goto( null, 1 );\n\n\t}\n\n\t/**\n\t * Navigate to the previous slide fragment.\n\t *\n\t * @return {boolean} true if there was a previous fragment,\n\t * false otherwise\n\t */\n\tprev() {\n\n\t\treturn this.goto( null, -1 );\n\n\t}\n\n}","import { SLIDES_SELECTOR } from '../utils/constants.js'\nimport { extend, queryAll, transformElement } from '../utils/util.js'\n\n/**\n * Handles all logic related to the overview mode\n * (birds-eye view of all slides).\n */\nexport default class Overview {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.active = false;\n\n\t\tthis.onSlideClicked = this.onSlideClicked.bind( this );\n\n\t}\n\n\t/**\n\t * Displays the overview of slides (quick nav) by scaling\n\t * down and arranging all slide elements.\n\t */\n\tactivate() {\n\n\t\t// Only proceed if enabled in config\n\t\tif( this.Reveal.getConfig().overview && !this.Reveal.isScrollView() && !this.isActive() ) {\n\n\t\t\tthis.active = true;\n\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'overview' );\n\n\t\t\t// Don't auto-slide while in overview mode\n\t\t\tthis.Reveal.cancelAutoSlide();\n\n\t\t\t// Move the backgrounds element into the slide container to\n\t\t\t// that the same scaling is applied\n\t\t\tthis.Reveal.getSlidesElement().appendChild( this.Reveal.getBackgroundsElement() );\n\n\t\t\t// Clicking on an overview slide navigates to it\n\t\t\tqueryAll( this.Reveal.getRevealElement(), SLIDES_SELECTOR ).forEach( slide => {\n\t\t\t\tif( !slide.classList.contains( 'stack' ) ) {\n\t\t\t\t\tslide.addEventListener( 'click', this.onSlideClicked, true );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t// Calculate slide sizes\n\t\t\tconst margin = 70;\n\t\t\tconst slideSize = this.Reveal.getComputedSlideSize();\n\t\t\tthis.overviewSlideWidth = slideSize.width + margin;\n\t\t\tthis.overviewSlideHeight = slideSize.height + margin;\n\n\t\t\t// Reverse in RTL mode\n\t\t\tif( this.Reveal.getConfig().rtl ) {\n\t\t\t\tthis.overviewSlideWidth = -this.overviewSlideWidth;\n\t\t\t}\n\n\t\t\tthis.Reveal.updateSlidesVisibility();\n\n\t\t\tthis.layout();\n\t\t\tthis.update();\n\n\t\t\tthis.Reveal.layout();\n\n\t\t\tconst indices = this.Reveal.getIndices();\n\n\t\t\t// Notify observers of the overview showing\n\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\ttype: 'overviewshown',\n\t\t\t\tdata: {\n\t\t\t\t\t'indexh': indices.h,\n\t\t\t\t\t'indexv': indices.v,\n\t\t\t\t\t'currentSlide': this.Reveal.getCurrentSlide()\n\t\t\t\t}\n\t\t\t});\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Uses CSS transforms to position all slides in a grid for\n\t * display inside of the overview mode.\n\t */\n\tlayout() {\n\n\t\t// Layout slides\n\t\tthis.Reveal.getHorizontalSlides().forEach( ( hslide, h ) => {\n\t\t\thslide.setAttribute( 'data-index-h', h );\n\t\t\ttransformElement( hslide, 'translate3d(' + ( h * this.overviewSlideWidth ) + 'px, 0, 0)' );\n\n\t\t\tif( hslide.classList.contains( 'stack' ) ) {\n\n\t\t\t\tqueryAll( hslide, 'section' ).forEach( ( vslide, v ) => {\n\t\t\t\t\tvslide.setAttribute( 'data-index-h', h );\n\t\t\t\t\tvslide.setAttribute( 'data-index-v', v );\n\n\t\t\t\t\ttransformElement( vslide, 'translate3d(0, ' + ( v * this.overviewSlideHeight ) + 'px, 0)' );\n\t\t\t\t} );\n\n\t\t\t}\n\t\t} );\n\n\t\t// Layout slide backgrounds\n\t\tArray.from( this.Reveal.getBackgroundsElement().childNodes ).forEach( ( hbackground, h ) => {\n\t\t\ttransformElement( hbackground, 'translate3d(' + ( h * this.overviewSlideWidth ) + 'px, 0, 0)' );\n\n\t\t\tqueryAll( hbackground, '.slide-background' ).forEach( ( vbackground, v ) => {\n\t\t\t\ttransformElement( vbackground, 'translate3d(0, ' + ( v * this.overviewSlideHeight ) + 'px, 0)' );\n\t\t\t} );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Moves the overview viewport to the current slides.\n\t * Called each time the current slide changes.\n\t */\n\tupdate() {\n\n\t\tconst vmin = Math.min( window.innerWidth, window.innerHeight );\n\t\tconst scale = Math.max( vmin / 5, 150 ) / vmin;\n\t\tconst indices = this.Reveal.getIndices();\n\n\t\tthis.Reveal.transformSlides( {\n\t\t\toverview: [\n\t\t\t\t'scale('+ scale +')',\n\t\t\t\t'translateX('+ ( -indices.h * this.overviewSlideWidth ) +'px)',\n\t\t\t\t'translateY('+ ( -indices.v * this.overviewSlideHeight ) +'px)'\n\t\t\t].join( ' ' )\n\t\t} );\n\n\t}\n\n\t/**\n\t * Exits the slide overview and enters the currently\n\t * active slide.\n\t */\n\tdeactivate() {\n\n\t\t// Only proceed if enabled in config\n\t\tif( this.Reveal.getConfig().overview ) {\n\n\t\t\tthis.active = false;\n\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'overview' );\n\n\t\t\t// Temporarily add a class so that transitions can do different things\n\t\t\t// depending on whether they are exiting/entering overview, or just\n\t\t\t// moving from slide to slide\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'overview-deactivating' );\n\n\t\t\tsetTimeout( () => {\n\t\t\t\tthis.Reveal.getRevealElement().classList.remove( 'overview-deactivating' );\n\t\t\t}, 1 );\n\n\t\t\t// Move the background element back out\n\t\t\tthis.Reveal.getRevealElement().appendChild( this.Reveal.getBackgroundsElement() );\n\n\t\t\t// Clean up changes made to slides\n\t\t\tqueryAll( this.Reveal.getRevealElement(), SLIDES_SELECTOR ).forEach( slide => {\n\t\t\t\ttransformElement( slide, '' );\n\n\t\t\t\tslide.removeEventListener( 'click', this.onSlideClicked, true );\n\t\t\t} );\n\n\t\t\t// Clean up changes made to backgrounds\n\t\t\tqueryAll( this.Reveal.getBackgroundsElement(), '.slide-background' ).forEach( background => {\n\t\t\t\ttransformElement( background, '' );\n\t\t\t} );\n\n\t\t\tthis.Reveal.transformSlides( { overview: '' } );\n\n\t\t\tconst indices = this.Reveal.getIndices();\n\n\t\t\tthis.Reveal.slide( indices.h, indices.v );\n\t\t\tthis.Reveal.layout();\n\t\t\tthis.Reveal.cueAutoSlide();\n\n\t\t\t// Notify observers of the overview hiding\n\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\ttype: 'overviewhidden',\n\t\t\t\tdata: {\n\t\t\t\t\t'indexh': indices.h,\n\t\t\t\t\t'indexv': indices.v,\n\t\t\t\t\t'currentSlide': this.Reveal.getCurrentSlide()\n\t\t\t\t}\n\t\t\t});\n\n\t\t}\n\t}\n\n\t/**\n\t * Toggles the slide overview mode on and off.\n\t *\n\t * @param {Boolean} [override] Flag which overrides the\n\t * toggle logic and forcibly sets the desired state. True means\n\t * overview is open, false means it's closed.\n\t */\n\ttoggle( override ) {\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? this.activate() : this.deactivate();\n\t\t}\n\t\telse {\n\t\t\tthis.isActive() ? this.deactivate() : this.activate();\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if the overview is currently active.\n\t *\n\t * @return {Boolean} true if the overview is active,\n\t * false otherwise\n\t */\n\tisActive() {\n\n\t\treturn this.active;\n\n\t}\n\n\t/**\n\t * Invoked when a slide is and we're in the overview.\n\t *\n\t * @param {object} event\n\t */\n\tonSlideClicked( event ) {\n\n\t\tif( this.isActive() ) {\n\t\t\tevent.preventDefault();\n\n\t\t\tlet element = event.target;\n\n\t\t\twhile( element && !element.nodeName.match( /section/gi ) ) {\n\t\t\t\telement = element.parentNode;\n\t\t\t}\n\n\t\t\tif( element && !element.classList.contains( 'disabled' ) ) {\n\n\t\t\t\tthis.deactivate();\n\n\t\t\t\tif( element.nodeName.match( /section/gi ) ) {\n\t\t\t\t\tlet h = parseInt( element.getAttribute( 'data-index-h' ), 10 ),\n\t\t\t\t\t\tv = parseInt( element.getAttribute( 'data-index-v' ), 10 );\n\n\t\t\t\t\tthis.Reveal.slide( h, v );\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\n\t}\n\n}","import { enterFullscreen } from '../utils/util.js'\n\n/**\n * Handles all reveal.js keyboard interactions.\n */\nexport default class Keyboard {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\t// A key:value map of keyboard keys and descriptions of\n\t\t// the actions they trigger\n\t\tthis.shortcuts = {};\n\n\t\t// Holds custom key code mappings\n\t\tthis.bindings = {};\n\n\t\tthis.onDocumentKeyDown = this.onDocumentKeyDown.bind( this );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.navigationMode === 'linear' ) {\n\t\t\tthis.shortcuts['&#8594;  ,  &#8595;  ,  SPACE  ,  N  ,  L  ,  J'] = 'Next slide';\n\t\t\tthis.shortcuts['&#8592;  ,  &#8593;  ,  P  ,  H  ,  K']           = 'Previous slide';\n\t\t}\n\t\telse {\n\t\t\tthis.shortcuts['N  ,  SPACE']   = 'Next slide';\n\t\t\tthis.shortcuts['P  ,  Shift SPACE']             = 'Previous slide';\n\t\t\tthis.shortcuts['&#8592;  ,  H'] = 'Navigate left';\n\t\t\tthis.shortcuts['&#8594;  ,  L'] = 'Navigate right';\n\t\t\tthis.shortcuts['&#8593;  ,  K'] = 'Navigate up';\n\t\t\tthis.shortcuts['&#8595;  ,  J'] = 'Navigate down';\n\t\t}\n\n\t\tthis.shortcuts['Alt + &#8592;/&#8593/&#8594;/&#8595;']        = 'Navigate without fragments';\n\t\tthis.shortcuts['Shift + &#8592;/&#8593/&#8594;/&#8595;']      = 'Jump to first/last slide';\n\t\tthis.shortcuts['B  ,  .']                       = 'Pause';\n\t\tthis.shortcuts['F']                             = 'Fullscreen';\n\t\tthis.shortcuts['G']                             = 'Jump to slide';\n\t\tthis.shortcuts['ESC, O']                        = 'Slide overview';\n\n\t}\n\n\t/**\n\t * Starts listening for keyboard events.\n\t */\n\tbind() {\n\n\t\tdocument.addEventListener( 'keydown', this.onDocumentKeyDown, false );\n\n\t}\n\n\t/**\n\t * Stops listening for keyboard events.\n\t */\n\tunbind() {\n\n\t\tdocument.removeEventListener( 'keydown', this.onDocumentKeyDown, false );\n\n\t}\n\n\t/**\n\t * Add a custom key binding with optional description to\n\t * be added to the help screen.\n\t */\n\taddKeyBinding( binding, callback ) {\n\n\t\tif( typeof binding === 'object' && binding.keyCode ) {\n\t\t\tthis.bindings[binding.keyCode] = {\n\t\t\t\tcallback: callback,\n\t\t\t\tkey: binding.key,\n\t\t\t\tdescription: binding.description\n\t\t\t};\n\t\t}\n\t\telse {\n\t\t\tthis.bindings[binding] = {\n\t\t\t\tcallback: callback,\n\t\t\t\tkey: null,\n\t\t\t\tdescription: null\n\t\t\t};\n\t\t}\n\n\t}\n\n\t/**\n\t * Removes the specified custom key binding.\n\t */\n\tremoveKeyBinding( keyCode ) {\n\n\t\tdelete this.bindings[keyCode];\n\n\t}\n\n\t/**\n\t * Programmatically triggers a keyboard event\n\t *\n\t * @param {int} keyCode\n\t */\n\ttriggerKey( keyCode ) {\n\n\t\tthis.onDocumentKeyDown( { keyCode } );\n\n\t}\n\n\t/**\n\t * Registers a new shortcut to include in the help overlay\n\t *\n\t * @param {String} key\n\t * @param {String} value\n\t */\n\tregisterKeyboardShortcut( key, value ) {\n\n\t\tthis.shortcuts[key] = value;\n\n\t}\n\n\tgetShortcuts() {\n\n\t\treturn this.shortcuts;\n\n\t}\n\n\tgetBindings() {\n\n\t\treturn this.bindings;\n\n\t}\n\n\t/**\n\t * Handler for the document level 'keydown' event.\n\t *\n\t * @param {object} event\n\t */\n\tonDocumentKeyDown( event ) {\n\n\t\tlet config = this.Reveal.getConfig();\n\n\t\t// If there's a condition specified and it returns false,\n\t\t// ignore this event\n\t\tif( typeof config.keyboardCondition === 'function' && config.keyboardCondition(event) === false ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// If keyboardCondition is set, only capture keyboard events\n\t\t// for embedded decks when they are focused\n\t\tif( config.keyboardCondition === 'focused' && !this.Reveal.isFocused() ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Shorthand\n\t\tlet keyCode = event.keyCode;\n\n\t\t// Remember if auto-sliding was paused so we can toggle it\n\t\tlet autoSlideWasPaused = !this.Reveal.isAutoSliding();\n\n\t\tthis.Reveal.onUserInput( event );\n\n\t\t// Is there a focused element that could be using the keyboard?\n\t\tlet activeElementIsCE = document.activeElement && document.activeElement.isContentEditable === true;\n\t\tlet activeElementIsInput = document.activeElement && document.activeElement.tagName && /input|textarea/i.test( document.activeElement.tagName );\n\t\tlet activeElementIsNotes = document.activeElement && document.activeElement.className && /speaker-notes/i.test( document.activeElement.className);\n\n\t\t// Whitelist certain modifiers for slide navigation shortcuts\n\t\tlet keyCodeUsesModifier = [32, 37, 38, 39, 40, 63, 78, 80, 191].indexOf( event.keyCode ) !== -1;\n\n\t\t// Prevent all other events when a modifier is pressed\n\t\tlet unusedModifier = \t!( keyCodeUsesModifier && event.shiftKey || event.altKey ) &&\n\t\t\t\t\t\t\t\t( event.shiftKey || event.altKey || event.ctrlKey || event.metaKey );\n\n\t\t// Disregard the event if there's a focused element or a\n\t\t// keyboard modifier key is present\n\t\tif( activeElementIsCE || activeElementIsInput || activeElementIsNotes || unusedModifier ) return;\n\n\t\t// While paused only allow resume keyboard events; 'b', 'v', '.'\n\t\tlet resumeKeyCodes = [66,86,190,191,112];\n\t\tlet key;\n\n\t\t// Custom key bindings for togglePause should be able to resume\n\t\tif( typeof config.keyboard === 'object' ) {\n\t\t\tfor( key in config.keyboard ) {\n\t\t\t\tif( config.keyboard[key] === 'togglePause' ) {\n\t\t\t\t\tresumeKeyCodes.push( parseInt( key, 10 ) );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif( this.Reveal.isOverlayOpen() && ![\"Escape\", \"f\", \"c\", \"b\", \".\"].includes(event.key) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif( this.Reveal.isPaused() && resumeKeyCodes.indexOf( keyCode ) === -1 ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Use linear navigation if we're configured to OR if\n\t\t// the presentation is one-dimensional\n\t\tlet useLinearMode = config.navigationMode === 'linear' || !this.Reveal.hasHorizontalSlides() || !this.Reveal.hasVerticalSlides();\n\n\t\tlet triggered = false;\n\n\t\t// 1. User defined key bindings\n\t\tif( typeof config.keyboard === 'object' ) {\n\n\t\t\tfor( key in config.keyboard ) {\n\n\t\t\t\t// Check if this binding matches the pressed key\n\t\t\t\tif( parseInt( key, 10 ) === keyCode ) {\n\n\t\t\t\t\tlet value = config.keyboard[ key ];\n\n\t\t\t\t\t// Callback function\n\t\t\t\t\tif( typeof value === 'function' ) {\n\t\t\t\t\t\tvalue.apply( null, [ event ] );\n\t\t\t\t\t}\n\t\t\t\t\t// String shortcuts to reveal.js API\n\t\t\t\t\telse if( typeof value === 'string' && typeof this.Reveal[ value ] === 'function' ) {\n\t\t\t\t\t\tthis.Reveal[ value ].call();\n\t\t\t\t\t}\n\n\t\t\t\t\ttriggered = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// 2. Registered custom key bindings\n\t\tif( triggered === false ) {\n\n\t\t\tfor( key in this.bindings ) {\n\n\t\t\t\t// Check if this binding matches the pressed key\n\t\t\t\tif( parseInt( key, 10 ) === keyCode ) {\n\n\t\t\t\t\tlet action = this.bindings[ key ].callback;\n\n\t\t\t\t\t// Callback function\n\t\t\t\t\tif( typeof action === 'function' ) {\n\t\t\t\t\t\taction.apply( null, [ event ] );\n\t\t\t\t\t}\n\t\t\t\t\t// String shortcuts to reveal.js API\n\t\t\t\t\telse if( typeof action === 'string' && typeof this.Reveal[ action ] === 'function' ) {\n\t\t\t\t\t\tthis.Reveal[ action ].call();\n\t\t\t\t\t}\n\n\t\t\t\t\ttriggered = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// 3. System defined key bindings\n\t\tif( triggered === false ) {\n\n\t\t\t// Assume true and try to prove false\n\t\t\ttriggered = true;\n\n\t\t\t// P, PAGE UP\n\t\t\tif( keyCode === 80 || keyCode === 33 ) {\n\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\n\t\t\t}\n\t\t\t// N, PAGE DOWN\n\t\t\telse if( keyCode === 78 || keyCode === 34 ) {\n\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\n\t\t\t}\n\t\t\t// H, LEFT\n\t\t\telse if( keyCode === 72 || keyCode === 37 ) {\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.slide( 0 );\n\t\t\t\t}\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\n\t\t\t\t\tif( config.rtl ) {\n\t\t\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.left({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// L, RIGHT\n\t\t\telse if( keyCode === 76 || keyCode === 39 ) {\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.slide( this.Reveal.getHorizontalSlides().length - 1 );\n\t\t\t\t}\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\n\t\t\t\t\tif( config.rtl ) {\n\t\t\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.right({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// K, UP\n\t\t\telse if( keyCode === 75 || keyCode === 38 ) {\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.slide( undefined, 0 );\n\t\t\t\t}\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\n\t\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.up({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// J, DOWN\n\t\t\telse if( keyCode === 74 || keyCode === 40 ) {\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.slide( undefined, Number.MAX_VALUE );\n\t\t\t\t}\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\n\t\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.down({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// HOME\n\t\t\telse if( keyCode === 36 ) {\n\t\t\t\tthis.Reveal.slide( 0 );\n\t\t\t}\n\t\t\t// END\n\t\t\telse if( keyCode === 35 ) {\n\t\t\t\tthis.Reveal.slide( this.Reveal.getHorizontalSlides().length - 1 );\n\t\t\t}\n\t\t\t// SPACE\n\t\t\telse if( keyCode === 32 ) {\n\t\t\t\tif( this.Reveal.overview.isActive() ) {\n\t\t\t\t\tthis.Reveal.overview.deactivate();\n\t\t\t\t}\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// TWO-SPOT, SEMICOLON, B, V, PERIOD, LOGITECH PRESENTER TOOLS \"BLACK SCREEN\" BUTTON\n\t\t\telse if( [58, 59, 66, 86, 190].includes( keyCode ) || ( keyCode === 191 && !event.shiftKey ) ) {\n\t\t\t\tthis.Reveal.togglePause();\n\t\t\t}\n\t\t\t// F\n\t\t\telse if( keyCode === 70 ) {\n\t\t\t\tenterFullscreen( config.embedded ? this.Reveal.getViewportElement() : document.documentElement );\n\t\t\t}\n\t\t\t// A\n\t\t\telse if( keyCode === 65 ) {\n\t\t\t\tif( config.autoSlideStoppable ) {\n\t\t\t\t\tthis.Reveal.toggleAutoSlide( autoSlideWasPaused );\n\t\t\t\t}\n\t\t\t}\n\t\t\t// G\n\t\t\telse if( keyCode === 71 ) {\n\t\t\t\tif( config.jumpToSlide ) {\n\t\t\t\t\tthis.Reveal.toggleJumpToSlide();\n\t\t\t\t}\n\t\t\t}\n\t\t\t// C\n\t\t\telse if( keyCode === 67 && this.Reveal.isOverlayOpen() ) {\n\t\t\t\tthis.Reveal.closeOverlay();\n\t\t\t}\n\t\t\t// ?\n\t\t\telse if( ( keyCode === 63 || keyCode === 191 ) && event.shiftKey ) {\n\t\t\t\tthis.Reveal.toggleHelp();\n\t\t\t}\n\t\t\t// F1\n\t\t\telse if( keyCode === 112 ) {\n\t\t\t\tthis.Reveal.toggleHelp();\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttriggered = false;\n\t\t\t}\n\n\t\t}\n\n\t\t// If the input resulted in a triggered action we should prevent\n\t\t// the browsers default behavior\n\t\tif( triggered ) {\n\t\t\tevent.preventDefault && event.preventDefault();\n\t\t}\n\t\t// ESC or O key\n\t\telse if( keyCode === 27 || keyCode === 79 ) {\n\t\t\tif( this.Reveal.closeOverlay() === false ) {\n\t\t\t\tthis.Reveal.overview.toggle();\n\t\t\t}\n\n\t\t\tevent.preventDefault && event.preventDefault();\n\t\t}\n\t\t\n\t\t// Enter to exit overview mode\n\t\telse if (keyCode === 13 && this.Reveal.overview.isActive()) {\n\t\t\tthis.Reveal.overview.deactivate();\n\t\t\tevent.preventDefault && event.preventDefault();\n\t\t}\n\n\t\t// If auto-sliding is enabled we need to cue up\n\t\t// another timeout\n\t\tthis.Reveal.cueAutoSlide();\n\n\t}\n\n}\n","/**\n * Reads and writes the URL based on reveal.js' current state.\n */\nexport default class Location {\n\n\t// The minimum number of milliseconds that must pass between\n\t// calls to history.replaceState\n\tMAX_REPLACE_STATE_FREQUENCY = 1000\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\t// Delays updates to the URL due to a Chrome thumbnailer bug\n\t\tthis.writeURLTimeout = 0;\n\n\t\tthis.replaceStateTimestamp = 0;\n\n\t\tthis.onWindowHashChange = this.onWindowHashChange.bind( this );\n\n\t}\n\n\tbind() {\n\n\t\twindow.addEventListener( 'hashchange', this.onWindowHashChange, false );\n\n\t}\n\n\tunbind() {\n\n\t\twindow.removeEventListener( 'hashchange', this.onWindowHashChange, false );\n\n\t}\n\n\t/**\n\t * Returns the slide indices for the given hash link.\n\t *\n\t * @param {string} [hash] the hash string that we want to\n\t * find the indices for\n\t *\n\t * @returns slide indices or null\n\t */\n\tgetIndicesFromHash( hash=window.location.hash, options={} ) {\n\n\t\t// Attempt to parse the hash as either an index or name\n\t\tlet name = hash.replace( /^#\\/?/, '' );\n\t\tlet bits = name.split( '/' );\n\n\t\t// If the first bit is not fully numeric and there is a name we\n\t\t// can assume that this is a named link\n\t\tif( !/^[0-9]*$/.test( bits[0] ) && name.length ) {\n\t\t\tlet slide;\n\n\t\t\tlet f;\n\n\t\t\t// Parse named links with fragments (#/named-link/2)\n\t\t\tif( /\\/[-\\d]+$/g.test( name ) ) {\n\t\t\t\tf = parseInt( name.split( '/' ).pop(), 10 );\n\t\t\t\tf = isNaN(f) ? undefined : f;\n\t\t\t\tname = name.split( '/' ).shift();\n\t\t\t}\n\n\t\t\t// Ensure the named link is a valid HTML ID attribute\n\t\t\ttry {\n\t\t\t\tslide = document\n\t\t\t\t\t.getElementById( decodeURIComponent( name ) )\n\t\t\t\t\t.closest('.slides section');\n\t\t\t}\n\t\t\tcatch ( error ) { }\n\n\t\t\tif( slide ) {\n\t\t\t\treturn { ...this.Reveal.getIndices( slide ), f };\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tconst config = this.Reveal.getConfig();\n\t\t\tlet hashIndexBase = config.hashOneBasedIndex || options.oneBasedIndex ? 1 : 0;\n\n\t\t\t// Read the index components of the hash\n\t\t\tlet h = ( parseInt( bits[0], 10 ) - hashIndexBase ) || 0,\n\t\t\t\tv = ( parseInt( bits[1], 10 ) - hashIndexBase ) || 0,\n\t\t\t\tf;\n\n\t\t\tif( config.fragmentInURL ) {\n\t\t\t\tf = parseInt( bits[2], 10 );\n\t\t\t\tif( isNaN( f ) ) {\n\t\t\t\t\tf = undefined;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn { h, v, f };\n\t\t}\n\n\t\t// The hash couldn't be parsed or no matching named link was found\n\t\treturn null\n\n\t}\n\n\t/**\n\t * Reads the current URL (hash) and navigates accordingly.\n\t */\n\treadURL() {\n\n\t\tconst currentIndices = this.Reveal.getIndices();\n\t\tconst newIndices = this.getIndicesFromHash();\n\n\t\tif( newIndices ) {\n\t\t\tif( ( newIndices.h !== currentIndices.h || newIndices.v !== currentIndices.v || newIndices.f !== undefined ) ) {\n\t\t\t\t\tthis.Reveal.slide( newIndices.h, newIndices.v, newIndices.f );\n\t\t\t}\n\t\t}\n\t\t// If no new indices are available, we're trying to navigate to\n\t\t// a slide hash that does not exist\n\t\telse {\n\t\t\tthis.Reveal.slide( currentIndices.h || 0, currentIndices.v || 0 );\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates the page URL (hash) to reflect the current\n\t * state.\n\t *\n\t * @param {number} delay The time in ms to wait before\n\t * writing the hash\n\t */\n\twriteURL( delay ) {\n\n\t\tlet config = this.Reveal.getConfig();\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\n\t\t// Make sure there's never more than one timeout running\n\t\tclearTimeout( this.writeURLTimeout );\n\n\t\t// If a delay is specified, timeout this call\n\t\tif( typeof delay === 'number' ) {\n\t\t\tthis.writeURLTimeout = setTimeout( this.writeURL, delay );\n\t\t}\n\t\telse if( currentSlide ) {\n\n\t\t\tlet hash = this.getHash();\n\n\t\t\t// If we're configured to push to history OR the history\n\t\t\t// API is not available.\n\t\t\tif( config.history ) {\n\t\t\t\twindow.location.hash = hash;\n\t\t\t}\n\t\t\t// If we're configured to reflect the current slide in the\n\t\t\t// URL without pushing to history.\n\t\t\telse if( config.hash ) {\n\t\t\t\t// If the hash is empty, don't add it to the URL\n\t\t\t\tif( hash === '/' ) {\n\t\t\t\t\tthis.debouncedReplaceState( window.location.pathname + window.location.search );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.debouncedReplaceState( '#' + hash );\n\t\t\t\t}\n\t\t\t}\n\t\t\t// UPDATE: The below nuking of all hash changes breaks\n\t\t\t// anchors on pages where reveal.js is running. Removed\n\t\t\t// in 4.0. Why was it here in the first place? ¯\\_(ツ)_/¯\n\t\t\t//\n\t\t\t// If history and hash are both disabled, a hash may still\n\t\t\t// be added to the URL by clicking on a href with a hash\n\t\t\t// target. Counter this by always removing the hash.\n\t\t\t// else {\n\t\t\t// \twindow.history.replaceState( null, null, window.location.pathname + window.location.search );\n\t\t\t// }\n\n\t\t}\n\n\t}\n\n\treplaceState( url ) {\n\n\t\twindow.history.replaceState( null, null, url );\n\t\tthis.replaceStateTimestamp = Date.now();\n\n\t}\n\n\tdebouncedReplaceState( url ) {\n\n\t\tclearTimeout( this.replaceStateTimeout );\n\n\t\tif( Date.now() - this.replaceStateTimestamp > this.MAX_REPLACE_STATE_FREQUENCY ) {\n\t\t\tthis.replaceState( url );\n\t\t}\n\t\telse {\n\t\t\tthis.replaceStateTimeout = setTimeout( () => this.replaceState( url ), this.MAX_REPLACE_STATE_FREQUENCY );\n\t\t}\n\n\t}\n\n\t/**\n\t * Return a hash URL that will resolve to the given slide location.\n\t *\n\t * @param {HTMLElement} [slide=currentSlide] The slide to link to\n\t */\n\tgetHash( slide ) {\n\n\t\tlet url = '/';\n\n\t\t// Attempt to create a named link based on the slide's ID\n\t\tlet s = slide || this.Reveal.getCurrentSlide();\n\t\tlet id = s ? s.getAttribute( 'id' ) : null;\n\t\tif( id ) {\n\t\t\tid = encodeURIComponent( id );\n\t\t}\n\n\t\tlet index = this.Reveal.getIndices( slide );\n\t\tif( !this.Reveal.getConfig().fragmentInURL ) {\n\t\t\tindex.f = undefined;\n\t\t}\n\n\t\t// If the current slide has an ID, use that as a named link,\n\t\t// but we don't support named links with a fragment index\n\t\tif( typeof id === 'string' && id.length ) {\n\t\t\turl = '/' + id;\n\n\t\t\t// If there is also a fragment, append that at the end\n\t\t\t// of the named link, like: #/named-link/2\n\t\t\tif( index.f >= 0 ) url += '/' + index.f;\n\t\t}\n\t\t// Otherwise use the /h/v index\n\t\telse {\n\t\t\tlet hashIndexBase = this.Reveal.getConfig().hashOneBasedIndex ? 1 : 0;\n\t\t\tif( index.h > 0 || index.v > 0 || index.f >= 0 ) url += index.h + hashIndexBase;\n\t\t\tif( index.v > 0 || index.f >= 0 ) url += '/' + (index.v + hashIndexBase );\n\t\t\tif( index.f >= 0 ) url += '/' + index.f;\n\t\t}\n\n\t\treturn url;\n\n\t}\n\n\t/**\n\t * Handler for the window level 'hashchange' event.\n\t *\n\t * @param {object} [event]\n\t */\n\tonWindowHashChange( event ) {\n\n\t\tthis.readURL();\n\n\t}\n\n}","import { queryAll, enterFullscreen } from '../utils/util.js'\nimport { isAndroid } from '../utils/device.js'\n\n/**\n * Manages our presentation controls. This includes both\n * the built-in control arrows as well as event monitoring\n * of any elements within the presentation with either of the\n * following helper classes:\n * - .navigate-up\n * - .navigate-right\n * - .navigate-down\n * - .navigate-left\n * - .navigate-next\n * - .navigate-prev\n * - .enter-fullscreen\n */\nexport default class Controls {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.onNavigateLeftClicked = this.onNavigateLeftClicked.bind( this );\n\t\tthis.onNavigateRightClicked = this.onNavigateRightClicked.bind( this );\n\t\tthis.onNavigateUpClicked = this.onNavigateUpClicked.bind( this );\n\t\tthis.onNavigateDownClicked = this.onNavigateDownClicked.bind( this );\n\t\tthis.onNavigatePrevClicked = this.onNavigatePrevClicked.bind( this );\n\t\tthis.onNavigateNextClicked = this.onNavigateNextClicked.bind( this );\n\t\tthis.onEnterFullscreen = this.onEnterFullscreen.bind( this );\n\n\t}\n\n\trender() {\n\n\t\tconst rtl = this.Reveal.getConfig().rtl;\n\t\tconst revealElement = this.Reveal.getRevealElement();\n\n\t\tthis.element = document.createElement( 'aside' );\n\t\tthis.element.className = 'controls';\n\t\tthis.element.innerHTML =\n\t\t\t`<button class=\"navigate-left\" aria-label=\"${ rtl ? 'next slide' : 'previous slide' }\"><div class=\"controls-arrow\"></div></button>\n\t\t\t<button class=\"navigate-right\" aria-label=\"${ rtl ? 'previous slide' : 'next slide' }\"><div class=\"controls-arrow\"></div></button>\n\t\t\t<button class=\"navigate-up\" aria-label=\"above slide\"><div class=\"controls-arrow\"></div></button>\n\t\t\t<button class=\"navigate-down\" aria-label=\"below slide\"><div class=\"controls-arrow\"></div></button>`;\n\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t\t// There can be multiple instances of controls throughout the page\n\t\tthis.controlsLeft = queryAll( revealElement, '.navigate-left' );\n\t\tthis.controlsRight = queryAll( revealElement, '.navigate-right' );\n\t\tthis.controlsUp = queryAll( revealElement, '.navigate-up' );\n\t\tthis.controlsDown = queryAll( revealElement, '.navigate-down' );\n\t\tthis.controlsPrev = queryAll( revealElement, '.navigate-prev' );\n\t\tthis.controlsNext = queryAll( revealElement, '.navigate-next' );\n\t\tthis.controlsFullscreen = queryAll( revealElement, '.enter-fullscreen' );\n\n\t\t// The left, right and down arrows in the standard reveal.js controls\n\t\tthis.controlsRightArrow = this.element.querySelector( '.navigate-right' );\n\t\tthis.controlsLeftArrow = this.element.querySelector( '.navigate-left' );\n\t\tthis.controlsDownArrow = this.element.querySelector( '.navigate-down' );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tthis.element.style.display = (\n\t\t\tconfig.controls &&\n\t\t\t(config.controls !== 'speaker-only' || this.Reveal.isSpeakerNotes())\n\t\t) ? 'block' : 'none';\n\n\t\tthis.element.setAttribute( 'data-controls-layout', config.controlsLayout );\n\t\tthis.element.setAttribute( 'data-controls-back-arrows', config.controlsBackArrows );\n\n\t}\n\n\tbind() {\n\n\t\t// Listen to both touch and click events, in case the device\n\t\t// supports both\n\t\tlet pointerEvents = [ 'touchstart', 'click' ];\n\n\t\t// Only support touch for Android, fixes double navigations in\n\t\t// stock browser. Use touchend for it to be considered a valid\n\t\t// user interaction (so we're allowed to autoplay media).\n\t\tif( isAndroid ) {\n\t\t\tpointerEvents = [ 'touchend' ];\n\t\t}\n\n\t\tpointerEvents.forEach( eventName => {\n\t\t\tthis.controlsLeft.forEach( el => el.addEventListener( eventName, this.onNavigateLeftClicked, false ) );\n\t\t\tthis.controlsRight.forEach( el => el.addEventListener( eventName, this.onNavigateRightClicked, false ) );\n\t\t\tthis.controlsUp.forEach( el => el.addEventListener( eventName, this.onNavigateUpClicked, false ) );\n\t\t\tthis.controlsDown.forEach( el => el.addEventListener( eventName, this.onNavigateDownClicked, false ) );\n\t\t\tthis.controlsPrev.forEach( el => el.addEventListener( eventName, this.onNavigatePrevClicked, false ) );\n\t\t\tthis.controlsNext.forEach( el => el.addEventListener( eventName, this.onNavigateNextClicked, false ) );\n\t\t\tthis.controlsFullscreen.forEach( el => el.addEventListener( eventName, this.onEnterFullscreen, false ) );\n\t\t} );\n\n\t}\n\n\tunbind() {\n\n\t\t[ 'touchstart', 'touchend', 'click' ].forEach( eventName => {\n\t\t\tthis.controlsLeft.forEach( el => el.removeEventListener( eventName, this.onNavigateLeftClicked, false ) );\n\t\t\tthis.controlsRight.forEach( el => el.removeEventListener( eventName, this.onNavigateRightClicked, false ) );\n\t\t\tthis.controlsUp.forEach( el => el.removeEventListener( eventName, this.onNavigateUpClicked, false ) );\n\t\t\tthis.controlsDown.forEach( el => el.removeEventListener( eventName, this.onNavigateDownClicked, false ) );\n\t\t\tthis.controlsPrev.forEach( el => el.removeEventListener( eventName, this.onNavigatePrevClicked, false ) );\n\t\t\tthis.controlsNext.forEach( el => el.removeEventListener( eventName, this.onNavigateNextClicked, false ) );\n\t\t\tthis.controlsFullscreen.forEach( el => el.removeEventListener( eventName, this.onEnterFullscreen, false ) );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Updates the state of all control/navigation arrows.\n\t */\n\tupdate() {\n\n\t\tlet routes = this.Reveal.availableRoutes();\n\n\t\t// Remove the 'enabled' class from all directions\n\t\t[...this.controlsLeft, ...this.controlsRight, ...this.controlsUp, ...this.controlsDown, ...this.controlsPrev, ...this.controlsNext].forEach( node => {\n\t\t\tnode.classList.remove( 'enabled', 'fragmented' );\n\n\t\t\t// Set 'disabled' attribute on all directions\n\t\t\tnode.setAttribute( 'disabled', 'disabled' );\n\t\t} );\n\n\t\t// Add the 'enabled' class to the available routes; remove 'disabled' attribute to enable buttons\n\t\tif( routes.left ) this.controlsLeft.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\tif( routes.right ) this.controlsRight.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\tif( routes.up ) this.controlsUp.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\tif( routes.down ) this.controlsDown.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\n\t\t// Prev/next buttons\n\t\tif( routes.left || routes.up ) this.controlsPrev.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\tif( routes.right || routes.down ) this.controlsNext.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\n\t\t// Highlight fragment directions\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tif( currentSlide ) {\n\n\t\t\tlet fragmentsRoutes = this.Reveal.fragments.availableRoutes();\n\n\t\t\t// Always apply fragment decorator to prev/next buttons\n\t\t\tif( fragmentsRoutes.prev ) this.controlsPrev.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\tif( fragmentsRoutes.next ) this.controlsNext.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\n\t\t\tconst isVerticalStack = this.Reveal.isVerticalSlide( currentSlide );\n\t\t\tconst hasVerticalSiblings = isVerticalStack &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcurrentSlide.parentElement &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcurrentSlide.parentElement.querySelectorAll( ':scope > section' ).length > 1;\n\n\t\t\t// Apply fragment decorators to directional buttons based on\n\t\t\t// what slide axis they are in\n\t\t\tif( isVerticalStack && hasVerticalSiblings ) {\n\t\t\t\tif( fragmentsRoutes.prev ) this.controlsUp.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\t\tif( fragmentsRoutes.next ) this.controlsDown.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif( fragmentsRoutes.prev ) this.controlsLeft.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\t\tif( fragmentsRoutes.next ) this.controlsRight.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\t}\n\n\t\t}\n\n\t\tif( this.Reveal.getConfig().controlsTutorial ) {\n\n\t\t\tlet indices = this.Reveal.getIndices();\n\n\t\t\t// Highlight control arrows with an animation to ensure\n\t\t\t// that the viewer knows how to navigate\n\t\t\tif( !this.Reveal.hasNavigatedVertically() && routes.down ) {\n\t\t\t\tthis.controlsDownArrow.classList.add( 'highlight' );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.controlsDownArrow.classList.remove( 'highlight' );\n\n\t\t\t\tif( this.Reveal.getConfig().rtl ) {\n\n\t\t\t\t\tif( !this.Reveal.hasNavigatedHorizontally() && routes.left && indices.v === 0 ) {\n\t\t\t\t\t\tthis.controlsLeftArrow.classList.add( 'highlight' );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.controlsLeftArrow.classList.remove( 'highlight' );\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif( !this.Reveal.hasNavigatedHorizontally() && routes.right && indices.v === 0 ) {\n\t\t\t\t\t\tthis.controlsRightArrow.classList.add( 'highlight' );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.controlsRightArrow.classList.remove( 'highlight' );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tdestroy() {\n\n\t\tthis.unbind();\n\t\tthis.element.remove();\n\n\t}\n\n\t/**\n\t * Event handlers for navigation control buttons.\n\t */\n\tonNavigateLeftClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tif( this.Reveal.getConfig().navigationMode === 'linear' ) {\n\t\t\tthis.Reveal.prev();\n\t\t}\n\t\telse {\n\t\t\tthis.Reveal.left();\n\t\t}\n\n\t}\n\n\tonNavigateRightClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tif( this.Reveal.getConfig().navigationMode === 'linear' ) {\n\t\t\tthis.Reveal.next();\n\t\t}\n\t\telse {\n\t\t\tthis.Reveal.right();\n\t\t}\n\n\t}\n\n\tonNavigateUpClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tthis.Reveal.up();\n\n\t}\n\n\tonNavigateDownClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tthis.Reveal.down();\n\n\t}\n\n\tonNavigatePrevClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tthis.Reveal.prev();\n\n\t}\n\n\tonNavigateNextClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tthis.Reveal.next();\n\n\t}\n\n\tonEnterFullscreen( event ) {\n\n\t\tconst config = this.Reveal.getConfig();\n\t\tconst viewport = this.Reveal.getViewportElement();\n\n\t\tenterFullscreen( config.embedded ? viewport : viewport.parentElement );\n\n\t}\n\n}","/**\n * Creates a visual progress bar for the presentation.\n */\nexport default class Progress {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.onProgressClicked = this.onProgressClicked.bind( this );\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'progress';\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t\tthis.bar = document.createElement( 'span' );\n\t\tthis.element.appendChild( this.bar );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tthis.element.style.display = config.progress ? 'block' : 'none';\n\n\t}\n\n\tbind() {\n\n\t\tif( this.Reveal.getConfig().progress && this.element ) {\n\t\t\tthis.element.addEventListener( 'click', this.onProgressClicked, false );\n\t\t}\n\n\t}\n\n\tunbind() {\n\n\t\tif ( this.Reveal.getConfig().progress && this.element ) {\n\t\t\tthis.element.removeEventListener( 'click', this.onProgressClicked, false );\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates the progress bar to reflect the current slide.\n\t */\n\tupdate() {\n\n\t\t// Update progress if enabled\n\t\tif( this.Reveal.getConfig().progress && this.bar ) {\n\n\t\t\tlet scale = this.Reveal.getProgress();\n\n\t\t\t// Don't fill the progress bar if there's only one slide\n\t\t\tif( this.Reveal.getTotalSlides() < 2 ) {\n\t\t\t\tscale = 0;\n\t\t\t}\n\n\t\t\tthis.bar.style.transform = 'scaleX('+ scale +')';\n\n\t\t}\n\n\t}\n\n\tgetMaxWidth() {\n\n\t\treturn this.Reveal.getRevealElement().offsetWidth;\n\n\t}\n\n\t/**\n\t * Clicking on the progress bar results in a navigation to the\n\t * closest approximate horizontal slide using this equation:\n\t *\n\t * ( clickX / presentationWidth ) * numberOfSlides\n\t *\n\t * @param {object} event\n\t */\n\tonProgressClicked( event ) {\n\n\t\tthis.Reveal.onUserInput( event );\n\n\t\tevent.preventDefault();\n\n\t\tlet slides = this.Reveal.getSlides();\n\t\tlet slidesTotal = slides.length;\n\t\tlet slideIndex = Math.floor( ( event.clientX / this.getMaxWidth() ) * slidesTotal );\n\n\t\tif( this.Reveal.getConfig().rtl ) {\n\t\t\tslideIndex = slidesTotal - slideIndex;\n\t\t}\n\n\t\tlet targetIndices = this.Reveal.getIndices(slides[slideIndex]);\n\t\tthis.Reveal.slide( targetIndices.h, targetIndices.v );\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.element.remove();\n\n\t}\n\n}","/**\n * Handles hiding of the pointer/cursor when inactive.\n */\nexport default class Pointer {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\t// Throttles mouse wheel navigation\n\t\tthis.lastMouseWheelStep = 0;\n\n\t\t// Is the mouse pointer currently hidden from view\n\t\tthis.cursorHidden = false;\n\n\t\t// Timeout used to determine when the cursor is inactive\n\t\tthis.cursorInactiveTimeout = 0;\n\n\t\tthis.onDocumentCursorActive = this.onDocumentCursorActive.bind( this );\n\t\tthis.onDocumentMouseScroll = this.onDocumentMouseScroll.bind( this );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.mouseWheel ) {\n\t\t\tdocument.addEventListener( 'wheel', this.onDocumentMouseScroll, false );\n\t\t}\n\t\telse {\n\t\t\tdocument.removeEventListener( 'wheel', this.onDocumentMouseScroll, false );\n\t\t}\n\n\t\t// Auto-hide the mouse pointer when its inactive\n\t\tif( config.hideInactiveCursor ) {\n\t\t\tdocument.addEventListener( 'mousemove', this.onDocumentCursorActive, false );\n\t\t\tdocument.addEventListener( 'mousedown', this.onDocumentCursorActive, false );\n\t\t}\n\t\telse {\n\t\t\tthis.showCursor();\n\n\t\t\tdocument.removeEventListener( 'mousemove', this.onDocumentCursorActive, false );\n\t\t\tdocument.removeEventListener( 'mousedown', this.onDocumentCursorActive, false );\n\t\t}\n\n\t}\n\n\t/**\n\t * Shows the mouse pointer after it has been hidden with\n\t * #hideCursor.\n\t */\n\tshowCursor() {\n\n\t\tif( this.cursorHidden ) {\n\t\t\tthis.cursorHidden = false;\n\t\t\tthis.Reveal.getRevealElement().style.cursor = '';\n\t\t}\n\n\t}\n\n\t/**\n\t * Hides the mouse pointer when it's on top of the .reveal\n\t * container.\n\t */\n\thideCursor() {\n\n\t\tif( this.cursorHidden === false ) {\n\t\t\tthis.cursorHidden = true;\n\t\t\tthis.Reveal.getRevealElement().style.cursor = 'none';\n\t\t}\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.showCursor();\n\n\t\tdocument.removeEventListener( 'wheel', this.onDocumentMouseScroll, false );\n\t\tdocument.removeEventListener( 'mousemove', this.onDocumentCursorActive, false );\n\t\tdocument.removeEventListener( 'mousedown', this.onDocumentCursorActive, false );\n\n\t}\n\n\t/**\n\t * Called whenever there is mouse input at the document level\n\t * to determine if the cursor is active or not.\n\t *\n\t * @param {object} event\n\t */\n\tonDocumentCursorActive( event ) {\n\n\t\tthis.showCursor();\n\n\t\tclearTimeout( this.cursorInactiveTimeout );\n\n\t\tthis.cursorInactiveTimeout = setTimeout( this.hideCursor.bind( this ), this.Reveal.getConfig().hideCursorTime );\n\n\t}\n\n\t/**\n\t * Handles mouse wheel scrolling, throttled to avoid skipping\n\t * multiple slides.\n\t *\n\t * @param {object} event\n\t */\n\tonDocumentMouseScroll( event ) {\n\n\t\tif( Date.now() - this.lastMouseWheelStep > 1000 ) {\n\n\t\t\tthis.lastMouseWheelStep = Date.now();\n\n\t\t\tlet delta = event.detail || -event.wheelDelta;\n\t\t\tif( delta > 0 ) {\n\t\t\t\tthis.Reveal.next();\n\t\t\t}\n\t\t\telse if( delta < 0 ) {\n\t\t\t\tthis.Reveal.prev();\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n","/**\n * Loads a JavaScript file from the given URL and executes it.\n *\n * @param {string} url Address of the .js file to load\n * @param {function} callback Method to invoke when the script\n * has loaded and executed\n */\nexport const loadScript = ( url, callback ) => {\n\n\tconst script = document.createElement( 'script' );\n\tscript.type = 'text/javascript';\n\tscript.async = false;\n\tscript.defer = false;\n\tscript.src = url;\n\n\tif( typeof callback === 'function' ) {\n\n\t\t// Success callback\n\t\tscript.onload = script.onreadystatechange = event => {\n\t\t\tif( event.type === 'load' || /loaded|complete/.test( script.readyState ) ) {\n\n\t\t\t\t// Kill event listeners\n\t\t\t\tscript.onload = script.onreadystatechange = script.onerror = null;\n\n\t\t\t\tcallback();\n\n\t\t\t}\n\t\t};\n\n\t\t// Error callback\n\t\tscript.onerror = err => {\n\n\t\t\t// Kill event listeners\n\t\t\tscript.onload = script.onreadystatechange = script.onerror = null;\n\n\t\t\tcallback( new Error( 'Failed loading script: ' + script.src + '\\n' + err ) );\n\n\t\t};\n\n\t}\n\n\t// Append the script at the end of <head>\n\tconst head = document.querySelector( 'head' );\n\thead.insertBefore( script, head.lastChild );\n\n}","import { loadScript } from '../utils/loader.js'\n\n/**\n * Manages loading and registering of reveal.js plugins.\n */\nexport default class Plugins {\n\n\tconstructor( reveal ) {\n\n\t\tthis.Reveal = reveal;\n\n\t\t// Flags our current state (idle -> loading -> loaded)\n\t\tthis.state = 'idle';\n\n\t\t// An id:instance map of currently registered plugins\n\t\tthis.registeredPlugins = {};\n\n\t\tthis.asyncDependencies = [];\n\n\t}\n\n\t/**\n\t * Loads reveal.js dependencies, registers and\n\t * initializes plugins.\n\t *\n\t * Plugins are direct references to a reveal.js plugin\n\t * object that we register and initialize after any\n\t * synchronous dependencies have loaded.\n\t *\n\t * Dependencies are defined via the 'dependencies' config\n\t * option and will be loaded prior to starting reveal.js.\n\t * Some dependencies may have an 'async' flag, if so they\n\t * will load after reveal.js has been started up.\n\t */\n\tload( plugins, dependencies ) {\n\n\t\tthis.state = 'loading';\n\n\t\tplugins.forEach( this.registerPlugin.bind( this ) );\n\n\t\treturn new Promise( resolve => {\n\n\t\t\tlet scripts = [],\n\t\t\t\tscriptsToLoad = 0;\n\n\t\t\tdependencies.forEach( s => {\n\t\t\t\t// Load if there's no condition or the condition is truthy\n\t\t\t\tif( !s.condition || s.condition() ) {\n\t\t\t\t\tif( s.async ) {\n\t\t\t\t\t\tthis.asyncDependencies.push( s );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tscripts.push( s );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tif( scripts.length ) {\n\t\t\t\tscriptsToLoad = scripts.length;\n\n\t\t\t\tconst scriptLoadedCallback = (s) => {\n\t\t\t\t\tif( s && typeof s.callback === 'function' ) s.callback();\n\n\t\t\t\t\tif( --scriptsToLoad === 0 ) {\n\t\t\t\t\t\tthis.initPlugins().then( resolve );\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\t// Load synchronous scripts\n\t\t\t\tscripts.forEach( s => {\n\t\t\t\t\tif( typeof s.id === 'string' ) {\n\t\t\t\t\t\tthis.registerPlugin( s );\n\t\t\t\t\t\tscriptLoadedCallback( s );\n\t\t\t\t\t}\n\t\t\t\t\telse if( typeof s.src === 'string' ) {\n\t\t\t\t\t\tloadScript( s.src, () => scriptLoadedCallback(s) );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tconsole.warn( 'Unrecognized plugin format', s );\n\t\t\t\t\t\tscriptLoadedCallback();\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.initPlugins().then( resolve );\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Initializes our plugins and waits for them to be ready\n\t * before proceeding.\n\t */\n\tinitPlugins() {\n\n\t\treturn new Promise( resolve => {\n\n\t\t\tlet pluginValues = Object.values( this.registeredPlugins );\n\t\t\tlet pluginsToInitialize = pluginValues.length;\n\n\t\t\t// If there are no plugins, skip this step\n\t\t\tif( pluginsToInitialize === 0 ) {\n\t\t\t\tthis.loadAsync().then( resolve );\n\t\t\t}\n\t\t\t// ... otherwise initialize plugins\n\t\t\telse {\n\n\t\t\t\tlet initNextPlugin;\n\n\t\t\t\tlet afterPlugInitialized = () => {\n\t\t\t\t\tif( --pluginsToInitialize === 0 ) {\n\t\t\t\t\t\tthis.loadAsync().then( resolve );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tinitNextPlugin();\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tlet i = 0;\n\n\t\t\t\t// Initialize plugins serially\n\t\t\t\tinitNextPlugin = () => {\n\n\t\t\t\t\tlet plugin = pluginValues[i++];\n\n\t\t\t\t\t// If the plugin has an 'init' method, invoke it\n\t\t\t\t\tif( typeof plugin.init === 'function' ) {\n\t\t\t\t\t\tlet promise = plugin.init( this.Reveal );\n\n\t\t\t\t\t\t// If the plugin returned a Promise, wait for it\n\t\t\t\t\t\tif( promise && typeof promise.then === 'function' ) {\n\t\t\t\t\t\t\tpromise.then( afterPlugInitialized );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tafterPlugInitialized();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tafterPlugInitialized();\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tinitNextPlugin();\n\n\t\t\t}\n\n\t\t} )\n\n\t}\n\n\t/**\n\t * Loads all async reveal.js dependencies.\n\t */\n\tloadAsync() {\n\n\t\tthis.state = 'loaded';\n\n\t\tif( this.asyncDependencies.length ) {\n\t\t\tthis.asyncDependencies.forEach( s => {\n\t\t\t\tloadScript( s.src, s.callback );\n\t\t\t} );\n\t\t}\n\n\t\treturn Promise.resolve();\n\n\t}\n\n\t/**\n\t * Registers a new plugin with this reveal.js instance.\n\t *\n\t * reveal.js waits for all registered plugins to initialize\n\t * before considering itself ready, as long as the plugin\n\t * is registered before calling `Reveal.initialize()`.\n\t */\n\tregisterPlugin( plugin ) {\n\n\t\t// Backwards compatibility to make reveal.js ~3.9.0\n\t\t// plugins work with reveal.js 4.0.0\n\t\tif( arguments.length === 2 && typeof arguments[0] === 'string' ) {\n\t\t\tplugin = arguments[1];\n\t\t\tplugin.id = arguments[0];\n\t\t}\n\t\t// Plugin can optionally be a function which we call\n\t\t// to create an instance of the plugin\n\t\telse if( typeof plugin === 'function' ) {\n\t\t\tplugin = plugin();\n\t\t}\n\n\t\tlet id = plugin.id;\n\n\t\tif( typeof id !== 'string' ) {\n\t\t\tconsole.warn( 'Unrecognized plugin format; can\\'t find plugin.id', plugin );\n\t\t}\n\t\telse if( this.registeredPlugins[id] === undefined ) {\n\t\t\tthis.registeredPlugins[id] = plugin;\n\n\t\t\t// If a plugin is registered after reveal.js is loaded,\n\t\t\t// initialize it right away\n\t\t\tif( this.state === 'loaded' && typeof plugin.init === 'function' ) {\n\t\t\t\tplugin.init( this.Reveal );\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tconsole.warn( 'reveal.js: \"'+ id +'\" plugin has already been registered' );\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if a specific plugin has been registered.\n\t *\n\t * @param {String} id Unique plugin identifier\n\t */\n\thasPlugin( id ) {\n\n\t\treturn !!this.registeredPlugins[id];\n\n\t}\n\n\t/**\n\t * Returns the specific plugin instance, if a plugin\n\t * with the given ID has been registered.\n\t *\n\t * @param {String} id Unique plugin identifier\n\t */\n\tgetPlugin( id ) {\n\n\t\treturn this.registeredPlugins[id];\n\n\t}\n\n\tgetRegisteredPlugins() {\n\n\t\treturn this.registeredPlugins;\n\n\t}\n\n\tdestroy() {\n\n\t\tObject.values( this.registeredPlugins ).forEach( plugin => {\n\t\t\tif( typeof plugin.destroy === 'function' ) {\n\t\t\t\tplugin.destroy();\n\t\t\t}\n\t\t} );\n\n\t\tthis.registeredPlugins = {};\n\t\tthis.asyncDependencies = [];\n\n\t}\n\n}\n","/**\n * Handles the display of reveal.js' overlay elements used\n * to preview iframes, images & videos.\n */\nexport default class Overlay {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.onSlidesClicked = this.onSlidesClicked.bind( this );\n\n\t\tthis.iframeTriggerSelector = null;\n\t\tthis.mediaTriggerSelector = '[data-preview-image], [data-preview-video]';\n\n\t\tthis.stateProps = ['previewIframe', 'previewImage', 'previewVideo', 'previewFit'];\n\t\tthis.state = {};\n\n\t}\n\n\tupdate() {\n\n\t\t// Enable link previews globally\n\t\tif( this.Reveal.getConfig().previewLinks ) {\n\t\t\tthis.iframeTriggerSelector = 'a[href]:not([data-preview-link=false]), [data-preview-link]:not(a):not([data-preview-link=false])';\n\t\t}\n\t\t// Enable link previews for individual elements\n\t\telse {\n\t\t\tthis.iframeTriggerSelector = '[data-preview-link]:not([data-preview-link=false])';\n\t\t}\n\n\t\tconst hasLinkPreviews = this.Reveal.getSlidesElement().querySelectorAll( this.iframeTriggerSelector ).length > 0;\n\t\tconst hasMediaPreviews = this.Reveal.getSlidesElement().querySelectorAll( this.mediaTriggerSelector ).length > 0;\n\n\t\t// Only add the listener when there are previewable elements in the slides\n\t\tif( hasLinkPreviews || hasMediaPreviews ) {\n\t\t\tthis.Reveal.getSlidesElement().addEventListener( 'click', this.onSlidesClicked, false );\n\t\t}\n\t\telse {\n\t\t\tthis.Reveal.getSlidesElement().removeEventListener( 'click', this.onSlidesClicked, false );\n\t\t}\n\n\t}\n\n\tcreateOverlay( className ) {\n\n\t\tthis.dom = document.createElement( 'div' );\n\t\tthis.dom.classList.add( 'r-overlay' );\n\t\tthis.dom.classList.add( className );\n\n\t\tthis.viewport = document.createElement( 'div' );\n\t\tthis.viewport.classList.add( 'r-overlay-viewport' );\n\n\t\tthis.dom.appendChild( this.viewport );\n\t\tthis.Reveal.getRevealElement().appendChild( this.dom );\n\n\t}\n\n\t/**\n\t * Opens a lightbox that previews the target URL.\n\t *\n\t * @param {string} url - url for lightbox iframe src\n\t */\n\tpreviewIframe( url ) {\n\n\t\tthis.close();\n\n\t\tthis.state = { previewIframe: url };\n\n\t\tthis.createOverlay( 'r-overlay-preview' );\n\t\tthis.dom.dataset.state = 'loading';\n\n\t\tthis.viewport.innerHTML =\n\t\t\t`<header class=\"r-overlay-header\">\n\t\t\t\t<a class=\"r-overlay-button r-overlay-external\" href=\"${url}\" target=\"_blank\"><span class=\"icon\"></span></a>\n\t\t\t\t<button class=\"r-overlay-button r-overlay-close\"><span class=\"icon\"></span></button>\n\t\t\t</header>\n\t\t\t<div class=\"r-overlay-spinner\"></div>\n\t\t\t<div class=\"r-overlay-content\">\n\t\t\t\t<iframe src=\"${url}\"></iframe>\n\t\t\t\t<small class=\"r-overlay-content-inner\">\n\t\t\t\t\t<span class=\"r-overlay-error x-frame-error\">Unable to load iframe. This is likely due to the site's policy (x-frame-options).</span>\n\t\t\t\t</small>\n\t\t\t</div>`;\n\n\t\tthis.dom.querySelector( 'iframe' ).addEventListener( 'load', event => {\n\t\t\tthis.dom.dataset.state = 'loaded';\n\t\t}, false );\n\n\t\tthis.dom.querySelector( '.r-overlay-close' ).addEventListener( 'click', event => {\n\t\t\tthis.close();\n\t\t\tevent.preventDefault();\n\t\t}, false );\n\n\t\tthis.dom.querySelector( '.r-overlay-external' ).addEventListener( 'click', event => {\n\t\t\tthis.close();\n\t\t}, false );\n\n\t\tthis.Reveal.dispatchEvent({ type: 'previewiframe', data: { url } });\n\n\t}\n\n\t/**\n\t * Opens a lightbox window that provides a larger view of the\n\t * given image/video.\n\t *\n\t * @param {string} url - url to the image/video to preview\n\t * @param {image|video} mediaType\n\t * @param {string} [fitMode] - the fit mode to use for the preview\n\t */\n\tpreviewMedia( url, mediaType, fitMode ) {\n\n\t\tif( mediaType !== 'image' && mediaType !== 'video' ) {\n\t\t\tconsole.warn( 'Please specify a valid media type to preview (image|video)' );\n\t\t\treturn;\n\t\t}\n\n\t\tthis.close();\n\n\t\tfitMode = fitMode || 'scale-down';\n\n\t\tthis.createOverlay( 'r-overlay-preview' );\n\t\tthis.dom.dataset.state = 'loading';\n\t\tthis.dom.dataset.previewFit = fitMode;\n\n\t\tthis.viewport.innerHTML =\n\t\t\t`<header class=\"r-overlay-header\">\n\t\t\t\t<button class=\"r-overlay-button r-overlay-close\">Esc <span class=\"icon\"></span></button>\n\t\t\t</header>\n\t\t\t<div class=\"r-overlay-spinner\"></div>\n\t\t\t<div class=\"r-overlay-content\"></div>`;\n\n\t\tconst contentElement = this.dom.querySelector( '.r-overlay-content' );\n\n\t\tif( mediaType === 'image' ) {\n\n\t\t\tthis.state = { previewImage: url, previewFit: fitMode }\n\n\t\t\tconst img = document.createElement( 'img', {} );\n\t\t\timg.src = url;\n\t\t\tcontentElement.appendChild( img );\n\n\t\t\timg.addEventListener( 'load', () => {\n\t\t\t\tthis.dom.dataset.state = 'loaded';\n\t\t\t}, false );\n\n\t\t\timg.addEventListener( 'error', () => {\n\t\t\t\tthis.dom.dataset.state = 'error';\n\t\t\t\tcontentElement.innerHTML =\n\t\t\t\t\t\t`<span class=\"r-overlay-error\">Unable to load image.</span>`\n\t\t\t}, false );\n\n\t\t\t// Hide image overlays when clicking outside the overlay\n\t\t\tthis.dom.style.cursor = 'zoom-out';\n\t\t\tthis.dom.addEventListener( 'click', ( event ) => {\n\t\t\t\tthis.close();\n\t\t\t}, false );\n\n\t\t\tthis.Reveal.dispatchEvent({ type: 'previewimage', data: { url } });\n\n\t\t}\n\t\telse if( mediaType === 'video' ) {\n\n\t\t\tthis.state = { previewVideo: url, previewFit: fitMode }\n\n\t\t\tconst video = document.createElement( 'video' );\n\t\t\tvideo.autoplay = this.dom.dataset.previewAutoplay === 'false' ? false : true;\n\t\t\tvideo.controls = this.dom.dataset.previewControls === 'false' ? false : true;\n\t\t\tvideo.loop = this.dom.dataset.previewLoop === 'true' ? true : false;\n\t\t\tvideo.muted = this.dom.dataset.previewMuted === 'true' ? true : false;\n\t\t\tvideo.playsInline = true;\n\t\t\tvideo.src = url;\n\t\t\tcontentElement.appendChild( video );\n\n\t\t\tvideo.addEventListener( 'loadeddata', () => {\n\t\t\t\tthis.dom.dataset.state = 'loaded';\n\t\t\t}, false );\n\n\t\t\tvideo.addEventListener( 'error', () => {\n\t\t\t\tthis.dom.dataset.state = 'error';\n\t\t\t\tcontentElement.innerHTML =\n\t\t\t\t\t`<span class=\"r-overlay-error\">Unable to load video.</span>`;\n\t\t\t}, false );\n\n\t\t\tthis.Reveal.dispatchEvent({ type: 'previewvideo', data: { url } });\n\n\t\t}\n\t\telse {\n\t\t\tthrow new Error( 'Please specify a valid media type to preview' );\n\t\t}\n\n\t\tthis.dom.querySelector( '.r-overlay-close' ).addEventListener( 'click', ( event ) => {\n\t\t\tthis.close();\n\t\t\tevent.preventDefault();\n\t\t}, false );\n\n\t}\n\n\tpreviewImage( url, fitMode ) {\n\n\t\tthis.previewMedia( url, 'image', fitMode );\n\n\t}\n\n\tpreviewVideo( url, fitMode ) {\n\n\t\tthis.previewMedia( url, 'video', fitMode );\n\n\t}\n\n\t/**\n\t * Open or close help overlay window.\n\t *\n\t * @param {Boolean} [override] Flag which overrides the\n\t * toggle logic and forcibly sets the desired state. True means\n\t * help is open, false means it's closed.\n\t */\n\ttoggleHelp( override ) {\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? this.showHelp() : this.close();\n\t\t}\n\t\telse {\n\t\t\tif( this.dom ) {\n\t\t\t\tthis.close();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.showHelp();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Opens an overlay window with help material.\n\t */\n\tshowHelp() {\n\n\t\tif( this.Reveal.getConfig().help ) {\n\n\t\t\tthis.close();\n\n\t\t\tthis.createOverlay( 'r-overlay-help' );\n\n\t\t\tlet html = '<p class=\"title\">Keyboard Shortcuts</p>';\n\n\t\t\tlet shortcuts = this.Reveal.keyboard.getShortcuts(),\n\t\t\t\tbindings = this.Reveal.keyboard.getBindings();\n\n\t\t\thtml += '<table><th>KEY</th><th>ACTION</th>';\n\t\t\tfor( let key in shortcuts ) {\n\t\t\t\thtml += `<tr><td>${key}</td><td>${shortcuts[ key ]}</td></tr>`;\n\t\t\t}\n\n\t\t\t// Add custom key bindings that have associated descriptions\n\t\t\tfor( let binding in bindings ) {\n\t\t\t\tif( bindings[binding].key && bindings[binding].description ) {\n\t\t\t\t\thtml += `<tr><td>${bindings[binding].key}</td><td>${bindings[binding].description}</td></tr>`;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\thtml += '</table>';\n\n\t\t\tthis.viewport.innerHTML = `\n\t\t\t\t<header class=\"r-overlay-header\">\n\t\t\t\t\t<button class=\"r-overlay-button r-overlay-close\">Esc <span class=\"icon\"></span></button>\n\t\t\t\t</header>\n\t\t\t\t<div class=\"r-overlay-content\">\n\t\t\t\t\t<div class=\"r-overlay-help-content\">${html}</div>\n\t\t\t\t</div>\n\t\t\t`;\n\n\t\t\tthis.dom.querySelector( '.r-overlay-close' ).addEventListener( 'click', event => {\n\t\t\t\tthis.close();\n\t\t\t\tevent.preventDefault();\n\t\t\t}, false );\n\n\t\t\tthis.Reveal.dispatchEvent({ type: 'showhelp' });\n\n\t\t}\n\n\t}\n\n\tisOpen() {\n\n\t\treturn !!this.dom;\n\n\t}\n\n\t/**\n\t * Closes any currently open overlay.\n\t */\n\tclose() {\n\n\t\tif( this.dom ) {\n\t\t\tthis.dom.remove();\n\t\t\tthis.dom = null;\n\n\t\t\tthis.state = {};\n\n\t\t\tthis.Reveal.dispatchEvent({ type: 'closeoverlay' });\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tgetState() {\n\n\t\treturn this.state;\n\n\t}\n\n\tsetState( state ) {\n\n\t\t// Ignore the incoming state if none of the preview related\n\t\t// props have changed\n\t\tif( this.stateProps.every( key => this.state[ key ] === state[ key ] ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif( state.previewIframe ) {\n\t\t\tthis.previewIframe( state.previewIframe );\n\t\t}\n\t\telse if( state.previewImage ) {\n\t\t\tthis.previewImage( state.previewImage, state.previewFit );\n\t\t}\n\t\telse if( state.previewVideo ) {\n\t\t\tthis.previewVideo( state.previewVideo, state.previewFit );\n\t\t}\n\t\telse {\n\t\t\tthis.close();\n\t\t}\n\n\t}\n\n\tonSlidesClicked( event ) {\n\n\t\tconst target = event.target;\n\n\t\tconst linkTarget = target.closest( this.iframeTriggerSelector );\n\t\tconst mediaTarget = target.closest( this.mediaTriggerSelector );\n\n\t\t// Was an iframe lightbox trigger clicked?\n\t\tif( linkTarget ) {\n\t\t\tif( event.metaKey || event.shiftKey || event.altKey ) {\n\t\t\t\t// Let the browser handle meta keys naturally so users can cmd+click\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet url = linkTarget.getAttribute( 'href' ) || linkTarget.getAttribute( 'data-preview-link' );\n\t\t\tif( url ) {\n\t\t\t\tthis.previewIframe( url );\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\t\t}\n\t\t// Was a media lightbox trigger clicked?\n\t\telse if( mediaTarget ) {\n\t\t\tif( mediaTarget.hasAttribute( 'data-preview-image' ) ) {\n\t\t\t\tlet url = mediaTarget.dataset.previewImage || mediaTarget.getAttribute( 'src' );\n\t\t\t\tif( url ) {\n\t\t\t\t\tthis.previewImage( url, mediaTarget.dataset.previewFit );\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if( mediaTarget.hasAttribute( 'data-preview-video' ) ) {\n\t\t\t\tlet url = mediaTarget.dataset.previewVideo || mediaTarget.getAttribute( 'src' );\n\t\t\t\tif( !url ) {\n\t\t\t\t\tlet source = mediaTarget.querySelector( 'source' );\n\t\t\t\t\tif( source ) {\n\t\t\t\t\t\turl = source.getAttribute( 'src' );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif( url ) {\n\t\t\t\t\tthis.previewVideo( url, mediaTarget.dataset.previewFit );\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.close();\n\n\t}\n\n}","import { isAndroid } from '../utils/device.js'\nimport { matches } from '../utils/util.js'\n\nconst SWIPE_THRESHOLD = 40;\n\n/**\n * Controls all touch interactions and navigations for\n * a presentation.\n */\nexport default class Touch {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\t// Holds information about the currently ongoing touch interaction\n\t\tthis.touchStartX = 0;\n\t\tthis.touchStartY = 0;\n\t\tthis.touchStartCount = 0;\n\t\tthis.touchCaptured = false;\n\n\t\tthis.onPointerDown = this.onPointerDown.bind( this );\n\t\tthis.onPointerMove = this.onPointerMove.bind( this );\n\t\tthis.onPointerUp = this.onPointerUp.bind( this );\n\t\tthis.onTouchStart = this.onTouchStart.bind( this );\n\t\tthis.onTouchMove = this.onTouchMove.bind( this );\n\t\tthis.onTouchEnd = this.onTouchEnd.bind( this );\n\n\t}\n\n\t/**\n\t *\n\t */\n\tbind() {\n\n\t\tlet revealElement = this.Reveal.getRevealElement();\n\n\t\tif( 'onpointerdown' in window ) {\n\t\t\t// Use W3C pointer events\n\t\t\trevealElement.addEventListener( 'pointerdown', this.onPointerDown, false );\n\t\t\trevealElement.addEventListener( 'pointermove', this.onPointerMove, false );\n\t\t\trevealElement.addEventListener( 'pointerup', this.onPointerUp, false );\n\t\t}\n\t\telse if( window.navigator.msPointerEnabled ) {\n\t\t\t// IE 10 uses prefixed version of pointer events\n\t\t\trevealElement.addEventListener( 'MSPointerDown', this.onPointerDown, false );\n\t\t\trevealElement.addEventListener( 'MSPointerMove', this.onPointerMove, false );\n\t\t\trevealElement.addEventListener( 'MSPointerUp', this.onPointerUp, false );\n\t\t}\n\t\telse {\n\t\t\t// Fall back to touch events\n\t\t\trevealElement.addEventListener( 'touchstart', this.onTouchStart, false );\n\t\t\trevealElement.addEventListener( 'touchmove', this.onTouchMove, false );\n\t\t\trevealElement.addEventListener( 'touchend', this.onTouchEnd, false );\n\t\t}\n\n\t}\n\n\t/**\n\t *\n\t */\n\tunbind() {\n\n\t\tlet revealElement = this.Reveal.getRevealElement();\n\n\t\trevealElement.removeEventListener( 'pointerdown', this.onPointerDown, false );\n\t\trevealElement.removeEventListener( 'pointermove', this.onPointerMove, false );\n\t\trevealElement.removeEventListener( 'pointerup', this.onPointerUp, false );\n\n\t\trevealElement.removeEventListener( 'MSPointerDown', this.onPointerDown, false );\n\t\trevealElement.removeEventListener( 'MSPointerMove', this.onPointerMove, false );\n\t\trevealElement.removeEventListener( 'MSPointerUp', this.onPointerUp, false );\n\n\t\trevealElement.removeEventListener( 'touchstart', this.onTouchStart, false );\n\t\trevealElement.removeEventListener( 'touchmove', this.onTouchMove, false );\n\t\trevealElement.removeEventListener( 'touchend', this.onTouchEnd, false );\n\n\t}\n\n\t/**\n\t * Checks if the target element prevents the triggering of\n\t * swipe navigation.\n\t */\n\tisSwipePrevented( target ) {\n\n\t\t// Prevent accidental swipes when scrubbing timelines\n\t\tif( matches( target, 'video[controls], audio[controls]' ) ) return true;\n\n\t\twhile( target && typeof target.hasAttribute === 'function' ) {\n\t\t\tif( target.hasAttribute( 'data-prevent-swipe' ) ) return true;\n\t\t\ttarget = target.parentNode;\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Handler for the 'touchstart' event, enables support for\n\t * swipe and pinch gestures.\n\t *\n\t * @param {object} event\n\t */\n\tonTouchStart( event ) {\n\n\t\tthis.touchCaptured = false;\n\n\t\tif( this.isSwipePrevented( event.target ) ) return true;\n\n\t\tthis.touchStartX = event.touches[0].clientX;\n\t\tthis.touchStartY = event.touches[0].clientY;\n\t\tthis.touchStartCount = event.touches.length;\n\n\t}\n\n\t/**\n\t * Handler for the 'touchmove' event.\n\t *\n\t * @param {object} event\n\t */\n\tonTouchMove( event ) {\n\n\t\tif( this.isSwipePrevented( event.target ) ) return true;\n\n\t\tlet config = this.Reveal.getConfig();\n\n\t\t// Each touch should only trigger one action\n\t\tif( !this.touchCaptured ) {\n\t\t\tthis.Reveal.onUserInput( event );\n\n\t\t\tlet currentX = event.touches[0].clientX;\n\t\t\tlet currentY = event.touches[0].clientY;\n\n\t\t\t// There was only one touch point, look for a swipe\n\t\t\tif( event.touches.length === 1 && this.touchStartCount !== 2 ) {\n\n\t\t\t\tlet availableRoutes = this.Reveal.availableRoutes({ includeFragments: true });\n\n\t\t\t\tlet deltaX = currentX - this.touchStartX,\n\t\t\t\t\tdeltaY = currentY - this.touchStartY;\n\n\t\t\t\tif( deltaX > SWIPE_THRESHOLD && Math.abs( deltaX ) > Math.abs( deltaY ) ) {\n\t\t\t\t\tthis.touchCaptured = true;\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\n\t\t\t\t\t\tif( config.rtl ) {\n\t\t\t\t\t\t\tthis.Reveal.next();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tthis.Reveal.prev();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.Reveal.left();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if( deltaX < -SWIPE_THRESHOLD && Math.abs( deltaX ) > Math.abs( deltaY ) ) {\n\t\t\t\t\tthis.touchCaptured = true;\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\n\t\t\t\t\t\tif( config.rtl ) {\n\t\t\t\t\t\t\tthis.Reveal.prev();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tthis.Reveal.next();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.Reveal.right();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if( deltaY > SWIPE_THRESHOLD && availableRoutes.up ) {\n\t\t\t\t\tthis.touchCaptured = true;\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\n\t\t\t\t\t\tthis.Reveal.prev();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.Reveal.up();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if( deltaY < -SWIPE_THRESHOLD && availableRoutes.down ) {\n\t\t\t\t\tthis.touchCaptured = true;\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\n\t\t\t\t\t\tthis.Reveal.next();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.Reveal.down();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// If we're embedded, only block touch events if they have\n\t\t\t\t// triggered an action\n\t\t\t\tif( config.embedded ) {\n\t\t\t\t\tif( this.touchCaptured || this.Reveal.isVerticalSlide() ) {\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Not embedded? Block them all to avoid needless tossing\n\t\t\t\t// around of the viewport in iOS\n\t\t\t\telse {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\t\t// There's a bug with swiping on some Android devices unless\n\t\t// the default action is always prevented\n\t\telse if( isAndroid ) {\n\t\t\tevent.preventDefault();\n\t\t}\n\n\t}\n\n\t/**\n\t * Handler for the 'touchend' event.\n\t *\n\t * @param {object} event\n\t */\n\tonTouchEnd( event ) {\n\n\t\t// Media playback is only allowed as a direct result of a\n\t\t// user interaction. Some mobile devices do not consider a\n\t\t// 'touchmove' to be a direct user action. If this is the\n\t\t// case, we fall back to starting playback here instead.\n\t\tif( this.touchCaptured && this.Reveal.slideContent.isNotAllowedToPlay() ) {\n\t\t\tthis.Reveal.startEmbeddedContent( this.Reveal.getCurrentSlide() );\n\t\t}\n\n\t\tthis.touchCaptured = false;\n\n\t}\n\n\t/**\n\t * Convert pointer down to touch start.\n\t *\n\t * @param {object} event\n\t */\n\tonPointerDown( event ) {\n\n\t\tif( event.pointerType === event.MSPOINTER_TYPE_TOUCH || event.pointerType === \"touch\" ) {\n\t\t\tevent.touches = [{ clientX: event.clientX, clientY: event.clientY }];\n\t\t\tthis.onTouchStart( event );\n\t\t}\n\n\t}\n\n\t/**\n\t * Convert pointer move to touch move.\n\t *\n\t * @param {object} event\n\t */\n\tonPointerMove( event ) {\n\n\t\tif( event.pointerType === event.MSPOINTER_TYPE_TOUCH || event.pointerType === \"touch\" )  {\n\t\t\tevent.touches = [{ clientX: event.clientX, clientY: event.clientY }];\n\t\t\tthis.onTouchMove( event );\n\t\t}\n\n\t}\n\n\t/**\n\t * Convert pointer up to touch end.\n\t *\n\t * @param {object} event\n\t */\n\tonPointerUp( event ) {\n\n\t\tif( event.pointerType === event.MSPOINTER_TYPE_TOUCH || event.pointerType === \"touch\" )  {\n\t\t\tevent.touches = [{ clientX: event.clientX, clientY: event.clientY }];\n\t\t\tthis.onTouchEnd( event );\n\t\t}\n\n\t}\n\n}","import { closest } from '../utils/util.js'\n\n/**\n * Manages focus when a presentation is embedded. This\n * helps us only capture keyboard from the presentation\n * a user is currently interacting with in a page where\n * multiple presentations are embedded.\n */\n\nconst STATE_FOCUS = 'focus';\nconst STATE_BLUR = 'blur';\n\nexport default class Focus {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.onRevealPointerDown = this.onRevealPointerDown.bind( this );\n\t\tthis.onDocumentPointerDown = this.onDocumentPointerDown.bind( this );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.embedded ) {\n\t\t\tthis.blur();\n\t\t}\n\t\telse {\n\t\t\tthis.focus();\n\t\t\tthis.unbind();\n\t\t}\n\n\t}\n\n\tbind() {\n\n\t\tif( this.Reveal.getConfig().embedded ) {\n\t\t\tthis.Reveal.getRevealElement().addEventListener( 'pointerdown', this.onRevealPointerDown, false );\n\t\t}\n\n\t}\n\n\tunbind() {\n\n\t\tthis.Reveal.getRevealElement().removeEventListener( 'pointerdown', this.onRevealPointerDown, false );\n\t\tdocument.removeEventListener( 'pointerdown', this.onDocumentPointerDown, false );\n\n\t}\n\n\tfocus() {\n\n\t\tif( this.state !== STATE_FOCUS ) {\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'focused' );\n\t\t\tdocument.addEventListener( 'pointerdown', this.onDocumentPointerDown, false );\n\t\t}\n\n\t\tthis.state = STATE_FOCUS;\n\n\t}\n\n\tblur() {\n\n\t\tif( this.state !== STATE_BLUR ) {\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'focused' );\n\t\t\tdocument.removeEventListener( 'pointerdown', this.onDocumentPointerDown, false );\n\t\t}\n\n\t\tthis.state = STATE_BLUR;\n\n\t}\n\n\tisFocused() {\n\n\t\treturn this.state === STATE_FOCUS;\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.Reveal.getRevealElement().classList.remove( 'focused' );\n\n\t}\n\n\tonRevealPointerDown( event ) {\n\n\t\tthis.focus();\n\n\t}\n\n\tonDocumentPointerDown( event ) {\n\n\t\tlet revealElement = closest( event.target, '.reveal' );\n\t\tif( !revealElement || revealElement !== this.Reveal.getRevealElement() ) {\n\t\t\tthis.blur();\n\t\t}\n\n\t}\n\n}","/**\n * Handles the showing of speaker notes\n */\nexport default class Notes {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'speaker-notes';\n\t\tthis.element.setAttribute( 'data-prevent-swipe', '' );\n\t\tthis.element.setAttribute( 'tabindex', '0' );\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.showNotes ) {\n\t\t\tthis.element.setAttribute( 'data-layout', typeof config.showNotes === 'string' ? config.showNotes : 'inline' );\n\t\t}\n\n\t}\n\n\t/**\n\t * Pick up notes from the current slide and display them\n\t * to the viewer.\n\t *\n\t * @see {@link config.showNotes}\n\t */\n\tupdate() {\n\n\t\tif( this.Reveal.getConfig().showNotes &&\n\t\t\tthis.element && this.Reveal.getCurrentSlide() &&\n\t\t\t!this.Reveal.isScrollView() &&\n\t\t\t!this.Reveal.isPrintView()\n\t\t) {\n\t\t\tthis.element.innerHTML = this.getSlideNotes() || '<span class=\"notes-placeholder\">No notes on this slide.</span>';\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates the visibility of the speaker notes sidebar that\n\t * is used to share annotated slides. The notes sidebar is\n\t * only visible if showNotes is true and there are notes on\n\t * one or more slides in the deck.\n\t */\n\tupdateVisibility() {\n\n\t\tif( this.Reveal.getConfig().showNotes &&\n\t\t\tthis.hasNotes() &&\n\t\t\t!this.Reveal.isScrollView() &&\n\t\t\t!this.Reveal.isPrintView()\n\t\t) {\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'show-notes' );\n\t\t}\n\t\telse {\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'show-notes' );\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if there are speaker notes for ANY slide in the\n\t * presentation.\n\t */\n\thasNotes() {\n\n\t\treturn this.Reveal.getSlidesElement().querySelectorAll( '[data-notes], aside.notes' ).length > 0;\n\n\t}\n\n\t/**\n\t * Checks if this presentation is running inside of the\n\t * speaker notes window.\n\t *\n\t * @return {boolean}\n\t */\n\tisSpeakerNotesWindow() {\n\n\t\treturn !!window.location.search.match( /receiver/gi );\n\n\t}\n\n\t/**\n\t * Retrieves the speaker notes from a slide. Notes can be\n\t * defined in two ways:\n\t * 1. As a data-notes attribute on the slide <section>\n\t * 2. With <aside class=\"notes\"> elements inside the slide\n\t *\n\t * @param {HTMLElement} [slide=currentSlide]\n\t * @return {(string|null)}\n\t */\n\tgetSlideNotes( slide = this.Reveal.getCurrentSlide() ) {\n\n\t\t// Notes can be specified via the data-notes attribute...\n\t\tif( slide.hasAttribute( 'data-notes' ) ) {\n\t\t\treturn slide.getAttribute( 'data-notes' );\n\t\t}\n\n\t\t// ... or using <aside class=\"notes\"> elements\n\t\tlet notesElements = slide.querySelectorAll( 'aside.notes' );\n\t\tif( notesElements ) {\n\t\t\treturn Array.from(notesElements).map( notesElement => notesElement.innerHTML ).join( '\\n' );\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.element.remove();\n\n\t}\n\n}","/**\n * UI component that lets the use control auto-slide\n * playback via play/pause.\n */\nexport default class Playback {\n\n\t/**\n\t * @param {HTMLElement} container The component will append\n\t * itself to this\n\t * @param {function} progressCheck A method which will be\n\t * called frequently to get the current playback progress on\n\t * a range of 0-1\n\t */\n\tconstructor( container, progressCheck ) {\n\n\t\t// Cosmetics\n\t\tthis.diameter = 100;\n\t\tthis.diameter2 = this.diameter/2;\n\t\tthis.thickness = 6;\n\n\t\t// Flags if we are currently playing\n\t\tthis.playing = false;\n\n\t\t// Current progress on a 0-1 range\n\t\tthis.progress = 0;\n\n\t\t// Used to loop the animation smoothly\n\t\tthis.progressOffset = 1;\n\n\t\tthis.container = container;\n\t\tthis.progressCheck = progressCheck;\n\n\t\tthis.canvas = document.createElement( 'canvas' );\n\t\tthis.canvas.className = 'playback';\n\t\tthis.canvas.width = this.diameter;\n\t\tthis.canvas.height = this.diameter;\n\t\tthis.canvas.style.width = this.diameter2 + 'px';\n\t\tthis.canvas.style.height = this.diameter2 + 'px';\n\t\tthis.context = this.canvas.getContext( '2d' );\n\n\t\tthis.container.appendChild( this.canvas );\n\n\t\tthis.render();\n\n\t}\n\n\tsetPlaying( value ) {\n\n\t\tconst wasPlaying = this.playing;\n\n\t\tthis.playing = value;\n\n\t\t// Start repainting if we weren't already\n\t\tif( !wasPlaying && this.playing ) {\n\t\t\tthis.animate();\n\t\t}\n\t\telse {\n\t\t\tthis.render();\n\t\t}\n\n\t}\n\n\tanimate() {\n\n\t\tconst progressBefore = this.progress;\n\n\t\tthis.progress = this.progressCheck();\n\n\t\t// When we loop, offset the progress so that it eases\n\t\t// smoothly rather than immediately resetting\n\t\tif( progressBefore > 0.8 && this.progress < 0.2 ) {\n\t\t\tthis.progressOffset = this.progress;\n\t\t}\n\n\t\tthis.render();\n\n\t\tif( this.playing ) {\n\t\t\trequestAnimationFrame( this.animate.bind( this ) );\n\t\t}\n\n\t}\n\n\t/**\n\t * Renders the current progress and playback state.\n\t */\n\trender() {\n\n\t\tlet progress = this.playing ? this.progress : 0,\n\t\t\tradius = ( this.diameter2 ) - this.thickness,\n\t\t\tx = this.diameter2,\n\t\t\ty = this.diameter2,\n\t\t\ticonSize = 28;\n\n\t\t// Ease towards 1\n\t\tthis.progressOffset += ( 1 - this.progressOffset ) * 0.1;\n\n\t\tconst endAngle = ( - Math.PI / 2 ) + ( progress * ( Math.PI * 2 ) );\n\t\tconst startAngle = ( - Math.PI / 2 ) + ( this.progressOffset * ( Math.PI * 2 ) );\n\n\t\tthis.context.save();\n\t\tthis.context.clearRect( 0, 0, this.diameter, this.diameter );\n\n\t\t// Solid background color\n\t\tthis.context.beginPath();\n\t\tthis.context.arc( x, y, radius + 4, 0, Math.PI * 2, false );\n\t\tthis.context.fillStyle = 'rgba( 0, 0, 0, 0.4 )';\n\t\tthis.context.fill();\n\n\t\t// Draw progress track\n\t\tthis.context.beginPath();\n\t\tthis.context.arc( x, y, radius, 0, Math.PI * 2, false );\n\t\tthis.context.lineWidth = this.thickness;\n\t\tthis.context.strokeStyle = 'rgba( 255, 255, 255, 0.2 )';\n\t\tthis.context.stroke();\n\n\t\tif( this.playing ) {\n\t\t\t// Draw progress on top of track\n\t\t\tthis.context.beginPath();\n\t\t\tthis.context.arc( x, y, radius, startAngle, endAngle, false );\n\t\t\tthis.context.lineWidth = this.thickness;\n\t\t\tthis.context.strokeStyle = '#fff';\n\t\t\tthis.context.stroke();\n\t\t}\n\n\t\tthis.context.translate( x - ( iconSize / 2 ), y - ( iconSize / 2 ) );\n\n\t\t// Draw play/pause icons\n\t\tif( this.playing ) {\n\t\t\tthis.context.fillStyle = '#fff';\n\t\t\tthis.context.fillRect( 0, 0, iconSize / 2 - 4, iconSize );\n\t\t\tthis.context.fillRect( iconSize / 2 + 4, 0, iconSize / 2 - 4, iconSize );\n\t\t}\n\t\telse {\n\t\t\tthis.context.beginPath();\n\t\t\tthis.context.translate( 4, 0 );\n\t\t\tthis.context.moveTo( 0, 0 );\n\t\t\tthis.context.lineTo( iconSize - 4, iconSize / 2 );\n\t\t\tthis.context.lineTo( 0, iconSize );\n\t\t\tthis.context.fillStyle = '#fff';\n\t\t\tthis.context.fill();\n\t\t}\n\n\t\tthis.context.restore();\n\n\t}\n\n\ton( type, listener ) {\n\t\tthis.canvas.addEventListener( type, listener, false );\n\t}\n\n\toff( type, listener ) {\n\t\tthis.canvas.removeEventListener( type, listener, false );\n\t}\n\n\tdestroy() {\n\n\t\tthis.playing = false;\n\n\t\tif( this.canvas.parentNode ) {\n\t\t\tthis.container.removeChild( this.canvas );\n\t\t}\n\n\t}\n\n}","/**\n * The default reveal.js config object.\n */\nexport default {\n\n\t// The \"normal\" size of the presentation, aspect ratio will be preserved\n\t// when the presentation is scaled to fit different resolutions\n\twidth: 960,\n\theight: 700,\n\n\t// Factor of the display size that should remain empty around the content\n\tmargin: 0.04,\n\n\t// Bounds for smallest/largest possible scale to apply to content\n\tminScale: 0.2,\n\tmaxScale: 2.0,\n\n\t// Display presentation control arrows.\n\t// - true: Display controls on all screens\n\t// - false: Hide controls on all screens\n\t// - \"speaker-only\": Only display controls in the speaker view\n\tcontrols: true,\n\n\t// Help the user learn the controls by providing hints, for example by\n\t// bouncing the down arrow when they first encounter a vertical slide\n\tcontrolsTutorial: true,\n\n\t// Determines where controls appear, \"edges\" or \"bottom-right\"\n\tcontrolsLayout: 'bottom-right',\n\n\t// Visibility rule for backwards navigation arrows; \"faded\", \"hidden\"\n\t// or \"visible\"\n\tcontrolsBackArrows: 'faded',\n\n\t// Display a presentation progress bar\n\tprogress: true,\n\n\t// Display the page number of the current slide\n\t// - true:    Show slide number\n\t// - false:   Hide slide number\n\t//\n\t// Can optionally be set as a string that specifies the number formatting:\n\t// - \"h.v\":\t  Horizontal . vertical slide number (default)\n\t// - \"h/v\":\t  Horizontal / vertical slide number\n\t// - \"c\":\t  Flattened slide number\n\t// - \"c/t\":\t  Flattened slide number / total slides\n\t//\n\t// Alternatively, you can provide a function that returns the slide\n\t// number for the current slide. The function should take in a slide\n\t// object and return an array with one string [slideNumber] or\n\t// three strings [n1,delimiter,n2]. See #formatSlideNumber().\n\tslideNumber: false,\n\n\t// Can be used to limit the contexts in which the slide number appears\n\t// - \"all\":      Always show the slide number\n\t// - \"print\":    Only when printing to PDF\n\t// - \"speaker\":  Only in the speaker view\n\tshowSlideNumber: 'all',\n\n\t// Use 1 based indexing for # links to match slide number (default is zero\n\t// based)\n\thashOneBasedIndex: false,\n\n\t// Add the current slide number to the URL hash so that reloading the\n\t// page/copying the URL will return you to the same slide\n\thash: false,\n\n\t// Flags if we should monitor the hash and change slides accordingly\n\trespondToHashChanges: true,\n\n\t// Enable support for jump-to-slide navigation shortcuts\n\tjumpToSlide: true,\n\n\t// Push each slide change to the browser history.  Implies `hash: true`\n\thistory: false,\n\n\t// Enable keyboard shortcuts for navigation\n\tkeyboard: true,\n\n\t// Optional function that blocks keyboard events when returning false\n\t//\n\t// If you set this to 'focused', we will only capture keyboard events\n\t// for embedded decks when they are in focus\n\tkeyboardCondition: null,\n\n\t// Disables the default reveal.js slide layout (scaling and centering)\n\t// so that you can use custom CSS layout\n\tdisableLayout: false,\n\n\t// Enable the slide overview mode\n\toverview: true,\n\n\t// Vertical centering of slides\n\tcenter: true,\n\n\t// Enables touch navigation on devices with touch input\n\ttouch: true,\n\n\t// Loop the presentation\n\tloop: false,\n\n\t// Change the presentation direction to be RTL\n\trtl: false,\n\n\t// Changes the behavior of our navigation directions.\n\t//\n\t// \"default\"\n\t// Left/right arrow keys step between horizontal slides, up/down\n\t// arrow keys step between vertical slides. Space key steps through\n\t// all slides (both horizontal and vertical).\n\t//\n\t// \"linear\"\n\t// Removes the up/down arrows. Left/right arrows step through all\n\t// slides (both horizontal and vertical).\n\t//\n\t// \"grid\"\n\t// When this is enabled, stepping left/right from a vertical stack\n\t// to an adjacent vertical stack will land you at the same vertical\n\t// index.\n\t//\n\t// Consider a deck with six slides ordered in two vertical stacks:\n\t// 1.1    2.1\n\t// 1.2    2.2\n\t// 1.3    2.3\n\t//\n\t// If you're on slide 1.3 and navigate right, you will normally move\n\t// from 1.3 -> 2.1. If \"grid\" is used, the same navigation takes you\n\t// from 1.3 -> 2.3.\n\tnavigationMode: 'default',\n\n\t// Randomizes the order of slides each time the presentation loads\n\tshuffle: false,\n\n\t// Turns fragments on and off globally\n\tfragments: true,\n\n\t// Flags whether to include the current fragment in the URL,\n\t// so that reloading brings you to the same fragment position\n\tfragmentInURL: true,\n\n\t// Flags if the presentation is running in an embedded mode,\n\t// i.e. contained within a limited portion of the screen\n\tembedded: false,\n\n\t// Flags if we should show a help overlay when the question-mark\n\t// key is pressed\n\thelp: true,\n\n\t// Flags if it should be possible to pause the presentation (blackout)\n\tpause: true,\n\n\t// Flags if speaker notes should be visible to all viewers\n\tshowNotes: false,\n\n\t// Flags if slides with data-visibility=\"hidden\" should be kep visible\n\tshowHiddenSlides: false,\n\n\t// Global override for autoplaying embedded media (video/audio/iframe)\n\t// - null:   Media will only autoplay if data-autoplay is present\n\t// - true:   All media will autoplay, regardless of individual setting\n\t// - false:  No media will autoplay, regardless of individual setting\n\tautoPlayMedia: null,\n\n\t// Global override for preloading lazy-loaded iframes\n\t// - null:   Iframes with data-src AND data-preload will be loaded when within\n\t//           the viewDistance, iframes with only data-src will be loaded when visible\n\t// - true:   All iframes with data-src will be loaded when within the viewDistance\n\t// - false:  All iframes with data-src will be loaded only when visible\n\tpreloadIframes: null,\n\n\t// Prevent embedded iframes from automatically focusing on themselves\n\tpreventIframeAutoFocus: true,\n\n\t// Can be used to globally disable auto-animation\n\tautoAnimate: true,\n\n\t// Optionally provide a custom element matcher that will be\n\t// used to dictate which elements we can animate between.\n\tautoAnimateMatcher: null,\n\n\t// Default settings for our auto-animate transitions, can be\n\t// overridden per-slide or per-element via data arguments\n\tautoAnimateEasing: 'ease',\n\tautoAnimateDuration: 1.0,\n\tautoAnimateUnmatched: true,\n\n\t// CSS properties that can be auto-animated. Position & scale\n\t// is matched separately so there's no need to include styles\n\t// like top/right/bottom/left, width/height or margin.\n\tautoAnimateStyles: [\n\t\t'opacity',\n\t\t'color',\n\t\t'background-color',\n\t\t'padding',\n\t\t'font-size',\n\t\t'line-height',\n\t\t'letter-spacing',\n\t\t'border-width',\n\t\t'border-color',\n\t\t'border-radius',\n\t\t'outline',\n\t\t'outline-offset'\n\t],\n\n\t// Controls automatic progression to the next slide\n\t// - 0:      Auto-sliding only happens if the data-autoslide HTML attribute\n\t//           is present on the current slide or fragment\n\t// - 1+:     All slides will progress automatically at the given interval\n\t// - false:  No auto-sliding, even if data-autoslide is present\n\tautoSlide: 0,\n\n\t// Stop auto-sliding after user input\n\tautoSlideStoppable: true,\n\n\t// Use this method for navigation when auto-sliding (defaults to navigateNext)\n\tautoSlideMethod: null,\n\n\t// Specify the average time in seconds that you think you will spend\n\t// presenting each slide. This is used to show a pacing timer in the\n\t// speaker view\n\tdefaultTiming: null,\n\n\t// Enable slide navigation via mouse wheel\n\tmouseWheel: false,\n\n\t// Opens links in an iframe preview overlay\n\t// Add `data-preview-link` and `data-preview-link=\"false\"` to customise each link\n\t// individually\n\tpreviewLinks: false,\n\n\t// Exposes the reveal.js API through window.postMessage\n\tpostMessage: true,\n\n\t// Dispatches all reveal.js events to the parent window through postMessage\n\tpostMessageEvents: false,\n\n\t// Focuses body when page changes visibility to ensure keyboard shortcuts work\n\tfocusBodyOnPageVisibilityChange: true,\n\n\t// Transition style\n\ttransition: 'slide', // none/fade/slide/convex/concave/zoom\n\n\t// Transition speed\n\ttransitionSpeed: 'default', // default/fast/slow\n\n\t// Transition style for full page slide backgrounds\n\tbackgroundTransition: 'fade', // none/fade/slide/convex/concave/zoom\n\n\t// Parallax background image\n\tparallaxBackgroundImage: '', // CSS syntax, e.g. \"a.jpg\"\n\n\t// Parallax background size\n\tparallaxBackgroundSize: '', // CSS syntax, e.g. \"3000px 2000px\"\n\n\t// Parallax background repeat\n\tparallaxBackgroundRepeat: '', // repeat/repeat-x/repeat-y/no-repeat/initial/inherit\n\n\t// Parallax background position\n\tparallaxBackgroundPosition: '', // CSS syntax, e.g. \"top left\"\n\n\t// Amount of pixels to move the parallax background per slide step\n\tparallaxBackgroundHorizontal: null,\n\tparallaxBackgroundVertical: null,\n\n\t// Can be used to initialize reveal.js in one of the following views:\n\t// - print:   Render the presentation so that it can be printed to PDF\n\t// - scroll:  Show the presentation as a tall scrollable page with scroll\n\t//            triggered animations\n\tview: null,\n\n\t// Adjusts the height of each slide in the scroll view.\n\t// - full:       Each slide is as tall as the viewport\n\t// - compact:    Slides are as small as possible, allowing multiple slides\n\t//               to be visible in parallel on tall devices\n\tscrollLayout: 'full',\n\n\t// Control how scroll snapping works in the scroll view.\n\t// - false:   \tNo snapping, scrolling is continuous\n\t// - proximity:  Snap when close to a slide\n\t// - mandatory:  Always snap to the closest slide\n\t//\n\t// Only applies to presentations in scroll view.\n\tscrollSnap: 'mandatory',\n\n\t// Enables and configure the scroll view progress bar.\n\t// - 'auto':    Show the scrollbar while scrolling, hide while idle\n\t// - true:      Always show the scrollbar\n\t// - false:     Never show the scrollbar\n\tscrollProgress: 'auto',\n\n\t// Automatically activate the scroll view when we the viewport falls\n\t// below the given width.\n\tscrollActivationWidth: 435,\n\n\t// The maximum number of pages a single slide can expand onto when printing\n\t// to PDF, unlimited by default\n\tpdfMaxPagesPerSlide: Number.POSITIVE_INFINITY,\n\n\t// Prints each fragment on a separate slide\n\tpdfSeparateFragments: true,\n\n\t// Offset used to reduce the height of content within exported PDF pages.\n\t// This exists to account for environment differences based on how you\n\t// print to PDF. CLI printing options, like phantomjs and wkpdf, can end\n\t// on precisely the total height of the document whereas in-browser\n\t// printing has to end one pixel before.\n\tpdfPageHeightOffset: -1,\n\n\t// Number of slides away from the current that are visible\n\tviewDistance: 3,\n\n\t// Number of slides away from the current that are visible on mobile\n\t// devices. It is advisable to set this to a lower number than\n\t// viewDistance in order to save resources.\n\tmobileViewDistance: 2,\n\n\t// The display mode that will be used to show slides\n\tdisplay: 'block',\n\n\t// Hide cursor if inactive\n\thideInactiveCursor: true,\n\n\t// Time before the cursor is hidden (in ms)\n\thideCursorTime: 5000,\n\n\t// Should we automatically sort and set indices for fragments\n\t// at each sync? (See Reveal.sync)\n\tsortFragmentsOnSync: true,\n\n\t// Script dependencies to load\n\tdependencies: [],\n\n\t// Plugin objects to register and use for this presentation\n\tplugins: []\n\n}","import SlideContent from './controllers/slidecontent.js'\nimport SlideNumber from './controllers/slidenumber.js'\nimport JumpToSlide from './controllers/jumptoslide.js'\nimport Backgrounds from './controllers/backgrounds.js'\nimport AutoAnimate from './controllers/autoanimate.js'\nimport ScrollView from './controllers/scrollview.js'\nimport PrintView from './controllers/printview.js'\nimport Fragments from './controllers/fragments.js'\nimport Overview from './controllers/overview.js'\nimport Keyboard from './controllers/keyboard.js'\nimport Location from './controllers/location.js'\nimport Controls from './controllers/controls.js'\nimport Progress from './controllers/progress.js'\nimport Pointer from './controllers/pointer.js'\nimport Plugins from './controllers/plugins.js'\nimport Overlay from './controllers/overlay.js'\nimport Touch from './controllers/touch.js'\nimport Focus from './controllers/focus.js'\nimport Notes from './controllers/notes.js'\nimport Playback from './components/playback.js'\nimport defaultConfig from './config.js'\nimport * as Util from './utils/util.js'\nimport * as Device from './utils/device.js'\nimport {\n\tSLIDES_SELECTOR,\n\tHORIZONTAL_SLIDES_SELECTOR,\n\tVERTICAL_SLIDES_SELECTOR,\n\tPOST_MESSAGE_METHOD_BLACKLIST\n} from './utils/constants.js'\n\n// The reveal.js version\nexport const VERSION = '5.2.1';\n\n/**\n * reveal.js\n * https://revealjs.com\n * MIT licensed\n *\n * Copyright (C) 2011-2022 Hakim El Hattab, https://hakim.se\n */\nexport default function( revealElement, options ) {\n\n\t// Support initialization with no args, one arg\n\t// [options] or two args [revealElement, options]\n\tif( arguments.length < 2 ) {\n\t\toptions = arguments[0];\n\t\trevealElement = document.querySelector( '.reveal' );\n\t}\n\n\tconst Reveal = {};\n\n\t// Configuration defaults, can be overridden at initialization time\n\tlet config = {},\n\n\t\t// Flags if initialize() has been invoked for this reveal instance\n\t\tinitialized = false,\n\n\t\t// Flags if reveal.js is loaded (has dispatched the 'ready' event)\n\t\tready = false,\n\n\t\t// The horizontal and vertical index of the currently active slide\n\t\tindexh,\n\t\tindexv,\n\n\t\t// The previous and current slide HTML elements\n\t\tpreviousSlide,\n\t\tcurrentSlide,\n\n\t\t// Remember which directions that the user has navigated towards\n\t\tnavigationHistory = {\n\t\t\thasNavigatedHorizontally: false,\n\t\t\thasNavigatedVertically: false\n\t\t},\n\n\t\t// Slides may have a data-state attribute which we pick up and apply\n\t\t// as a class to the body. This list contains the combined state of\n\t\t// all current slides.\n\t\tstate = [],\n\n\t\t// The current scale of the presentation (see width/height config)\n\t\tscale = 1,\n\n\t\t// CSS transform that is currently applied to the slides container,\n\t\t// split into two groups\n\t\tslidesTransform = { layout: '', overview: '' },\n\n\t\t// Cached references to DOM elements\n\t\tdom = {},\n\n\t\t// Flags if the interaction event listeners are bound\n\t\teventsAreBound = false,\n\n\t\t// The current slide transition state; idle or running\n\t\ttransition = 'idle',\n\n\t\t// The current auto-slide duration\n\t\tautoSlide = 0,\n\n\t\t// Auto slide properties\n\t\tautoSlidePlayer,\n\t\tautoSlideTimeout = 0,\n\t\tautoSlideStartTime = -1,\n\t\tautoSlidePaused = false,\n\n\t\t// Controllers for different aspects of our presentation. They're\n\t\t// all given direct references to this Reveal instance since there\n\t\t// may be multiple presentations running in parallel.\n\t\tslideContent = new SlideContent( Reveal ),\n\t\tslideNumber = new SlideNumber( Reveal ),\n\t\tjumpToSlide = new JumpToSlide( Reveal ),\n\t\tautoAnimate = new AutoAnimate( Reveal ),\n\t\tbackgrounds = new Backgrounds( Reveal ),\n\t\tscrollView = new ScrollView( Reveal ),\n\t\tprintView = new PrintView( Reveal ),\n\t\tfragments = new Fragments( Reveal ),\n\t\toverview = new Overview( Reveal ),\n\t\tkeyboard = new Keyboard( Reveal ),\n\t\tlocation = new Location( Reveal ),\n\t\tcontrols = new Controls( Reveal ),\n\t\tprogress = new Progress( Reveal ),\n\t\tpointer = new Pointer( Reveal ),\n\t\tplugins = new Plugins( Reveal ),\n\t\toverlay = new Overlay( Reveal ),\n\t\tfocus = new Focus( Reveal ),\n\t\ttouch = new Touch( Reveal ),\n\t\tnotes = new Notes( Reveal );\n\n\t/**\n\t * Starts up the presentation.\n\t */\n\tfunction initialize( initOptions ) {\n\n\t\tif( !revealElement ) throw 'Unable to find presentation root (<div class=\"reveal\">).';\n\n\t\tif( initialized ) throw 'Reveal.js has already been initialized.';\n\n\t\tinitialized = true;\n\n\t\t// Cache references to key DOM elements\n\t\tdom.wrapper = revealElement;\n\t\tdom.slides = revealElement.querySelector( '.slides' );\n\n\t\tif( !dom.slides ) throw 'Unable to find slides container (<div class=\"slides\">).';\n\n\t\t// Compose our config object in order of increasing precedence:\n\t\t// 1. Default reveal.js options\n\t\t// 2. Options provided via Reveal.configure() prior to\n\t\t//    initialization\n\t\t// 3. Options passed to the Reveal constructor\n\t\t// 4. Options passed to Reveal.initialize\n\t\t// 5. Query params\n\t\tconfig = { ...defaultConfig, ...config, ...options, ...initOptions, ...Util.getQueryHash() };\n\n\t\t// Legacy support for the ?print-pdf query\n\t\tif( /print-pdf/gi.test( window.location.search ) ) {\n\t\t\tconfig.view = 'print';\n\t\t}\n\n\t\tsetViewport();\n\n\t\t// Force a layout when the whole page, incl fonts, has loaded\n\t\twindow.addEventListener( 'load', layout, false );\n\n\t\t// Register plugins and load dependencies, then move on to #start()\n\t\tplugins.load( config.plugins, config.dependencies ).then( start );\n\n\t\treturn new Promise( resolve => Reveal.on( 'ready', resolve ) );\n\n\t}\n\n\t/**\n\t * Encase the presentation in a reveal.js viewport. The\n\t * extent of the viewport differs based on configuration.\n\t */\n\tfunction setViewport() {\n\n\t\t// Embedded decks use the reveal element as their viewport\n\t\tif( config.embedded === true ) {\n\t\t\tdom.viewport = Util.closest( revealElement, '.reveal-viewport' ) || revealElement;\n\t\t}\n\t\t// Full-page decks use the body as their viewport\n\t\telse {\n\t\t\tdom.viewport = document.body;\n\t\t\tdocument.documentElement.classList.add( 'reveal-full-page' );\n\t\t}\n\n\t\tdom.viewport.classList.add( 'reveal-viewport' );\n\n\t}\n\n\t/**\n\t * Starts up reveal.js by binding input events and navigating\n\t * to the current URL deeplink if there is one.\n\t */\n\tfunction start() {\n\n\t\t// Don't proceed if this instance has been destroyed\n\t\tif( initialized === false ) return;\n\n\t\tready = true;\n\n\t\t// Remove slides hidden with data-visibility\n\t\tremoveHiddenSlides();\n\n\t\t// Make sure we've got all the DOM elements we need\n\t\tsetupDOM();\n\n\t\t// Listen to messages posted to this window\n\t\tsetupPostMessage();\n\n\t\t// Prevent the slides from being scrolled out of view\n\t\tsetupScrollPrevention();\n\n\t\t// Adds bindings for fullscreen mode\n\t\tsetupFullscreen();\n\n\t\t// Resets all vertical slides so that only the first is visible\n\t\tresetVerticalSlides();\n\n\t\t// Updates the presentation to match the current configuration values\n\t\tconfigure();\n\n\t\t// Create slide backgrounds\n\t\tbackgrounds.update( true );\n\n\t\t// Activate the print/scroll view if configured\n\t\tactivateInitialView();\n\n\t\t// Read the initial hash\n\t\tlocation.readURL();\n\n\t\t// Notify listeners that the presentation is ready but use a 1ms\n\t\t// timeout to ensure it's not fired synchronously after #initialize()\n\t\tsetTimeout( () => {\n\t\t\t// Enable transitions now that we're loaded\n\t\t\tdom.slides.classList.remove( 'no-transition' );\n\n\t\t\tdom.wrapper.classList.add( 'ready' );\n\n\t\t\tdispatchEvent({\n\t\t\t\ttype: 'ready',\n\t\t\t\tdata: {\n\t\t\t\t\tindexh,\n\t\t\t\t\tindexv,\n\t\t\t\t\tcurrentSlide\n\t\t\t\t}\n\t\t\t});\n\t\t}, 1 );\n\n\t}\n\n\t/**\n\t * Activates the correct reveal.js view based on our config.\n\t * This is only invoked once during initialization.\n\t */\n\tfunction activateInitialView() {\n\n\t\tconst activatePrintView = config.view === 'print';\n\t\tconst activateScrollView = config.view === 'scroll' || config.view === 'reader';\n\n\t\tif( activatePrintView || activateScrollView ) {\n\n\t\t\tif( activatePrintView ) {\n\t\t\t\tremoveEventListeners();\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttouch.unbind();\n\t\t\t}\n\n\t\t\t// Avoid content flickering during layout\n\t\t\tdom.viewport.classList.add( 'loading-scroll-mode' );\n\n\t\t\tif( activatePrintView ) {\n\t\t\t\t// The document needs to have loaded for the PDF layout\n\t\t\t\t// measurements to be accurate\n\t\t\t\tif( document.readyState === 'complete' ) {\n\t\t\t\t\tprintView.activate();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\twindow.addEventListener( 'load', () => printView.activate() );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tscrollView.activate();\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Removes all slides with data-visibility=\"hidden\". This\n\t * is done right before the rest of the presentation is\n\t * initialized.\n\t *\n\t * If you want to show all hidden slides, initialize\n\t * reveal.js with showHiddenSlides set to true.\n\t */\n\tfunction removeHiddenSlides() {\n\n\t\tif( !config.showHiddenSlides ) {\n\t\t\tUtil.queryAll( dom.wrapper, 'section[data-visibility=\"hidden\"]' ).forEach( slide => {\n\t\t\t\tconst parent = slide.parentNode;\n\n\t\t\t\t// If this slide is part of a stack and that stack will be\n\t\t\t\t// empty after removing the hidden slide, remove the entire\n\t\t\t\t// stack\n\t\t\t\tif( parent.childElementCount === 1 && /section/i.test( parent.nodeName ) ) {\n\t\t\t\t\tparent.remove();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tslide.remove();\n\t\t\t\t}\n\n\t\t\t} );\n\t\t}\n\n\t}\n\n\t/**\n\t * Finds and stores references to DOM elements which are\n\t * required by the presentation. If a required element is\n\t * not found, it is created.\n\t */\n\tfunction setupDOM() {\n\n\t\t// Prevent transitions while we're loading\n\t\tdom.slides.classList.add( 'no-transition' );\n\n\t\tif( Device.isMobile ) {\n\t\t\tdom.wrapper.classList.add( 'no-hover' );\n\t\t}\n\t\telse {\n\t\t\tdom.wrapper.classList.remove( 'no-hover' );\n\t\t}\n\n\t\tbackgrounds.render();\n\t\tslideNumber.render();\n\t\tjumpToSlide.render();\n\t\tcontrols.render();\n\t\tprogress.render();\n\t\tnotes.render();\n\n\t\t// Overlay graphic which is displayed during the paused mode\n\t\tdom.pauseOverlay = Util.createSingletonNode( dom.wrapper, 'div', 'pause-overlay', config.controls ? '<button class=\"resume-button\">Resume presentation</button>' : null );\n\n\t\tdom.statusElement = createStatusElement();\n\n\t\tdom.wrapper.setAttribute( 'role', 'application' );\n\t}\n\n\t/**\n\t * Creates a hidden div with role aria-live to announce the\n\t * current slide content. Hide the div off-screen to make it\n\t * available only to Assistive Technologies.\n\t *\n\t * @return {HTMLElement}\n\t */\n\tfunction createStatusElement() {\n\n\t\tlet statusElement = dom.wrapper.querySelector( '.aria-status' );\n\t\tif( !statusElement ) {\n\t\t\tstatusElement = document.createElement( 'div' );\n\t\t\tstatusElement.style.position = 'absolute';\n\t\t\tstatusElement.style.height = '1px';\n\t\t\tstatusElement.style.width = '1px';\n\t\t\tstatusElement.style.overflow = 'hidden';\n\t\t\tstatusElement.style.clip = 'rect( 1px, 1px, 1px, 1px )';\n\t\t\tstatusElement.classList.add( 'aria-status' );\n\t\t\tstatusElement.setAttribute( 'aria-live', 'polite' );\n\t\t\tstatusElement.setAttribute( 'aria-atomic','true' );\n\t\t\tdom.wrapper.appendChild( statusElement );\n\t\t}\n\t\treturn statusElement;\n\n\t}\n\n\t/**\n\t * Announces the given text to screen readers.\n\t */\n\tfunction announceStatus( value ) {\n\n\t\tdom.statusElement.textContent = value;\n\n\t}\n\n\t/**\n\t * Converts the given HTML element into a string of text\n\t * that can be announced to a screen reader. Hidden\n\t * elements are excluded.\n\t */\n\tfunction getStatusText( node ) {\n\n\t\tlet text = '';\n\n\t\t// Text node\n\t\tif( node.nodeType === 3 ) {\n\t\t\ttext += node.textContent.trim();\n\t\t}\n\t\t// Element node\n\t\telse if( node.nodeType === 1 ) {\n\n\t\t\tlet isAriaHidden = node.getAttribute( 'aria-hidden' );\n\t\t\tlet isDisplayHidden = window.getComputedStyle( node )['display'] === 'none';\n\t\t\tif( isAriaHidden !== 'true' && !isDisplayHidden ) {\n\n\t\t\t\t// Capture alt text from img and video elements\n\t\t\t\tif( node.tagName === 'IMG' || node.tagName === 'VIDEO' ) {\n\t\t\t\t\tlet altText = node.getAttribute( 'alt' );\n\t\t\t\t\tif( altText ) {\n\t\t\t\t\t\ttext += ensurePunctuation( altText );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tArray.from( node.childNodes ).forEach( child => {\n\t\t\t\t\ttext += getStatusText( child );\n\t\t\t\t} );\n\n\t\t\t\t// Add period after block-level text elements to improve\n\t\t\t\t// screen reader experience\n\t\t\t\tconst textElements = ['P', 'DIV', 'UL', 'OL', 'LI', 'H1', 'H2', 'H3', 'H4', 'H5', 'H6', 'BLOCKQUOTE'];\n\t\t\t\tif( textElements.includes( node.tagName ) && text.trim() !== '' ) {\n\t\t\t\t\ttext = ensurePunctuation( text );\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\ttext = text.trim();\n\n\t\treturn text === '' ? '' : text + ' ';\n\n\t}\n\n\t/**\n\t * Ensures text ends with proper punctuation by adding a period\n\t * if it doesn't already end with punctuation.\n\t */\n\tfunction ensurePunctuation( text ) {\n\n\t\tconst trimmedText = text.trim();\n\n\t\tif( trimmedText === '' ) {\n\t\t\treturn text;\n\t\t}\n\n\t\treturn !/[.!?]$/.test(trimmedText) ? trimmedText + '.' : trimmedText;\n\n\t}\n\n\t/**\n\t * This is an unfortunate necessity. Some actions – such as\n\t * an input field being focused in an iframe or using the\n\t * keyboard to expand text selection beyond the bounds of\n\t * a slide – can trigger our content to be pushed out of view.\n\t * This scrolling can not be prevented by hiding overflow in\n\t * CSS (we already do) so we have to resort to repeatedly\n\t * checking if the slides have been offset :(\n\t */\n\tfunction setupScrollPrevention() {\n\n\t\tsetInterval( () => {\n\t\t\tif( !scrollView.isActive() && dom.wrapper.scrollTop !== 0 || dom.wrapper.scrollLeft !== 0 ) {\n\t\t\t\tdom.wrapper.scrollTop = 0;\n\t\t\t\tdom.wrapper.scrollLeft = 0;\n\t\t\t}\n\t\t}, 1000 );\n\n\t}\n\n\t/**\n\t * After entering fullscreen we need to force a layout to\n\t * get our presentations to scale correctly. This behavior\n\t * is inconsistent across browsers but a force layout seems\n\t * to normalize it.\n\t */\n\tfunction setupFullscreen() {\n\n\t\tdocument.addEventListener( 'fullscreenchange', onFullscreenChange );\n\t\tdocument.addEventListener( 'webkitfullscreenchange', onFullscreenChange );\n\n\t}\n\n\t/**\n\t * Registers a listener to postMessage events, this makes it\n\t * possible to call all reveal.js API methods from another\n\t * window. For example:\n\t *\n\t * revealWindow.postMessage( JSON.stringify({\n\t *   method: 'slide',\n\t *   args: [ 2 ]\n\t * }), '*' );\n\t */\n\tfunction setupPostMessage() {\n\n\t\tif( config.postMessage ) {\n\t\t\twindow.addEventListener( 'message', onPostMessage, false );\n\t\t}\n\n\t}\n\n\t/**\n\t * Applies the configuration settings from the config\n\t * object. May be called multiple times.\n\t *\n\t * @param {object} options\n\t */\n\tfunction configure( options ) {\n\n\t\tconst oldConfig = { ...config }\n\n\t\t// New config options may be passed when this method\n\t\t// is invoked through the API after initialization\n\t\tif( typeof options === 'object' ) Util.extend( config, options );\n\n\t\t// Abort if reveal.js hasn't finished loading, config\n\t\t// changes will be applied automatically once ready\n\t\tif( Reveal.isReady() ===  false ) return;\n\n\t\tconst numberOfSlides = dom.wrapper.querySelectorAll( SLIDES_SELECTOR ).length;\n\n\t\t// The transition is added as a class on the .reveal element\n\t\tdom.wrapper.classList.remove( oldConfig.transition );\n\t\tdom.wrapper.classList.add( config.transition );\n\n\t\tdom.wrapper.setAttribute( 'data-transition-speed', config.transitionSpeed );\n\t\tdom.wrapper.setAttribute( 'data-background-transition', config.backgroundTransition );\n\n\t\t// Expose our configured slide dimensions as custom props\n\t\tdom.viewport.style.setProperty( '--slide-width', typeof config.width === 'string' ? config.width :  config.width + 'px' );\n\t\tdom.viewport.style.setProperty( '--slide-height', typeof config.height === 'string' ? config.height :  config.height + 'px' );\n\n\t\tif( config.shuffle ) {\n\t\t\tshuffle();\n\t\t}\n\n\t\tUtil.toggleClass( dom.wrapper, 'embedded', config.embedded );\n\t\tUtil.toggleClass( dom.wrapper, 'rtl', config.rtl );\n\t\tUtil.toggleClass( dom.wrapper, 'center', config.center );\n\n\t\t// Exit the paused mode if it was configured off\n\t\tif( config.pause === false ) {\n\t\t\tresume();\n\t\t}\n\n\t\t// Reset all changes made by auto-animations\n\t\tautoAnimate.reset();\n\n\t\t// Remove existing auto-slide controls\n\t\tif( autoSlidePlayer ) {\n\t\t\tautoSlidePlayer.destroy();\n\t\t\tautoSlidePlayer = null;\n\t\t}\n\n\t\t// Generate auto-slide controls if needed\n\t\tif( numberOfSlides > 1 && config.autoSlide && config.autoSlideStoppable ) {\n\t\t\tautoSlidePlayer = new Playback( dom.wrapper, () => {\n\t\t\t\treturn Math.min( Math.max( ( Date.now() - autoSlideStartTime ) / autoSlide, 0 ), 1 );\n\t\t\t} );\n\n\t\t\tautoSlidePlayer.on( 'click', onAutoSlidePlayerClick );\n\t\t\tautoSlidePaused = false;\n\t\t}\n\n\t\t// Add the navigation mode to the DOM so we can adjust styling\n\t\tif( config.navigationMode !== 'default' ) {\n\t\t\tdom.wrapper.setAttribute( 'data-navigation-mode', config.navigationMode );\n\t\t}\n\t\telse {\n\t\t\tdom.wrapper.removeAttribute( 'data-navigation-mode' );\n\t\t}\n\n\t\tnotes.configure( config, oldConfig );\n\t\tfocus.configure( config, oldConfig );\n\t\tpointer.configure( config, oldConfig );\n\t\tcontrols.configure( config, oldConfig );\n\t\tprogress.configure( config, oldConfig );\n\t\tkeyboard.configure( config, oldConfig );\n\t\tfragments.configure( config, oldConfig );\n\t\tslideNumber.configure( config, oldConfig );\n\n\t\tsync();\n\n\t}\n\n\t/**\n\t * Binds all event listeners.\n\t */\n\tfunction addEventListeners() {\n\n\t\teventsAreBound = true;\n\n\t\twindow.addEventListener( 'resize', onWindowResize, false );\n\n\t\tif( config.touch ) touch.bind();\n\t\tif( config.keyboard ) keyboard.bind();\n\t\tif( config.progress ) progress.bind();\n\t\tif( config.respondToHashChanges ) location.bind();\n\t\tcontrols.bind();\n\t\tfocus.bind();\n\n\t\tdom.slides.addEventListener( 'click', onSlidesClicked, false );\n\t\tdom.slides.addEventListener( 'transitionend', onTransitionEnd, false );\n\t\tdom.pauseOverlay.addEventListener( 'click', resume, false );\n\n\t\tif( config.focusBodyOnPageVisibilityChange ) {\n\t\t\tdocument.addEventListener( 'visibilitychange', onPageVisibilityChange, false );\n\t\t}\n\n\t}\n\n\t/**\n\t * Unbinds all event listeners.\n\t */\n\tfunction removeEventListeners() {\n\n\t\teventsAreBound = false;\n\n\t\ttouch.unbind();\n\t\tfocus.unbind();\n\t\tkeyboard.unbind();\n\t\tcontrols.unbind();\n\t\tprogress.unbind();\n\t\tlocation.unbind();\n\n\t\twindow.removeEventListener( 'resize', onWindowResize, false );\n\n\t\tdom.slides.removeEventListener( 'click', onSlidesClicked, false );\n\t\tdom.slides.removeEventListener( 'transitionend', onTransitionEnd, false );\n\t\tdom.pauseOverlay.removeEventListener( 'click', resume, false );\n\n\t}\n\n\t/**\n\t * Uninitializes reveal.js by undoing changes made to the\n\t * DOM and removing all event listeners.\n\t */\n\tfunction destroy() {\n\n\t\tinitialized = false;\n\n\t\t// There's nothing to destroy if this instance hasn't finished\n\t\t// initializing\n\t\tif( ready === false ) return;\n\n\t\tremoveEventListeners();\n\t\tcancelAutoSlide();\n\n\t\t// Destroy controllers\n\t\tnotes.destroy();\n\t\tfocus.destroy();\n\t\toverlay.destroy();\n\t\tplugins.destroy();\n\t\tpointer.destroy();\n\t\tcontrols.destroy();\n\t\tprogress.destroy();\n\t\tbackgrounds.destroy();\n\t\tslideNumber.destroy();\n\t\tjumpToSlide.destroy();\n\n\t\t// Remove event listeners\n\t\tdocument.removeEventListener( 'fullscreenchange', onFullscreenChange );\n\t\tdocument.removeEventListener( 'webkitfullscreenchange', onFullscreenChange );\n\t\tdocument.removeEventListener( 'visibilitychange', onPageVisibilityChange, false );\n\t\twindow.removeEventListener( 'message', onPostMessage, false );\n\t\twindow.removeEventListener( 'load', layout, false );\n\n\t\t// Undo DOM changes\n\t\tif( dom.pauseOverlay ) dom.pauseOverlay.remove();\n\t\tif( dom.statusElement ) dom.statusElement.remove();\n\n\t\tdocument.documentElement.classList.remove( 'reveal-full-page' );\n\n\t\tdom.wrapper.classList.remove( 'ready', 'center', 'has-horizontal-slides', 'has-vertical-slides' );\n\t\tdom.wrapper.removeAttribute( 'data-transition-speed' );\n\t\tdom.wrapper.removeAttribute( 'data-background-transition' );\n\n\t\tdom.viewport.classList.remove( 'reveal-viewport' );\n\t\tdom.viewport.style.removeProperty( '--slide-width' );\n\t\tdom.viewport.style.removeProperty( '--slide-height' );\n\n\t\tdom.slides.style.removeProperty( 'width' );\n\t\tdom.slides.style.removeProperty( 'height' );\n\t\tdom.slides.style.removeProperty( 'zoom' );\n\t\tdom.slides.style.removeProperty( 'left' );\n\t\tdom.slides.style.removeProperty( 'top' );\n\t\tdom.slides.style.removeProperty( 'bottom' );\n\t\tdom.slides.style.removeProperty( 'right' );\n\t\tdom.slides.style.removeProperty( 'transform' );\n\n\t\tArray.from( dom.wrapper.querySelectorAll( SLIDES_SELECTOR ) ).forEach( slide => {\n\t\t\tslide.style.removeProperty( 'display' );\n\t\t\tslide.style.removeProperty( 'top' );\n\t\t\tslide.removeAttribute( 'hidden' );\n\t\t\tslide.removeAttribute( 'aria-hidden' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Adds a listener to one of our custom reveal.js events,\n\t * like slidechanged.\n\t */\n\tfunction on( type, listener, useCapture ) {\n\n\t\trevealElement.addEventListener( type, listener, useCapture );\n\n\t}\n\n\t/**\n\t * Unsubscribes from a reveal.js event.\n\t */\n\tfunction off( type, listener, useCapture ) {\n\n\t\trevealElement.removeEventListener( type, listener, useCapture );\n\n\t}\n\n\t/**\n\t * Applies CSS transforms to the slides container. The container\n\t * is transformed from two separate sources: layout and the overview\n\t * mode.\n\t *\n\t * @param {object} transforms\n\t */\n\tfunction transformSlides( transforms ) {\n\n\t\t// Pick up new transforms from arguments\n\t\tif( typeof transforms.layout === 'string' ) slidesTransform.layout = transforms.layout;\n\t\tif( typeof transforms.overview === 'string' ) slidesTransform.overview = transforms.overview;\n\n\t\t// Apply the transforms to the slides container\n\t\tif( slidesTransform.layout ) {\n\t\t\tUtil.transformElement( dom.slides, slidesTransform.layout + ' ' + slidesTransform.overview );\n\t\t}\n\t\telse {\n\t\t\tUtil.transformElement( dom.slides, slidesTransform.overview );\n\t\t}\n\n\t}\n\n\t/**\n\t * Dispatches an event of the specified type from the\n\t * reveal DOM element.\n\t */\n\tfunction dispatchEvent({ target=dom.wrapper, type, data, bubbles=true }) {\n\n\t\tlet event = document.createEvent( 'HTMLEvents', 1, 2 );\n\t\tevent.initEvent( type, bubbles, true );\n\t\tUtil.extend( event, data );\n\t\ttarget.dispatchEvent( event );\n\n\t\tif( target === dom.wrapper ) {\n\t\t\t// If we're in an iframe, post each reveal.js event to the\n\t\t\t// parent window. Used by the notes plugin\n\t\t\tdispatchPostMessage( type );\n\t\t}\n\n\t\treturn event;\n\n\t}\n\n\t/**\n\t * Dispatches a slidechanged event.\n\t *\n\t * @param {string} origin Used to identify multiplex clients\n\t */\n\tfunction dispatchSlideChanged( origin ) {\n\n\t\tdispatchEvent({\n\t\t\ttype: 'slidechanged',\n\t\t\tdata: {\n\t\t\t\tindexh,\n\t\t\t\tindexv,\n\t\t\t\tpreviousSlide,\n\t\t\t\tcurrentSlide,\n\t\t\t\torigin\n\t\t\t}\n\t\t});\n\n\t}\n\n\t/**\n\t * Dispatched a postMessage of the given type from our window.\n\t */\n\tfunction dispatchPostMessage( type, data ) {\n\n\t\tif( config.postMessageEvents && window.parent !== window.self ) {\n\t\t\tlet message = {\n\t\t\t\tnamespace: 'reveal',\n\t\t\t\teventName: type,\n\t\t\t\tstate: getState()\n\t\t\t};\n\n\t\t\tUtil.extend( message, data );\n\n\t\t\twindow.parent.postMessage( JSON.stringify( message ), '*' );\n\t\t}\n\n\t}\n\n\t/**\n\t * Applies JavaScript-controlled layout rules to the\n\t * presentation.\n\t */\n\tfunction layout() {\n\n\t\tif( dom.wrapper && !printView.isActive() ) {\n\n\t\t\tconst viewportWidth = dom.viewport.offsetWidth;\n\t\t\tconst viewportHeight = dom.viewport.offsetHeight;\n\n\t\t\tif( !config.disableLayout ) {\n\n\t\t\t\t// On some mobile devices '100vh' is taller than the visible\n\t\t\t\t// viewport which leads to part of the presentation being\n\t\t\t\t// cut off. To work around this we define our own '--vh' custom\n\t\t\t\t// property where 100x adds up to the correct height.\n\t\t\t\t//\n\t\t\t\t// https://css-tricks.com/the-trick-to-viewport-units-on-mobile/\n\t\t\t\tif( Device.isMobile && !config.embedded ) {\n\t\t\t\t\tdocument.documentElement.style.setProperty( '--vh', ( window.innerHeight * 0.01 ) + 'px' );\n\t\t\t\t}\n\n\t\t\t\tconst size = scrollView.isActive() ?\n\t\t\t\t\t\t\t getComputedSlideSize( viewportWidth, viewportHeight ) :\n\t\t\t\t\t\t\t getComputedSlideSize();\n\n\t\t\t\tconst oldScale = scale;\n\n\t\t\t\t// Layout the contents of the slides\n\t\t\t\tlayoutSlideContents( config.width, config.height );\n\n\t\t\t\tdom.slides.style.width = size.width + 'px';\n\t\t\t\tdom.slides.style.height = size.height + 'px';\n\n\t\t\t\t// Determine scale of content to fit within available space\n\t\t\t\tscale = Math.min( size.presentationWidth / size.width, size.presentationHeight / size.height );\n\n\t\t\t\t// Respect max/min scale settings\n\t\t\t\tscale = Math.max( scale, config.minScale );\n\t\t\t\tscale = Math.min( scale, config.maxScale );\n\n\t\t\t\t// Don't apply any scaling styles if scale is 1 or we're\n\t\t\t\t// in the scroll view\n\t\t\t\tif( scale === 1 || scrollView.isActive() ) {\n\t\t\t\t\tdom.slides.style.zoom = '';\n\t\t\t\t\tdom.slides.style.left = '';\n\t\t\t\t\tdom.slides.style.top = '';\n\t\t\t\t\tdom.slides.style.bottom = '';\n\t\t\t\t\tdom.slides.style.right = '';\n\t\t\t\t\ttransformSlides( { layout: '' } );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdom.slides.style.zoom = '';\n\t\t\t\t\tdom.slides.style.left = '50%';\n\t\t\t\t\tdom.slides.style.top = '50%';\n\t\t\t\t\tdom.slides.style.bottom = 'auto';\n\t\t\t\t\tdom.slides.style.right = 'auto';\n\t\t\t\t\ttransformSlides( { layout: 'translate(-50%, -50%) scale('+ scale +')' } );\n\t\t\t\t}\n\n\t\t\t\t// Select all slides, vertical and horizontal\n\t\t\t\tconst slides = Array.from( dom.wrapper.querySelectorAll( SLIDES_SELECTOR ) );\n\n\t\t\t\tfor( let i = 0, len = slides.length; i < len; i++ ) {\n\t\t\t\t\tconst slide = slides[ i ];\n\n\t\t\t\t\t// Don't bother updating invisible slides\n\t\t\t\t\tif( slide.style.display === 'none' ) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif( ( config.center || slide.classList.contains( 'center' ) ) ) {\n\t\t\t\t\t\t// Vertical stacks are not centred since their section\n\t\t\t\t\t\t// children will be\n\t\t\t\t\t\tif( slide.classList.contains( 'stack' ) ) {\n\t\t\t\t\t\t\tslide.style.top = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tslide.style.top = Math.max( ( size.height - slide.scrollHeight ) / 2, 0 ) + 'px';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tslide.style.top = '';\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif( oldScale !== scale ) {\n\t\t\t\t\tdispatchEvent({\n\t\t\t\t\t\ttype: 'resize',\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\toldScale,\n\t\t\t\t\t\t\tscale,\n\t\t\t\t\t\t\tsize\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcheckResponsiveScrollView();\n\n\t\t\tdom.viewport.style.setProperty( '--slide-scale', scale );\n\t\t\tdom.viewport.style.setProperty( '--viewport-width', viewportWidth + 'px' );\n\t\t\tdom.viewport.style.setProperty( '--viewport-height', viewportHeight + 'px' );\n\n\t\t\tscrollView.layout();\n\n\t\t\tprogress.update();\n\t\t\tbackgrounds.updateParallax();\n\n\t\t\tif( overview.isActive() ) {\n\t\t\t\toverview.update();\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Applies layout logic to the contents of all slides in\n\t * the presentation.\n\t *\n\t * @param {string|number} width\n\t * @param {string|number} height\n\t */\n\tfunction layoutSlideContents( width, height ) {\n\t\t// Handle sizing of elements with the 'r-stretch' class\n\t\tUtil.queryAll( dom.slides, 'section > .stretch, section > .r-stretch' ).forEach( element => {\n\n\t\t\t// Determine how much vertical space we can use\n\t\t\tlet remainingHeight = Util.getRemainingHeight( element, height );\n\n\t\t\t// Consider the aspect ratio of media elements\n\t\t\tif( /(img|video)/gi.test( element.nodeName ) ) {\n\t\t\t\tconst nw = element.naturalWidth || element.videoWidth,\n\t\t\t\t\t  nh = element.naturalHeight || element.videoHeight;\n\n\t\t\t\tconst es = Math.min( width / nw, remainingHeight / nh );\n\n\t\t\t\telement.style.width = ( nw * es ) + 'px';\n\t\t\t\telement.style.height = ( nh * es ) + 'px';\n\n\t\t\t}\n\t\t\telse {\n\t\t\t\telement.style.width = width + 'px';\n\t\t\t\telement.style.height = remainingHeight + 'px';\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Responsively activates the scroll mode when we reach the configured\n\t * activation width.\n\t */\n\tfunction checkResponsiveScrollView() {\n\n\t\t// Only proceed if...\n\t\t// 1. The DOM is ready\n\t\t// 2. Layouts aren't disabled via config\n\t\t// 3. We're not currently printing\n\t\t// 4. There is a scrollActivationWidth set\n\t\t// 5. The deck isn't configured to always use the scroll view\n\t\tif(\n\t\t\tdom.wrapper &&\n\t\t\t!config.disableLayout &&\n\t\t\t!printView.isActive() &&\n\t\t\ttypeof config.scrollActivationWidth === 'number' &&\n\t\t\tconfig.view !== 'scroll'\n\t\t) {\n\t\t\tconst size = getComputedSlideSize();\n\n\t\t\tif( size.presentationWidth > 0 && size.presentationWidth <= config.scrollActivationWidth ) {\n\t\t\t\tif( !scrollView.isActive() ) {\n\t\t\t\t\tbackgrounds.create();\n\t\t\t\t\tscrollView.activate()\n\t\t\t\t};\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif( scrollView.isActive() ) scrollView.deactivate();\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Calculates the computed pixel size of our slides. These\n\t * values are based on the width and height configuration\n\t * options.\n\t *\n\t * @param {number} [presentationWidth=dom.wrapper.offsetWidth]\n\t * @param {number} [presentationHeight=dom.wrapper.offsetHeight]\n\t */\n\tfunction getComputedSlideSize( presentationWidth, presentationHeight ) {\n\n\t\tlet width = config.width;\n\t\tlet height = config.height;\n\n\t\tif( config.disableLayout ) {\n\t\t\twidth = dom.slides.offsetWidth;\n\t\t\theight = dom.slides.offsetHeight;\n\t\t}\n\n\t\tconst size = {\n\t\t\t// Slide size\n\t\t\twidth: width,\n\t\t\theight: height,\n\n\t\t\t// Presentation size\n\t\t\tpresentationWidth: presentationWidth || dom.wrapper.offsetWidth,\n\t\t\tpresentationHeight: presentationHeight || dom.wrapper.offsetHeight\n\t\t};\n\n\t\t// Reduce available space by margin\n\t\tsize.presentationWidth -= ( size.presentationWidth * config.margin );\n\t\tsize.presentationHeight -= ( size.presentationHeight * config.margin );\n\n\t\t// Slide width may be a percentage of available width\n\t\tif( typeof size.width === 'string' && /%$/.test( size.width ) ) {\n\t\t\tsize.width = parseInt( size.width, 10 ) / 100 * size.presentationWidth;\n\t\t}\n\n\t\t// Slide height may be a percentage of available height\n\t\tif( typeof size.height === 'string' && /%$/.test( size.height ) ) {\n\t\t\tsize.height = parseInt( size.height, 10 ) / 100 * size.presentationHeight;\n\t\t}\n\n\t\treturn size;\n\n\t}\n\n\t/**\n\t * Stores the vertical index of a stack so that the same\n\t * vertical slide can be selected when navigating to and\n\t * from the stack.\n\t *\n\t * @param {HTMLElement} stack The vertical stack element\n\t * @param {string|number} [v=0] Index to memorize\n\t */\n\tfunction setPreviousVerticalIndex( stack, v ) {\n\n\t\tif( typeof stack === 'object' && typeof stack.setAttribute === 'function' ) {\n\t\t\tstack.setAttribute( 'data-previous-indexv', v || 0 );\n\t\t}\n\n\t}\n\n\t/**\n\t * Retrieves the vertical index which was stored using\n\t * #setPreviousVerticalIndex() or 0 if no previous index\n\t * exists.\n\t *\n\t * @param {HTMLElement} stack The vertical stack element\n\t */\n\tfunction getPreviousVerticalIndex( stack ) {\n\n\t\tif( typeof stack === 'object' && typeof stack.setAttribute === 'function' && stack.classList.contains( 'stack' ) ) {\n\t\t\t// Prefer manually defined start-indexv\n\t\t\tconst attributeName = stack.hasAttribute( 'data-start-indexv' ) ? 'data-start-indexv' : 'data-previous-indexv';\n\n\t\t\treturn parseInt( stack.getAttribute( attributeName ) || 0, 10 );\n\t\t}\n\n\t\treturn 0;\n\n\t}\n\n\t/**\n\t * Checks if the current or specified slide is vertical\n\t * (nested within another slide).\n\t *\n\t * @param {HTMLElement} [slide=currentSlide] The slide to check\n\t * orientation of\n\t * @return {Boolean}\n\t */\n\tfunction isVerticalSlide( slide = currentSlide ) {\n\n\t\treturn slide && slide.parentNode && !!slide.parentNode.nodeName.match( /section/i );\n\n\t}\n\n\t/**\n\t * Checks if the current or specified slide is a stack containing\n\t * vertical slides.\n\t *\n\t * @param {HTMLElement} [slide=currentSlide]\n\t * @return {Boolean}\n\t */\n\tfunction isVerticalStack( slide = currentSlide ) {\n\n\t\treturn slide.classList.contains( '.stack' ) || slide.querySelector( 'section' ) !== null;\n\n\t}\n\n\t/**\n\t * Returns true if we're on the last slide in the current\n\t * vertical stack.\n\t */\n\tfunction isLastVerticalSlide() {\n\n\t\tif( currentSlide && isVerticalSlide( currentSlide ) ) {\n\t\t\t// Does this slide have a next sibling?\n\t\t\tif( currentSlide.nextElementSibling ) return false;\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Returns true if we're currently on the first slide in\n\t * the presentation.\n\t */\n\tfunction isFirstSlide() {\n\n\t\treturn indexh === 0 && indexv === 0;\n\n\t}\n\n\t/**\n\t * Returns true if we're currently on the last slide in\n\t * the presentation. If the last slide is a stack, we only\n\t * consider this the last slide if it's at the end of the\n\t * stack.\n\t */\n\tfunction isLastSlide() {\n\n\t\tif( currentSlide ) {\n\t\t\t// Does this slide have a next sibling?\n\t\t\tif( currentSlide.nextElementSibling ) return false;\n\n\t\t\t// If it's vertical, does its parent have a next sibling?\n\t\t\tif( isVerticalSlide( currentSlide ) && currentSlide.parentNode.nextElementSibling ) return false;\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Enters the paused mode which fades everything on screen to\n\t * black.\n\t */\n\tfunction pause() {\n\n\t\tif( config.pause ) {\n\t\t\tconst wasPaused = dom.wrapper.classList.contains( 'paused' );\n\n\t\t\tcancelAutoSlide();\n\t\t\tdom.wrapper.classList.add( 'paused' );\n\n\t\t\tif( wasPaused === false ) {\n\t\t\t\tdispatchEvent({ type: 'paused' });\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Exits from the paused mode.\n\t */\n\tfunction resume() {\n\n\t\tconst wasPaused = dom.wrapper.classList.contains( 'paused' );\n\t\tdom.wrapper.classList.remove( 'paused' );\n\n\t\tcueAutoSlide();\n\n\t\tif( wasPaused ) {\n\t\t\tdispatchEvent({ type: 'resumed' });\n\t\t}\n\n\t}\n\n\t/**\n\t * Toggles the paused mode on and off.\n\t */\n\tfunction togglePause( override ) {\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? pause() : resume();\n\t\t}\n\t\telse {\n\t\t\tisPaused() ? resume() : pause();\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if we are currently in the paused mode.\n\t *\n\t * @return {Boolean}\n\t */\n\tfunction isPaused() {\n\n\t\treturn dom.wrapper.classList.contains( 'paused' );\n\n\t}\n\n\t/**\n\t * Toggles visibility of the jump-to-slide UI.\n\t */\n\tfunction toggleJumpToSlide( override ) {\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? jumpToSlide.show() : jumpToSlide.hide();\n\t\t}\n\t\telse {\n\t\t\tjumpToSlide.isVisible() ? jumpToSlide.hide() : jumpToSlide.show();\n\t\t}\n\n\t}\n\n\t/**\n\t * Toggles the auto slide mode on and off.\n\t *\n\t * @param {Boolean} [override] Flag which sets the desired state.\n\t * True means autoplay starts, false means it stops.\n\t */\n\n\tfunction toggleAutoSlide( override ) {\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? resumeAutoSlide() : pauseAutoSlide();\n\t\t}\n\n\t\telse {\n\t\t\tautoSlidePaused ? resumeAutoSlide() : pauseAutoSlide();\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if the auto slide mode is currently on.\n\t *\n\t * @return {Boolean}\n\t */\n\tfunction isAutoSliding() {\n\n\t\treturn !!( autoSlide && !autoSlidePaused );\n\n\t}\n\n\t/**\n\t * Steps from the current point in the presentation to the\n\t * slide which matches the specified horizontal and vertical\n\t * indices.\n\t *\n\t * @param {number} [h=indexh] Horizontal index of the target slide\n\t * @param {number} [v=indexv] Vertical index of the target slide\n\t * @param {number} [f] Index of a fragment within the\n\t * target slide to activate\n\t * @param {number} [origin] Origin for use in multimaster environments\n\t */\n\tfunction slide( h, v, f, origin ) {\n\n\t\t// Dispatch an event before the slide\n\t\tconst slidechange = dispatchEvent({\n\t\t\ttype: 'beforeslidechange',\n\t\t\tdata: {\n\t\t\t\tindexh: h === undefined ? indexh : h,\n\t\t\t\tindexv: v === undefined ? indexv : v,\n\t\t\t\torigin\n\t\t\t}\n\t\t});\n\n\t\t// Abort if this slide change was prevented by an event listener\n\t\tif( slidechange.defaultPrevented ) return;\n\n\t\t// Remember where we were at before\n\t\tpreviousSlide = currentSlide;\n\n\t\t// Query all horizontal slides in the deck\n\t\tconst horizontalSlides = dom.wrapper.querySelectorAll( HORIZONTAL_SLIDES_SELECTOR );\n\n\t\t// If we're in scroll mode, we scroll the target slide into view\n\t\t// instead of running our standard slide transition\n\t\tif( scrollView.isActive() ) {\n\t\t\tconst scrollToSlide = scrollView.getSlideByIndices( h, v );\n\t\t\tif( scrollToSlide ) scrollView.scrollToSlide( scrollToSlide );\n\t\t\treturn;\n\t\t}\n\n\t\t// Abort if there are no slides\n\t\tif( horizontalSlides.length === 0 ) return;\n\n\t\t// If no vertical index is specified and the upcoming slide is a\n\t\t// stack, resume at its previous vertical index\n\t\tif( v === undefined && !overview.isActive() ) {\n\t\t\tv = getPreviousVerticalIndex( horizontalSlides[ h ] );\n\t\t}\n\n\t\t// If we were on a vertical stack, remember what vertical index\n\t\t// it was on so we can resume at the same position when returning\n\t\tif( previousSlide && previousSlide.parentNode && previousSlide.parentNode.classList.contains( 'stack' ) ) {\n\t\t\tsetPreviousVerticalIndex( previousSlide.parentNode, indexv );\n\t\t}\n\n\t\t// Remember the state before this slide\n\t\tconst stateBefore = state.concat();\n\n\t\t// Reset the state array\n\t\tstate.length = 0;\n\n\t\tlet indexhBefore = indexh || 0,\n\t\t\tindexvBefore = indexv || 0;\n\n\t\t// Activate and transition to the new slide\n\t\tindexh = updateSlides( HORIZONTAL_SLIDES_SELECTOR, h === undefined ? indexh : h );\n\t\tindexv = updateSlides( VERTICAL_SLIDES_SELECTOR, v === undefined ? indexv : v );\n\n\t\t// Dispatch an event if the slide changed\n\t\tlet slideChanged = ( indexh !== indexhBefore || indexv !== indexvBefore );\n\n\t\t// Ensure that the previous slide is never the same as the current\n\t\tif( !slideChanged ) previousSlide = null;\n\n\t\t// Find the current horizontal slide and any possible vertical slides\n\t\t// within it\n\t\tlet currentHorizontalSlide = horizontalSlides[ indexh ],\n\t\t\tcurrentVerticalSlides = currentHorizontalSlide.querySelectorAll( 'section' );\n\n\t\t// Indicate when we're on a vertical slide\n\t\trevealElement.classList.toggle( 'is-vertical-slide', currentVerticalSlides.length > 1 );\n\n\t\t// Store references to the previous and current slides\n\t\tcurrentSlide = currentVerticalSlides[ indexv ] || currentHorizontalSlide;\n\n\t\tlet autoAnimateTransition = false;\n\n\t\t// Detect if we're moving between two auto-animated slides\n\t\tif( slideChanged && previousSlide && currentSlide && !overview.isActive() ) {\n\t\t\ttransition = 'running';\n\n\t\t\tautoAnimateTransition = shouldAutoAnimateBetween( previousSlide, currentSlide, indexhBefore, indexvBefore );\n\n\t\t\t// If this is an auto-animated transition, we disable the\n\t\t\t// regular slide transition\n\t\t\t//\n\t\t\t// Note 20-03-2020:\n\t\t\t// This needs to happen before we update slide visibility,\n\t\t\t// otherwise transitions will still run in Safari.\n\t\t\tif( autoAnimateTransition ) {\n\t\t\t\tdom.slides.classList.add( 'disable-slide-transitions' )\n\t\t\t}\n\t\t}\n\n\t\t// Update the visibility of slides now that the indices have changed\n\t\tupdateSlidesVisibility();\n\n\t\tlayout();\n\n\t\t// Update the overview if it's currently active\n\t\tif( overview.isActive() ) {\n\t\t\toverview.update();\n\t\t}\n\n\t\t// Show fragment, if specified\n\t\tif( typeof f !== 'undefined' ) {\n\t\t\tfragments.goto( f );\n\t\t}\n\n\t\t// Solves an edge case where the previous slide maintains the\n\t\t// 'present' class when navigating between adjacent vertical\n\t\t// stacks\n\t\tif( previousSlide && previousSlide !== currentSlide ) {\n\t\t\tpreviousSlide.classList.remove( 'present' );\n\t\t\tpreviousSlide.setAttribute( 'aria-hidden', 'true' );\n\n\t\t\t// Reset all slides upon navigate to home\n\t\t\tif( isFirstSlide() ) {\n\t\t\t\t// Launch async task\n\t\t\t\tsetTimeout( () => {\n\t\t\t\t\tgetVerticalStacks().forEach( slide => {\n\t\t\t\t\t\tsetPreviousVerticalIndex( slide, 0 );\n\t\t\t\t\t} );\n\t\t\t\t}, 0 );\n\t\t\t}\n\t\t}\n\n\t\t// Apply the new state\n\t\tstateLoop: for( let i = 0, len = state.length; i < len; i++ ) {\n\t\t\t// Check if this state existed on the previous slide. If it\n\t\t\t// did, we will avoid adding it repeatedly\n\t\t\tfor( let j = 0; j < stateBefore.length; j++ ) {\n\t\t\t\tif( stateBefore[j] === state[i] ) {\n\t\t\t\t\tstateBefore.splice( j, 1 );\n\t\t\t\t\tcontinue stateLoop;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdom.viewport.classList.add( state[i] );\n\n\t\t\t// Dispatch custom event matching the state's name\n\t\t\tdispatchEvent({ type: state[i] });\n\t\t}\n\n\t\t// Clean up the remains of the previous state\n\t\twhile( stateBefore.length ) {\n\t\t\tdom.viewport.classList.remove( stateBefore.pop() );\n\t\t}\n\n\t\tif( slideChanged ) {\n\t\t\tdispatchSlideChanged( origin );\n\t\t}\n\n\t\t// Handle embedded content\n\t\tif( slideChanged || !previousSlide ) {\n\t\t\tslideContent.stopEmbeddedContent( previousSlide );\n\t\t\tslideContent.startEmbeddedContent( currentSlide );\n\t\t}\n\n\t\t// Announce the current slide contents to screen readers\n\t\t// Use animation frame to prevent getComputedStyle in getStatusText\n\t\t// from triggering layout mid-frame\n\t\trequestAnimationFrame( () => {\n\t\t\tannounceStatus( getStatusText( currentSlide ) );\n\t\t});\n\n\t\tprogress.update();\n\t\tcontrols.update();\n\t\tnotes.update();\n\t\tbackgrounds.update();\n\t\tbackgrounds.updateParallax();\n\t\tslideNumber.update();\n\t\tfragments.update();\n\n\t\t// Update the URL hash\n\t\tlocation.writeURL();\n\n\t\tcueAutoSlide();\n\n\t\t// Auto-animation\n\t\tif( autoAnimateTransition ) {\n\n\t\t\tsetTimeout( () => {\n\t\t\t\tdom.slides.classList.remove( 'disable-slide-transitions' );\n\t\t\t}, 0 );\n\n\t\t\tif( config.autoAnimate ) {\n\t\t\t\t// Run the auto-animation between our slides\n\t\t\t\tautoAnimate.run( previousSlide, currentSlide );\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks whether or not an auto-animation should take place between\n\t * the two given slides.\n\t *\n\t * @param {HTMLElement} fromSlide\n\t * @param {HTMLElement} toSlide\n\t * @param {number} indexhBefore\n\t * @param {number} indexvBefore\n\t *\n\t * @returns {boolean}\n\t */\n\tfunction shouldAutoAnimateBetween( fromSlide, toSlide, indexhBefore, indexvBefore ) {\n\n\t\treturn \tfromSlide.hasAttribute( 'data-auto-animate' ) && toSlide.hasAttribute( 'data-auto-animate' ) &&\n\t\t\t\tfromSlide.getAttribute( 'data-auto-animate-id' ) === toSlide.getAttribute( 'data-auto-animate-id' ) &&\n\t\t\t\t!( ( indexh > indexhBefore || indexv > indexvBefore ) ? toSlide : fromSlide ).hasAttribute( 'data-auto-animate-restart' );\n\n\t}\n\n\t/**\n\t * Called anytime a new slide should be activated while in the scroll\n\t * view. The active slide is the page that occupies the most space in\n\t * the scrollable viewport.\n\t *\n\t * @param {number} pageIndex\n\t * @param {HTMLElement} slideElement\n\t */\n\tfunction setCurrentScrollPage( slideElement, h, v ) {\n\n\t\tlet indexhBefore = indexh || 0;\n\n\t\tindexh = h;\n\t\tindexv = v;\n\n\t\tconst slideChanged = currentSlide !== slideElement;\n\n\t\tpreviousSlide = currentSlide;\n\t\tcurrentSlide = slideElement;\n\n\t\tif( currentSlide && previousSlide ) {\n\t\t\tif( config.autoAnimate && shouldAutoAnimateBetween( previousSlide, currentSlide, indexhBefore, indexv ) ) {\n\t\t\t\t// Run the auto-animation between our slides\n\t\t\t\tautoAnimate.run( previousSlide, currentSlide );\n\t\t\t}\n\t\t}\n\n\t\t// Start or stop embedded content like videos and iframes\n\t\tif( slideChanged ) {\n\t\t\tif( previousSlide ) {\n\t\t\t\tslideContent.stopEmbeddedContent( previousSlide );\n\t\t\t\tslideContent.stopEmbeddedContent( previousSlide.slideBackgroundElement );\n\t\t\t}\n\n\t\t\tslideContent.startEmbeddedContent( currentSlide );\n\t\t\tslideContent.startEmbeddedContent( currentSlide.slideBackgroundElement );\n\t\t}\n\n\t\trequestAnimationFrame( () => {\n\t\t\tannounceStatus( getStatusText( currentSlide ) );\n\t\t});\n\n\t\tdispatchSlideChanged();\n\n\t}\n\n\t/**\n\t * Syncs the presentation with the current DOM. Useful\n\t * when new slides or control elements are added or when\n\t * the configuration has changed.\n\t */\n\tfunction sync() {\n\n\t\t// Subscribe to input\n\t\tremoveEventListeners();\n\t\taddEventListeners();\n\n\t\t// Force a layout to make sure the current config is accounted for\n\t\tlayout();\n\n\t\t// Reflect the current autoSlide value\n\t\tautoSlide = config.autoSlide;\n\n\t\t// Start auto-sliding if it's enabled\n\t\tcueAutoSlide();\n\n\t\t// Re-create all slide backgrounds\n\t\tbackgrounds.create();\n\n\t\t// Write the current hash to the URL\n\t\tlocation.writeURL();\n\n\t\tif( config.sortFragmentsOnSync === true ) {\n\t\t\tfragments.sortAll();\n\t\t}\n\n\t\tcontrols.update();\n\t\tprogress.update();\n\n\t\tupdateSlidesVisibility();\n\n\t\tnotes.update();\n\t\tnotes.updateVisibility();\n\t\toverlay.update();\n\t\tbackgrounds.update( true );\n\t\tslideNumber.update();\n\t\tslideContent.formatEmbeddedContent();\n\n\t\t// Start or stop embedded content depending on global config\n\t\tif( config.autoPlayMedia === false ) {\n\t\t\tslideContent.stopEmbeddedContent( currentSlide, { unloadIframes: false } );\n\t\t}\n\t\telse {\n\t\t\tslideContent.startEmbeddedContent( currentSlide );\n\t\t}\n\n\t\tif( overview.isActive() ) {\n\t\t\toverview.layout();\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates reveal.js to keep in sync with new slide attributes. For\n\t * example, if you add a new `data-background-image` you can call\n\t * this to have reveal.js render the new background image.\n\t *\n\t * Similar to #sync() but more efficient when you only need to\n\t * refresh a specific slide.\n\t *\n\t * @param {HTMLElement} slide\n\t */\n\tfunction syncSlide( slide = currentSlide ) {\n\n\t\tbackgrounds.sync( slide );\n\t\tfragments.sync( slide );\n\n\t\tslideContent.load( slide );\n\n\t\tbackgrounds.update();\n\t\tnotes.update();\n\n\t}\n\n\t/**\n\t * Resets all vertical slides so that only the first\n\t * is visible.\n\t */\n\tfunction resetVerticalSlides() {\n\n\t\tgetHorizontalSlides().forEach( horizontalSlide => {\n\n\t\t\tUtil.queryAll( horizontalSlide, 'section' ).forEach( ( verticalSlide, y ) => {\n\n\t\t\t\tif( y > 0 ) {\n\t\t\t\t\tverticalSlide.classList.remove( 'present' );\n\t\t\t\t\tverticalSlide.classList.remove( 'past' );\n\t\t\t\t\tverticalSlide.classList.add( 'future' );\n\t\t\t\t\tverticalSlide.setAttribute( 'aria-hidden', 'true' );\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Randomly shuffles all slides in the deck.\n\t */\n\tfunction shuffle( slides = getHorizontalSlides() ) {\n\n\t\tslides.forEach( ( slide, i ) => {\n\n\t\t\t// Insert the slide next to a randomly picked sibling slide\n\t\t\t// slide. This may cause the slide to insert before itself,\n\t\t\t// but that's not an issue.\n\t\t\tlet beforeSlide = slides[ Math.floor( Math.random() * slides.length ) ];\n\t\t\tif( beforeSlide.parentNode === slide.parentNode ) {\n\t\t\t\tslide.parentNode.insertBefore( slide, beforeSlide );\n\t\t\t}\n\n\t\t\t// Randomize the order of vertical slides (if there are any)\n\t\t\tlet verticalSlides = slide.querySelectorAll( 'section' );\n\t\t\tif( verticalSlides.length ) {\n\t\t\t\tshuffle( verticalSlides );\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Updates one dimension of slides by showing the slide\n\t * with the specified index.\n\t *\n\t * @param {string} selector A CSS selector that will fetch\n\t * the group of slides we are working with\n\t * @param {number} index The index of the slide that should be\n\t * shown\n\t *\n\t * @return {number} The index of the slide that is now shown,\n\t * might differ from the passed in index if it was out of\n\t * bounds.\n\t */\n\tfunction updateSlides( selector, index ) {\n\n\t\t// Select all slides and convert the NodeList result to\n\t\t// an array\n\t\tlet slides = Util.queryAll( dom.wrapper, selector ),\n\t\t\tslidesLength = slides.length;\n\n\t\tlet printMode = scrollView.isActive() || printView.isActive();\n\t\tlet loopedForwards = false;\n\t\tlet loopedBackwards = false;\n\n\t\tif( slidesLength ) {\n\n\t\t\t// Should the index loop?\n\t\t\tif( config.loop ) {\n\t\t\t\tif( index >= slidesLength ) loopedForwards = true;\n\n\t\t\t\tindex %= slidesLength;\n\n\t\t\t\tif( index < 0 ) {\n\t\t\t\t\tindex = slidesLength + index;\n\t\t\t\t\tloopedBackwards = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Enforce max and minimum index bounds\n\t\t\tindex = Math.max( Math.min( index, slidesLength - 1 ), 0 );\n\n\t\t\tfor( let i = 0; i < slidesLength; i++ ) {\n\t\t\t\tlet element = slides[i];\n\n\t\t\t\tlet reverse = config.rtl && !isVerticalSlide( element );\n\n\t\t\t\t// Avoid .remove() with multiple args for IE11 support\n\t\t\t\telement.classList.remove( 'past' );\n\t\t\t\telement.classList.remove( 'present' );\n\t\t\t\telement.classList.remove( 'future' );\n\n\t\t\t\t// http://www.w3.org/html/wg/drafts/html/master/editing.html#the-hidden-attribute\n\t\t\t\telement.setAttribute( 'hidden', '' );\n\t\t\t\telement.setAttribute( 'aria-hidden', 'true' );\n\n\t\t\t\t// If this element contains vertical slides\n\t\t\t\tif( element.querySelector( 'section' ) ) {\n\t\t\t\t\telement.classList.add( 'stack' );\n\t\t\t\t}\n\n\t\t\t\t// If we're printing static slides, all slides are \"present\"\n\t\t\t\tif( printMode ) {\n\t\t\t\t\telement.classList.add( 'present' );\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif( i < index ) {\n\t\t\t\t\t// Any element previous to index is given the 'past' class\n\t\t\t\t\telement.classList.add( reverse ? 'future' : 'past' );\n\n\t\t\t\t\tif( config.fragments ) {\n\t\t\t\t\t\t// Show all fragments in prior slides\n\t\t\t\t\t\tshowFragmentsIn( element );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if( i > index ) {\n\t\t\t\t\t// Any element subsequent to index is given the 'future' class\n\t\t\t\t\telement.classList.add( reverse ? 'past' : 'future' );\n\n\t\t\t\t\tif( config.fragments ) {\n\t\t\t\t\t\t// Hide all fragments in future slides\n\t\t\t\t\t\thideFragmentsIn( element );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Update the visibility of fragments when a presentation loops\n\t\t\t\t// in either direction\n\t\t\t\telse if( i === index && config.fragments ) {\n\t\t\t\t\tif( loopedForwards ) {\n\t\t\t\t\t\thideFragmentsIn( element );\n\t\t\t\t\t}\n\t\t\t\t\telse if( loopedBackwards ) {\n\t\t\t\t\t\tshowFragmentsIn( element );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet slide = slides[index];\n\t\t\tlet wasPresent = slide.classList.contains( 'present' );\n\n\t\t\t// Mark the current slide as present\n\t\t\tslide.classList.add( 'present' );\n\t\t\tslide.removeAttribute( 'hidden' );\n\t\t\tslide.removeAttribute( 'aria-hidden' );\n\n\t\t\tif( !wasPresent ) {\n\t\t\t\t// Dispatch an event indicating the slide is now visible\n\t\t\t\tdispatchEvent({\n\t\t\t\t\ttarget: slide,\n\t\t\t\t\ttype: 'visible',\n\t\t\t\t\tbubbles: false\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// If this slide has a state associated with it, add it\n\t\t\t// onto the current state of the deck\n\t\t\tlet slideState = slide.getAttribute( 'data-state' );\n\t\t\tif( slideState ) {\n\t\t\t\tstate = state.concat( slideState.split( ' ' ) );\n\t\t\t}\n\n\t\t}\n\t\telse {\n\t\t\t// Since there are no slides we can't be anywhere beyond the\n\t\t\t// zeroth index\n\t\t\tindex = 0;\n\t\t}\n\n\t\treturn index;\n\n\t}\n\n\t/**\n\t * Shows all fragment elements within the given container.\n\t */\n\tfunction showFragmentsIn( container ) {\n\n\t\tUtil.queryAll( container, '.fragment' ).forEach( fragment => {\n\t\t\tfragment.classList.add( 'visible' );\n\t\t\tfragment.classList.remove( 'current-fragment' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Hides all fragment elements within the given container.\n\t */\n\tfunction hideFragmentsIn( container ) {\n\n\t\tUtil.queryAll( container, '.fragment.visible' ).forEach( fragment => {\n\t\t\tfragment.classList.remove( 'visible', 'current-fragment' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Optimization method; hide all slides that are far away\n\t * from the present slide.\n\t */\n\tfunction updateSlidesVisibility() {\n\n\t\t// Select all slides and convert the NodeList result to\n\t\t// an array\n\t\tlet horizontalSlides = getHorizontalSlides(),\n\t\t\thorizontalSlidesLength = horizontalSlides.length,\n\t\t\tdistanceX,\n\t\t\tdistanceY;\n\n\t\tif( horizontalSlidesLength && typeof indexh !== 'undefined' ) {\n\n\t\t\tconst isOverview = overview.isActive();\n\n\t\t\t// The number of steps away from the present slide that will\n\t\t\t// be visible\n\t\t\tlet viewDistance = isOverview ? 10 : config.viewDistance;\n\n\t\t\t// Shorten the view distance on devices that typically have\n\t\t\t// less resources\n\t\t\tif( Device.isMobile ) {\n\t\t\t\tviewDistance = isOverview ? 6 : config.mobileViewDistance;\n\t\t\t}\n\n\t\t\t// All slides need to be visible when exporting to PDF\n\t\t\tif( printView.isActive() ) {\n\t\t\t\tviewDistance = Number.MAX_VALUE;\n\t\t\t}\n\n\t\t\tfor( let x = 0; x < horizontalSlidesLength; x++ ) {\n\t\t\t\tlet horizontalSlide = horizontalSlides[x];\n\n\t\t\t\tlet verticalSlides = Util.queryAll( horizontalSlide, 'section' ),\n\t\t\t\t\tverticalSlidesLength = verticalSlides.length;\n\n\t\t\t\t// Determine how far away this slide is from the present\n\t\t\t\tdistanceX = Math.abs( ( indexh || 0 ) - x ) || 0;\n\n\t\t\t\t// If the presentation is looped, distance should measure\n\t\t\t\t// 1 between the first and last slides\n\t\t\t\tif( config.loop ) {\n\t\t\t\t\tdistanceX = Math.abs( ( ( indexh || 0 ) - x ) % ( horizontalSlidesLength - viewDistance ) ) || 0;\n\t\t\t\t}\n\n\t\t\t\t// Show the horizontal slide if it's within the view distance\n\t\t\t\tif( distanceX < viewDistance ) {\n\t\t\t\t\tslideContent.load( horizontalSlide );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tslideContent.unload( horizontalSlide );\n\t\t\t\t}\n\n\t\t\t\tif( verticalSlidesLength ) {\n\n\t\t\t\t\tlet oy = isOverview ? 0 : getPreviousVerticalIndex( horizontalSlide );\n\n\t\t\t\t\tfor( let y = 0; y < verticalSlidesLength; y++ ) {\n\t\t\t\t\t\tlet verticalSlide = verticalSlides[y];\n\n\t\t\t\t\t\tdistanceY = x === ( indexh || 0 ) ? Math.abs( ( indexv || 0 ) - y ) : Math.abs( y - oy );\n\n\t\t\t\t\t\tif( distanceX + distanceY < viewDistance ) {\n\t\t\t\t\t\t\tslideContent.load( verticalSlide );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tslideContent.unload( verticalSlide );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Flag if there are ANY vertical slides, anywhere in the deck\n\t\t\tif( hasVerticalSlides() ) {\n\t\t\t\tdom.wrapper.classList.add( 'has-vertical-slides' );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdom.wrapper.classList.remove( 'has-vertical-slides' );\n\t\t\t}\n\n\t\t\t// Flag if there are ANY horizontal slides, anywhere in the deck\n\t\t\tif( hasHorizontalSlides() ) {\n\t\t\t\tdom.wrapper.classList.add( 'has-horizontal-slides' );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdom.wrapper.classList.remove( 'has-horizontal-slides' );\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Determine what available routes there are for navigation.\n\t *\n\t * @return {{left: boolean, right: boolean, up: boolean, down: boolean}}\n\t */\n\tfunction availableRoutes({ includeFragments = false } = {}) {\n\n\t\tlet horizontalSlides = dom.wrapper.querySelectorAll( HORIZONTAL_SLIDES_SELECTOR ),\n\t\t\tverticalSlides = dom.wrapper.querySelectorAll( VERTICAL_SLIDES_SELECTOR );\n\n\t\tlet routes = {\n\t\t\tleft: indexh > 0,\n\t\t\tright: indexh < horizontalSlides.length - 1,\n\t\t\tup: indexv > 0,\n\t\t\tdown: indexv < verticalSlides.length - 1\n\t\t};\n\n\t\t// Looped presentations can always be navigated as long as\n\t\t// there are slides available\n\t\tif( config.loop ) {\n\t\t\tif( horizontalSlides.length > 1 ) {\n\t\t\t\troutes.left = true;\n\t\t\t\troutes.right = true;\n\t\t\t}\n\n\t\t\tif( verticalSlides.length > 1 ) {\n\t\t\t\troutes.up = true;\n\t\t\t\troutes.down = true;\n\t\t\t}\n\t\t}\n\n\t\tif ( horizontalSlides.length > 1 && config.navigationMode === 'linear' ) {\n\t\t\troutes.right = routes.right || routes.down;\n\t\t\troutes.left = routes.left || routes.up;\n\t\t}\n\n\t\t// If includeFragments is set, a route will be considered\n\t\t// available if either a slid OR fragment is available in\n\t\t// the given direction\n\t\tif( includeFragments === true ) {\n\t\t\tlet fragmentRoutes = fragments.availableRoutes();\n\t\t\troutes.left = routes.left || fragmentRoutes.prev;\n\t\t\troutes.up = routes.up || fragmentRoutes.prev;\n\t\t\troutes.down = routes.down || fragmentRoutes.next;\n\t\t\troutes.right = routes.right || fragmentRoutes.next;\n\t\t}\n\n\t\t// Reverse horizontal controls for rtl\n\t\tif( config.rtl ) {\n\t\t\tlet left = routes.left;\n\t\t\troutes.left = routes.right;\n\t\t\troutes.right = left;\n\t\t}\n\n\t\treturn routes;\n\n\t}\n\n\t/**\n\t * Returns the number of past slides. This can be used as a global\n\t * flattened index for slides.\n\t *\n\t * @param {HTMLElement} [slide=currentSlide] The slide we're counting before\n\t *\n\t * @return {number} Past slide count\n\t */\n\tfunction getSlidePastCount( slide = currentSlide ) {\n\n\t\tlet horizontalSlides = getHorizontalSlides();\n\n\t\t// The number of past slides\n\t\tlet pastCount = 0;\n\n\t\t// Step through all slides and count the past ones\n\t\tmainLoop: for( let i = 0; i < horizontalSlides.length; i++ ) {\n\n\t\t\tlet horizontalSlide = horizontalSlides[i];\n\t\t\tlet verticalSlides = horizontalSlide.querySelectorAll( 'section' );\n\n\t\t\tfor( let j = 0; j < verticalSlides.length; j++ ) {\n\n\t\t\t\t// Stop as soon as we arrive at the present\n\t\t\t\tif( verticalSlides[j] === slide ) {\n\t\t\t\t\tbreak mainLoop;\n\t\t\t\t}\n\n\t\t\t\t// Don't count slides with the \"uncounted\" class\n\t\t\t\tif( verticalSlides[j].dataset.visibility !== 'uncounted' ) {\n\t\t\t\t\tpastCount++;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Stop as soon as we arrive at the present\n\t\t\tif( horizontalSlide === slide ) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// Don't count the wrapping section for vertical slides and\n\t\t\t// slides marked as uncounted\n\t\t\tif( horizontalSlide.classList.contains( 'stack' ) === false && horizontalSlide.dataset.visibility !== 'uncounted' ) {\n\t\t\t\tpastCount++;\n\t\t\t}\n\n\t\t}\n\n\t\treturn pastCount;\n\n\t}\n\n\t/**\n\t * Returns a value ranging from 0-1 that represents\n\t * how far into the presentation we have navigated.\n\t *\n\t * @return {number}\n\t */\n\tfunction getProgress() {\n\n\t\t// The number of past and total slides\n\t\tlet totalCount = getTotalSlides();\n\t\tlet pastCount = getSlidePastCount();\n\n\t\tif( currentSlide ) {\n\n\t\t\tlet allFragments = currentSlide.querySelectorAll( '.fragment' );\n\n\t\t\t// If there are fragments in the current slide those should be\n\t\t\t// accounted for in the progress.\n\t\t\tif( allFragments.length > 0 ) {\n\t\t\t\tlet visibleFragments = currentSlide.querySelectorAll( '.fragment.visible' );\n\n\t\t\t\t// This value represents how big a portion of the slide progress\n\t\t\t\t// that is made up by its fragments (0-1)\n\t\t\t\tlet fragmentWeight = 0.9;\n\n\t\t\t\t// Add fragment progress to the past slide count\n\t\t\t\tpastCount += ( visibleFragments.length / allFragments.length ) * fragmentWeight;\n\t\t\t}\n\n\t\t}\n\n\t\treturn Math.min( pastCount / ( totalCount - 1 ), 1 );\n\n\t}\n\n\t/**\n\t * Retrieves the h/v location and fragment of the current,\n\t * or specified, slide.\n\t *\n\t * @param {HTMLElement} [slide] If specified, the returned\n\t * index will be for this slide rather than the currently\n\t * active one\n\t *\n\t * @return {{h: number, v: number, f: number}}\n\t */\n\tfunction getIndices( slide ) {\n\n\t\t// By default, return the current indices\n\t\tlet h = indexh,\n\t\t\tv = indexv,\n\t\t\tf;\n\n\t\t// If a slide is specified, return the indices of that slide\n\t\tif( slide ) {\n\t\t\t// In scroll mode the original h/x index is stored on the slide\n\t\t\tif( scrollView.isActive() ) {\n\t\t\t\th = parseInt( slide.getAttribute( 'data-index-h' ), 10 );\n\n\t\t\t\tif( slide.getAttribute( 'data-index-v' ) ) {\n\t\t\t\t\tv = parseInt( slide.getAttribute( 'data-index-v' ), 10 );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlet isVertical = isVerticalSlide( slide );\n\t\t\t\tlet slideh = isVertical ? slide.parentNode : slide;\n\n\t\t\t\t// Select all horizontal slides\n\t\t\t\tlet horizontalSlides = getHorizontalSlides();\n\n\t\t\t\t// Now that we know which the horizontal slide is, get its index\n\t\t\t\th = Math.max( horizontalSlides.indexOf( slideh ), 0 );\n\n\t\t\t\t// Assume we're not vertical\n\t\t\t\tv = undefined;\n\n\t\t\t\t// If this is a vertical slide, grab the vertical index\n\t\t\t\tif( isVertical ) {\n\t\t\t\t\tv = Math.max( Util.queryAll( slide.parentNode, 'section' ).indexOf( slide ), 0 );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif( !slide && currentSlide ) {\n\t\t\tlet hasFragments = currentSlide.querySelectorAll( '.fragment' ).length > 0;\n\t\t\tif( hasFragments ) {\n\t\t\t\tlet currentFragment = currentSlide.querySelector( '.current-fragment' );\n\t\t\t\tif( currentFragment && currentFragment.hasAttribute( 'data-fragment-index' ) ) {\n\t\t\t\t\tf = parseInt( currentFragment.getAttribute( 'data-fragment-index' ), 10 );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tf = currentSlide.querySelectorAll( '.fragment.visible' ).length - 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn { h, v, f };\n\n\t}\n\n\t/**\n\t * Retrieves all slides in this presentation.\n\t */\n\tfunction getSlides() {\n\n\t\treturn Util.queryAll( dom.wrapper, SLIDES_SELECTOR + ':not(.stack):not([data-visibility=\"uncounted\"])' );\n\n\t}\n\n\t/**\n\t * Returns a list of all horizontal slides in the deck. Each\n\t * vertical stack is included as one horizontal slide in the\n\t * resulting array.\n\t */\n\tfunction getHorizontalSlides() {\n\n\t\treturn Util.queryAll( dom.wrapper, HORIZONTAL_SLIDES_SELECTOR );\n\n\t}\n\n\t/**\n\t * Returns all vertical slides that exist within this deck.\n\t */\n\tfunction getVerticalSlides() {\n\n\t\treturn Util.queryAll( dom.wrapper, '.slides>section>section' );\n\n\t}\n\n\t/**\n\t * Returns all vertical stacks (each stack can contain multiple slides).\n\t */\n\tfunction getVerticalStacks() {\n\n\t\treturn Util.queryAll( dom.wrapper, HORIZONTAL_SLIDES_SELECTOR + '.stack');\n\n\t}\n\n\t/**\n\t * Returns true if there are at least two horizontal slides.\n\t */\n\tfunction hasHorizontalSlides() {\n\n\t\treturn getHorizontalSlides().length > 1;\n\t}\n\n\t/**\n\t * Returns true if there are at least two vertical slides.\n\t */\n\tfunction hasVerticalSlides() {\n\n\t\treturn getVerticalSlides().length > 1;\n\n\t}\n\n\t/**\n\t * Returns an array of objects where each object represents the\n\t * attributes on its respective slide.\n\t */\n\tfunction getSlidesAttributes() {\n\n\t\treturn getSlides().map( slide => {\n\n\t\t\tlet attributes = {};\n\t\t\tfor( let i = 0; i < slide.attributes.length; i++ ) {\n\t\t\t\tlet attribute = slide.attributes[ i ];\n\t\t\t\tattributes[ attribute.name ] = attribute.value;\n\t\t\t}\n\t\t\treturn attributes;\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Retrieves the total number of slides in this presentation.\n\t *\n\t * @return {number}\n\t */\n\tfunction getTotalSlides() {\n\n\t\treturn getSlides().length;\n\n\t}\n\n\t/**\n\t * Returns the slide element matching the specified index.\n\t *\n\t * @return {HTMLElement}\n\t */\n\tfunction getSlide( x, y ) {\n\n\t\tlet horizontalSlide = getHorizontalSlides()[ x ];\n\t\tlet verticalSlides = horizontalSlide && horizontalSlide.querySelectorAll( 'section' );\n\n\t\tif( verticalSlides && verticalSlides.length && typeof y === 'number' ) {\n\t\t\treturn verticalSlides ? verticalSlides[ y ] : undefined;\n\t\t}\n\n\t\treturn horizontalSlide;\n\n\t}\n\n\t/**\n\t * Returns the background element for the given slide.\n\t * All slides, even the ones with no background properties\n\t * defined, have a background element so as long as the\n\t * index is valid an element will be returned.\n\t *\n\t * @param {mixed} x Horizontal background index OR a slide\n\t * HTML element\n\t * @param {number} y Vertical background index\n\t * @return {(HTMLElement[]|*)}\n\t */\n\tfunction getSlideBackground( x, y ) {\n\n\t\tlet slide = typeof x === 'number' ? getSlide( x, y ) : x;\n\t\tif( slide ) {\n\t\t\treturn slide.slideBackgroundElement;\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\t/**\n\t * Retrieves the current state of the presentation as\n\t * an object. This state can then be restored at any\n\t * time.\n\t *\n\t * @return {{indexh: number, indexv: number, indexf: number, paused: boolean, overview: boolean}}\n\t */\n\tfunction getState() {\n\n\t\tlet indices = getIndices();\n\n\t\treturn {\n\t\t\tindexh: indices.h,\n\t\t\tindexv: indices.v,\n\t\t\tindexf: indices.f,\n\t\t\tpaused: isPaused(),\n\t\t\toverview: overview.isActive(),\n\t\t\t...overlay.getState()\n\t\t};\n\n\t}\n\n\t/**\n\t * Restores the presentation to the given state.\n\t *\n\t * @param {object} state As generated by getState()\n\t * @see {@link getState} generates the parameter `state`\n\t */\n\tfunction setState( state ) {\n\n\t\tif( typeof state === 'object' ) {\n\t\t\tslide( Util.deserialize( state.indexh ), Util.deserialize( state.indexv ), Util.deserialize( state.indexf ) );\n\n\t\t\tlet pausedFlag = Util.deserialize( state.paused ),\n\t\t\t\toverviewFlag = Util.deserialize( state.overview );\n\n\t\t\tif( typeof pausedFlag === 'boolean' && pausedFlag !== isPaused() ) {\n\t\t\t\ttogglePause( pausedFlag );\n\t\t\t}\n\n\t\t\tif( typeof overviewFlag === 'boolean' && overviewFlag !== overview.isActive() ) {\n\t\t\t\toverview.toggle( overviewFlag );\n\t\t\t}\n\n\t\t\toverlay.setState( state );\n\t\t}\n\n\t}\n\n\t/**\n\t * Cues a new automated slide if enabled in the config.\n\t */\n\tfunction cueAutoSlide() {\n\n\t\tcancelAutoSlide();\n\n\t\tif( currentSlide && config.autoSlide !== false ) {\n\n\t\t\tlet fragment = currentSlide.querySelector( '.current-fragment[data-autoslide]' );\n\n\t\t\tlet fragmentAutoSlide = fragment ? fragment.getAttribute( 'data-autoslide' ) : null;\n\t\t\tlet parentAutoSlide = currentSlide.parentNode ? currentSlide.parentNode.getAttribute( 'data-autoslide' ) : null;\n\t\t\tlet slideAutoSlide = currentSlide.getAttribute( 'data-autoslide' );\n\n\t\t\t// Pick value in the following priority order:\n\t\t\t// 1. Current fragment's data-autoslide\n\t\t\t// 2. Current slide's data-autoslide\n\t\t\t// 3. Parent slide's data-autoslide\n\t\t\t// 4. Global autoSlide setting\n\t\t\tif( fragmentAutoSlide ) {\n\t\t\t\tautoSlide = parseInt( fragmentAutoSlide, 10 );\n\t\t\t}\n\t\t\telse if( slideAutoSlide ) {\n\t\t\t\tautoSlide = parseInt( slideAutoSlide, 10 );\n\t\t\t}\n\t\t\telse if( parentAutoSlide ) {\n\t\t\t\tautoSlide = parseInt( parentAutoSlide, 10 );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tautoSlide = config.autoSlide;\n\n\t\t\t\t// If there are media elements with data-autoplay,\n\t\t\t\t// automatically set the autoSlide duration to the\n\t\t\t\t// length of that media. Not applicable if the slide\n\t\t\t\t// is divided up into fragments.\n\t\t\t\t// playbackRate is accounted for in the duration.\n\t\t\t\tif( currentSlide.querySelectorAll( '.fragment' ).length === 0 ) {\n\t\t\t\t\tUtil.queryAll( currentSlide, 'video, audio' ).forEach( el => {\n\t\t\t\t\t\tif( el.hasAttribute( 'data-autoplay' ) ) {\n\t\t\t\t\t\t\tif( autoSlide && (el.duration * 1000 / el.playbackRate ) > autoSlide ) {\n\t\t\t\t\t\t\t\tautoSlide = ( el.duration * 1000 / el.playbackRate ) + 1000;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Cue the next auto-slide if:\n\t\t\t// - There is an autoSlide value\n\t\t\t// - Auto-sliding isn't paused by the user\n\t\t\t// - The presentation isn't paused\n\t\t\t// - The overview isn't active\n\t\t\t// - The presentation isn't over\n\t\t\tif( autoSlide && !autoSlidePaused && !isPaused() && !overview.isActive() && ( !isLastSlide() || fragments.availableRoutes().next || config.loop === true ) ) {\n\t\t\t\tautoSlideTimeout = setTimeout( () => {\n\t\t\t\t\tif( typeof config.autoSlideMethod === 'function' ) {\n\t\t\t\t\t\tconfig.autoSlideMethod()\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tnavigateNext();\n\t\t\t\t\t}\n\t\t\t\t\tcueAutoSlide();\n\t\t\t\t}, autoSlide );\n\t\t\t\tautoSlideStartTime = Date.now();\n\t\t\t}\n\n\t\t\tif( autoSlidePlayer ) {\n\t\t\t\tautoSlidePlayer.setPlaying( autoSlideTimeout !== -1 );\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Cancels any ongoing request to auto-slide.\n\t */\n\tfunction cancelAutoSlide() {\n\n\t\tclearTimeout( autoSlideTimeout );\n\t\tautoSlideTimeout = -1;\n\n\t}\n\n\tfunction pauseAutoSlide() {\n\n\t\tif( autoSlide && !autoSlidePaused ) {\n\t\t\tautoSlidePaused = true;\n\t\t\tdispatchEvent({ type: 'autoslidepaused' });\n\t\t\tclearTimeout( autoSlideTimeout );\n\n\t\t\tif( autoSlidePlayer ) {\n\t\t\t\tautoSlidePlayer.setPlaying( false );\n\t\t\t}\n\t\t}\n\n\t}\n\n\tfunction resumeAutoSlide() {\n\n\t\tif( autoSlide && autoSlidePaused ) {\n\t\t\tautoSlidePaused = false;\n\t\t\tdispatchEvent({ type: 'autoslideresumed' });\n\t\t\tcueAutoSlide();\n\t\t}\n\n\t}\n\n\tfunction navigateLeft({skipFragments=false}={}) {\n\n\t\tnavigationHistory.hasNavigatedHorizontally = true;\n\n\t\t// Scroll view navigation is handled independently\n\t\tif( scrollView.isActive() ) return scrollView.prev();\n\n\t\t// Reverse for RTL\n\t\tif( config.rtl ) {\n\t\t\tif( ( overview.isActive() || skipFragments || fragments.next() === false ) && availableRoutes().left ) {\n\t\t\t\tslide( indexh + 1, config.navigationMode === 'grid' ? indexv : undefined );\n\t\t\t}\n\t\t}\n\t\t// Normal navigation\n\t\telse if( ( overview.isActive() || skipFragments || fragments.prev() === false ) && availableRoutes().left ) {\n\t\t\tslide( indexh - 1, config.navigationMode === 'grid' ? indexv : undefined );\n\t\t}\n\n\t}\n\n\tfunction navigateRight({skipFragments=false}={}) {\n\n\t\tnavigationHistory.hasNavigatedHorizontally = true;\n\n\t\t// Scroll view navigation is handled independently\n\t\tif( scrollView.isActive() ) return scrollView.next();\n\n\t\t// Reverse for RTL\n\t\tif( config.rtl ) {\n\t\t\tif( ( overview.isActive() || skipFragments || fragments.prev() === false ) && availableRoutes().right ) {\n\t\t\t\tslide( indexh - 1, config.navigationMode === 'grid' ? indexv : undefined );\n\t\t\t}\n\t\t}\n\t\t// Normal navigation\n\t\telse if( ( overview.isActive() || skipFragments || fragments.next() === false ) && availableRoutes().right ) {\n\t\t\tslide( indexh + 1, config.navigationMode === 'grid' ? indexv : undefined );\n\t\t}\n\n\t}\n\n\tfunction navigateUp({skipFragments=false}={}) {\n\n\t\t// Scroll view navigation is handled independently\n\t\tif( scrollView.isActive() ) return scrollView.prev();\n\n\t\t// Prioritize hiding fragments\n\t\tif( ( overview.isActive() || skipFragments || fragments.prev() === false ) && availableRoutes().up ) {\n\t\t\tslide( indexh, indexv - 1 );\n\t\t}\n\n\t}\n\n\tfunction navigateDown({skipFragments=false}={}) {\n\n\t\tnavigationHistory.hasNavigatedVertically = true;\n\n\t\t// Scroll view navigation is handled independently\n\t\tif( scrollView.isActive() ) return scrollView.next();\n\n\t\t// Prioritize revealing fragments\n\t\tif( ( overview.isActive() || skipFragments || fragments.next() === false ) && availableRoutes().down ) {\n\t\t\tslide( indexh, indexv + 1 );\n\t\t}\n\n\t}\n\n\t/**\n\t * Navigates backwards, prioritized in the following order:\n\t * 1) Previous fragment\n\t * 2) Previous vertical slide\n\t * 3) Previous horizontal slide\n\t */\n\tfunction navigatePrev({skipFragments=false}={}) {\n\n\t\t// Scroll view navigation is handled independently\n\t\tif( scrollView.isActive() ) return scrollView.prev();\n\n\t\t// Prioritize revealing fragments\n\t\tif( skipFragments || fragments.prev() === false ) {\n\t\t\tif( availableRoutes().up ) {\n\t\t\t\tnavigateUp({skipFragments});\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Fetch the previous horizontal slide, if there is one\n\t\t\t\tlet previousSlide;\n\n\t\t\t\tif( config.rtl ) {\n\t\t\t\t\tpreviousSlide = Util.queryAll( dom.wrapper, HORIZONTAL_SLIDES_SELECTOR + '.future' ).pop();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tpreviousSlide = Util.queryAll( dom.wrapper, HORIZONTAL_SLIDES_SELECTOR + '.past' ).pop();\n\t\t\t\t}\n\n\t\t\t\t// When going backwards and arriving on a stack we start\n\t\t\t\t// at the bottom of the stack\n\t\t\t\tif( previousSlide && previousSlide.classList.contains( 'stack' ) ) {\n\t\t\t\t\tlet v = ( previousSlide.querySelectorAll( 'section' ).length - 1 ) || undefined;\n\t\t\t\t\tlet h = indexh - 1;\n\t\t\t\t\tslide( h, v );\n\t\t\t\t}\n\t\t\t\telse if( config.rtl ) {\n\t\t\t\t\tnavigateRight({skipFragments});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tnavigateLeft({skipFragments});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * The reverse of #navigatePrev().\n\t */\n\tfunction navigateNext({skipFragments=false}={}) {\n\n\t\tnavigationHistory.hasNavigatedHorizontally = true;\n\t\tnavigationHistory.hasNavigatedVertically = true;\n\n\t\t// Scroll view navigation is handled independently\n\t\tif( scrollView.isActive() ) return scrollView.next();\n\n\t\t// Prioritize revealing fragments\n\t\tif( skipFragments || fragments.next() === false ) {\n\n\t\t\tlet routes = availableRoutes();\n\n\t\t\t// When looping is enabled `routes.down` is always available\n\t\t\t// so we need a separate check for when we've reached the\n\t\t\t// end of a stack and should move horizontally\n\t\t\tif( routes.down && routes.right && config.loop && isLastVerticalSlide() ) {\n\t\t\t\troutes.down = false;\n\t\t\t}\n\n\t\t\tif( routes.down ) {\n\t\t\t\tnavigateDown({skipFragments});\n\t\t\t}\n\t\t\telse if( config.rtl ) {\n\t\t\t\tnavigateLeft({skipFragments});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tnavigateRight({skipFragments});\n\t\t\t}\n\t\t}\n\n\t}\n\n\n\t// --------------------------------------------------------------------//\n\t// ----------------------------- EVENTS -------------------------------//\n\t// --------------------------------------------------------------------//\n\n\t/**\n\t * Called by all event handlers that are based on user\n\t * input.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onUserInput( event ) {\n\n\t\tif( config.autoSlideStoppable ) {\n\t\t\tpauseAutoSlide();\n\t\t}\n\n\t}\n\n\t/**\n\t* Listener for post message events posted to this window.\n\t*/\n\tfunction onPostMessage( event ) {\n\n\t\tlet data = event.data;\n\n\t\t// Make sure we're dealing with JSON\n\t\tif( typeof data === 'string' && data.charAt( 0 ) === '{' && data.charAt( data.length - 1 ) === '}' ) {\n\t\t\tdata = JSON.parse( data );\n\n\t\t\t// Check if the requested method can be found\n\t\t\tif( data.method && typeof Reveal[data.method] === 'function' ) {\n\n\t\t\t\tif( POST_MESSAGE_METHOD_BLACKLIST.test( data.method ) === false ) {\n\n\t\t\t\t\tconst result = Reveal[data.method].apply( Reveal, data.args );\n\n\t\t\t\t\t// Dispatch a postMessage event with the returned value from\n\t\t\t\t\t// our method invocation for getter functions\n\t\t\t\t\tdispatchPostMessage( 'callback', { method: data.method, result: result } );\n\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconsole.warn( 'reveal.js: \"'+ data.method +'\" is is blacklisted from the postMessage API' );\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Event listener for transition end on the current slide.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onTransitionEnd( event ) {\n\n\t\tif( transition === 'running' && /section/gi.test( event.target.nodeName ) ) {\n\t\t\ttransition = 'idle';\n\t\t\tdispatchEvent({\n\t\t\t\ttype: 'slidetransitionend',\n\t\t\t\tdata: { indexh, indexv, previousSlide, currentSlide }\n\t\t\t});\n\t\t}\n\n\t}\n\n\t/**\n\t * A global listener for all click events inside of the\n\t * .slides container.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onSlidesClicked( event ) {\n\n\t\tconst anchor = Util.closest( event.target, 'a[href^=\"#\"]' );\n\n\t\t// If a hash link is clicked, we find the target slide\n\t\t// and navigate to it. We previously relied on 'hashchange'\n\t\t// for links like these but that prevented media with\n\t\t// audio tracks from playing in mobile browsers since it\n\t\t// wasn't considered a direct interaction with the document.\n\t\tif( anchor ) {\n\t\t\tconst hash = anchor.getAttribute( 'href' );\n\t\t\tconst indices = location.getIndicesFromHash( hash );\n\n\t\t\tif( indices ) {\n\t\t\t\tReveal.slide( indices.h, indices.v, indices.f );\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Handler for the window level 'resize' event.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onWindowResize( event ) {\n\n\t\tlayout();\n\t}\n\n\t/**\n\t * Handle for the window level 'visibilitychange' event.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onPageVisibilityChange( event ) {\n\n\t\t// If, after clicking a link or similar and we're coming back,\n\t\t// focus the document.body to ensure we can use keyboard shortcuts\n\t\tif( document.hidden === false && document.activeElement !== document.body ) {\n\t\t\t// Not all elements support .blur() - SVGs among them.\n\t\t\tif( typeof document.activeElement.blur === 'function' ) {\n\t\t\t\tdocument.activeElement.blur();\n\t\t\t}\n\t\t\tdocument.body.focus();\n\t\t}\n\n\t}\n\n\t/**\n\t * Handler for the document level 'fullscreenchange' event.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onFullscreenChange( event ) {\n\n\t\tlet element = document.fullscreenElement || document.webkitFullscreenElement;\n\t\tif( element === dom.wrapper ) {\n\t\t\tevent.stopImmediatePropagation();\n\n\t\t\t// Timeout to avoid layout shift in Safari\n\t\t\tsetTimeout( () => {\n\t\t\t\tReveal.layout();\n\t\t\t\tReveal.focus.focus(); // focus.focus :'(\n\t\t\t}, 1 );\n\t\t}\n\n\t}\n\n\t/**\n\t * Handles click on the auto-sliding controls element.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onAutoSlidePlayerClick( event ) {\n\n\t\t// Replay\n\t\tif( isLastSlide() && config.loop === false ) {\n\t\t\tslide( 0, 0 );\n\t\t\tresumeAutoSlide();\n\t\t}\n\t\t// Resume\n\t\telse if( autoSlidePaused ) {\n\t\t\tresumeAutoSlide();\n\t\t}\n\t\t// Pause\n\t\telse {\n\t\t\tpauseAutoSlide();\n\t\t}\n\n\t}\n\n\n\t// --------------------------------------------------------------------//\n\t// ------------------------------- API --------------------------------//\n\t// --------------------------------------------------------------------//\n\n\t// The public reveal.js API\n\tconst API = {\n\t\tVERSION,\n\n\t\tinitialize,\n\t\tconfigure,\n\t\tdestroy,\n\n\t\tsync,\n\t\tsyncSlide,\n\t\tsyncFragments: fragments.sync.bind( fragments ),\n\n\t\t// Navigation methods\n\t\tslide,\n\t\tleft: navigateLeft,\n\t\tright: navigateRight,\n\t\tup: navigateUp,\n\t\tdown: navigateDown,\n\t\tprev: navigatePrev,\n\t\tnext: navigateNext,\n\n\t\t// Navigation aliases\n\t\tnavigateLeft, navigateRight, navigateUp, navigateDown, navigatePrev, navigateNext,\n\n\t\t// Fragment methods\n\t\tnavigateFragment: fragments.goto.bind( fragments ),\n\t\tprevFragment: fragments.prev.bind( fragments ),\n\t\tnextFragment: fragments.next.bind( fragments ),\n\n\t\t// Event binding\n\t\ton,\n\t\toff,\n\n\t\t// Legacy event binding methods left in for backwards compatibility\n\t\taddEventListener: on,\n\t\tremoveEventListener: off,\n\n\t\t// Forces an update in slide layout\n\t\tlayout,\n\n\t\t// Randomizes the order of slides\n\t\tshuffle,\n\n\t\t// Returns an object with the available routes as booleans (left/right/top/bottom)\n\t\tavailableRoutes,\n\n\t\t// Returns an object with the available fragments as booleans (prev/next)\n\t\tavailableFragments: fragments.availableRoutes.bind( fragments ),\n\n\t\t// Toggles a help overlay with keyboard shortcuts\n\t\ttoggleHelp: overlay.toggleHelp.bind( overlay ),\n\n\t\t// Toggles the overview mode on/off\n\t\ttoggleOverview: overview.toggle.bind( overview ),\n\n\t\t// Toggles the scroll view on/off\n\t\ttoggleScrollView: scrollView.toggle.bind( scrollView ),\n\n\t\t// Toggles the \"black screen\" mode on/off\n\t\ttogglePause,\n\n\t\t// Toggles the auto slide mode on/off\n\t\ttoggleAutoSlide,\n\n\t\t// Toggles visibility of the jump-to-slide UI\n\t\ttoggleJumpToSlide,\n\n\t\t// Slide navigation checks\n\t\tisFirstSlide,\n\t\tisLastSlide,\n\t\tisLastVerticalSlide,\n\t\tisVerticalSlide,\n\t\tisVerticalStack,\n\n\t\t// State checks\n\t\tisPaused,\n\t\tisAutoSliding,\n\t\tisSpeakerNotes: notes.isSpeakerNotesWindow.bind( notes ),\n\t\tisOverview: overview.isActive.bind( overview ),\n\t\tisFocused: focus.isFocused.bind( focus ),\n\t\tisOverlayOpen: overlay.isOpen.bind( overlay ),\n\t\tisScrollView: scrollView.isActive.bind( scrollView ),\n\t\tisPrintView: printView.isActive.bind( printView ),\n\n\t\t// Checks if reveal.js has been loaded and is ready for use\n\t\tisReady: () => ready,\n\n\t\t// Slide preloading\n\t\tloadSlide: slideContent.load.bind( slideContent ),\n\t\tunloadSlide: slideContent.unload.bind( slideContent ),\n\n\t\t// Start/stop all media inside of the current slide\n\t\tstartEmbeddedContent: () => slideContent.startEmbeddedContent( currentSlide ),\n\t\tstopEmbeddedContent: () => slideContent.stopEmbeddedContent( currentSlide, { unloadIframes: false } ),\n\n\t\t// Lightbox previews\n\t\tpreviewIframe: overlay.previewIframe.bind( overlay ),\n\t\tpreviewImage: overlay.previewImage.bind( overlay ),\n\t\tpreviewVideo: overlay.previewVideo.bind( overlay ),\n\n\t\tshowPreview: overlay.previewIframe.bind( overlay ), // deprecated in favor of showIframeLightbox\n\t\thidePreview: overlay.close.bind( overlay ),\n\n\t\t// Adds or removes all internal event listeners\n\t\taddEventListeners,\n\t\tremoveEventListeners,\n\t\tdispatchEvent,\n\n\t\t// Facility for persisting and restoring the presentation state\n\t\tgetState,\n\t\tsetState,\n\n\t\t// Presentation progress on range of 0-1\n\t\tgetProgress,\n\n\t\t// Returns the indices of the current, or specified, slide\n\t\tgetIndices,\n\n\t\t// Returns an Array of key:value maps of the attributes of each\n\t\t// slide in the deck\n\t\tgetSlidesAttributes,\n\n\t\t// Returns the number of slides that we have passed\n\t\tgetSlidePastCount,\n\n\t\t// Returns the total number of slides\n\t\tgetTotalSlides,\n\n\t\t// Returns the slide element at the specified index\n\t\tgetSlide,\n\n\t\t// Returns the previous slide element, may be null\n\t\tgetPreviousSlide: () => previousSlide,\n\n\t\t// Returns the current slide element\n\t\tgetCurrentSlide: () => currentSlide,\n\n\t\t// Returns the slide background element at the specified index\n\t\tgetSlideBackground,\n\n\t\t// Returns the speaker notes string for a slide, or null\n\t\tgetSlideNotes: notes.getSlideNotes.bind( notes ),\n\n\t\t// Returns an Array of all slides\n\t\tgetSlides,\n\n\t\t// Returns an array with all horizontal/vertical slides in the deck\n\t\tgetHorizontalSlides,\n\t\tgetVerticalSlides,\n\n\t\t// Checks if the presentation contains two or more horizontal\n\t\t// and vertical slides\n\t\thasHorizontalSlides,\n\t\thasVerticalSlides,\n\n\t\t// Checks if the deck has navigated on either axis at least once\n\t\thasNavigatedHorizontally: () => navigationHistory.hasNavigatedHorizontally,\n\t\thasNavigatedVertically: () => navigationHistory.hasNavigatedVertically,\n\n\t\tshouldAutoAnimateBetween,\n\n\t\t// Adds/removes a custom key binding\n\t\taddKeyBinding: keyboard.addKeyBinding.bind( keyboard ),\n\t\tremoveKeyBinding: keyboard.removeKeyBinding.bind( keyboard ),\n\n\t\t// Programmatically triggers a keyboard event\n\t\ttriggerKey: keyboard.triggerKey.bind( keyboard ),\n\n\t\t// Registers a new shortcut to include in the help overlay\n\t\tregisterKeyboardShortcut: keyboard.registerKeyboardShortcut.bind( keyboard ),\n\n\t\tgetComputedSlideSize,\n\t\tsetCurrentScrollPage,\n\n\t\t// Returns the current scale of the presentation content\n\t\tgetScale: () => scale,\n\n\t\t// Returns the current configuration object\n\t\tgetConfig: () => config,\n\n\t\t// Helper method, retrieves query string as a key:value map\n\t\tgetQueryHash: Util.getQueryHash,\n\n\t\t// Returns the path to the current slide as represented in the URL\n\t\tgetSlidePath: location.getHash.bind( location ),\n\n\t\t// Returns reveal.js DOM elements\n\t\tgetRevealElement: () => revealElement,\n\t\tgetSlidesElement: () => dom.slides,\n\t\tgetViewportElement: () => dom.viewport,\n\t\tgetBackgroundsElement: () => backgrounds.element,\n\n\t\t// API for registering and retrieving plugins\n\t\tregisterPlugin: plugins.registerPlugin.bind( plugins ),\n\t\thasPlugin: plugins.hasPlugin.bind( plugins ),\n\t\tgetPlugin: plugins.getPlugin.bind( plugins ),\n\t\tgetPlugins: plugins.getRegisteredPlugins.bind( plugins )\n\n\t};\n\n\t// Our internal API which controllers have access to\n\tUtil.extend( Reveal, {\n\t\t...API,\n\n\t\t// Methods for announcing content to screen readers\n\t\tannounceStatus,\n\t\tgetStatusText,\n\n\t\t// Controllers\n\t\tfocus,\n\t\tscroll: scrollView,\n\t\tprogress,\n\t\tcontrols,\n\t\tlocation,\n\t\toverview,\n\t\tkeyboard,\n\t\tfragments,\n\t\tbackgrounds,\n\t\tslideContent,\n\t\tslideNumber,\n\n\t\tonUserInput,\n\t\tcloseOverlay: overlay.close.bind( overlay ),\n\t\tupdateSlidesVisibility,\n\t\tlayoutSlideContents,\n\t\ttransformSlides,\n\t\tcueAutoSlide,\n\t\tcancelAutoSlide\n\t} );\n\n\treturn API;\n\n};\n","import Deck, { VERSION } from './reveal.js'\n\n/**\n * Expose the Reveal class to the window. To create a\n * new instance:\n * let deck = new Reveal( document.querySelector( '.reveal' ), {\n *   controls: false\n * } );\n * deck.initialize().then(() => {\n *   // reveal.js is ready\n * });\n */\nlet Reveal = Deck;\n\n\n/**\n * The below is a thin shell that mimics the pre 4.0\n * reveal.js API and ensures backwards compatibility.\n * This API only allows for one Reveal instance per\n * page, whereas the new API above lets you run many\n * presentations on the same page.\n *\n * Reveal.initialize( { controls: false } ).then(() => {\n *   // reveal.js is ready\n * });\n */\n\nlet enqueuedAPICalls = [];\n\nReveal.initialize = options => {\n\n\t// Create our singleton reveal.js instance\n\tObject.assign( Reveal, new Deck( document.querySelector( '.reveal' ), options ) );\n\n\t// Invoke any enqueued API calls\n\tenqueuedAPICalls.map( method => method( Reveal ) );\n\n\treturn Reveal.initialize();\n\n}\n\n/**\n * The pre 4.0 API let you add event listener before\n * initializing. We maintain the same behavior by\n * queuing up premature API calls and invoking all\n * of them when Reveal.initialize is called.\n */\n[ 'configure', 'on', 'off', 'addEventListener', 'removeEventListener', 'registerPlugin' ].forEach( method => {\n\tReveal[method] = ( ...args ) => {\n\t\tenqueuedAPICalls.push( deck => deck[method].call( null, ...args ) );\n\t}\n} );\n\nReveal.isReady = () => false;\n\nReveal.VERSION = VERSION;\n\nexport default Reveal;"],"names":["extend","a","b","i","queryAll","el","selector","Array","from","querySelectorAll","toggleClass","className","value","classList","add","remove","deserialize","match","parseFloat","transformElement","element","transform","style","matches","target","matchesMethod","matchesSelector","msMatchesSelector","call","closest","parentNode","enterFullscreen","requestMethod","document","documentElement","requestFullscreen","webkitRequestFullscreen","webkitRequestFullScreen","mozRequestFullScreen","msRequestFullscreen","apply","createStyleSheet","tag","createElement","type","length","styleSheet","cssText","appendChild","createTextNode","head","getQueryHash","query","location","search","replace","split","shift","pop","unescape","fileExtensionToMimeMap","mp4","m4a","ogv","mpeg","webm","UA","navigator","userAgent","isMobile","test","platform","maxTouchPoints","isAndroid","e","t","slice","o","l","u","arguments","sync","cancelAnimationFrame","n","s","filter","dirty","active","requestAnimationFrame","c","forEach","styleComputed","m","y","v","p","d","f","S","availableWidth","clientWidth","currentWidth","scrollWidth","previousFontSize","currentFontSize","Math","min","max","minSize","maxSize","whiteSpace","multiLine","getComputedStyle","getPropertyValue","display","preStyleTestCompleted","fontSize","dispatchEvent","CustomEvent","detail","oldValue","newValue","scaleFactor","h","w","observeMutations","observer","disconnect","originalStyle","z","F","MutationObserver","observe","g","subtree","childList","characterData","W","E","clearTimeout","setTimeout","x","observeWindowDelay","M","Object","defineProperty","set","concat","observeWindow","fitAll","C","assign","map","newbie","push","fit","unfreeze","freeze","unsubscribe","window","SlideContent","allowedToPlay","constructor","Reveal","this","startEmbeddedIframe","bind","preventIframeAutoFocus","ensureMobileMediaPlaying","shouldPreload","isScrollView","preload","getConfig","preloadIframes","hasAttribute","load","slide","options","displayValue","includes","trim","setProperty","isIframe","tagName","setAttribute","getAttribute","removeAttribute","addEventListener","media","sources","source","background","slideBackgroundElement","backgroundContent","slideBackgroundContentElement","backgroundIframe","backgroundImage","backgroundVideo","backgroundVideoLoop","backgroundVideoMuted","encodeRFC3986URI","url","encodeURI","charCodeAt","toString","toUpperCase","decodeURI","join","video","isSpeakerNotes","muted","sourceElement","getMimeTypeFromFile","filename","excludeIframes","iframe","width","height","maxHeight","maxWidth","backgroundIframeElement","querySelector","layout","scopeElement","fitty","unload","getSlideBackground","formatEmbeddedContent","_appendParamToIframeSource","sourceAttribute","sourceURL","param","getSlidesElement","src","indexOf","startEmbeddedContent","isSpeakerNotesWindow","autoplay","autoPlayMedia","play","readyState","startEmbeddedMedia","promise","catch","controls","then","removeEventListener","event","getVideoPlaybackQuality","playing","paused","totalFrames","totalVideoFrames","isAttachedToDOM","isVisible","ended","currentTime","error","name","contentWindow","postMessage","stopEmbeddedContent","unloadIframes","pause","isNotAllowedToPlay","console","log","elapsed","interval","maxTime","checkFocus","activeElement","blur","SLIDES_SELECTOR","HORIZONTAL_SLIDES_SELECTOR","VERTICAL_SLIDES_SELECTOR","POST_MESSAGE_METHOD_BLACKLIST","SlideNumber","render","getRevealElement","configure","config","oldConfig","slideNumberDisplay","slideNumber","isPrintView","showSlideNumber","update","innerHTML","getSlideNumber","getCurrentSlide","format","getHorizontalSlides","horizontalOffset","dataset","visibility","getSlidePastCount","getTotalSlides","indices","getIndices","sep","isVerticalSlide","getHash","formatNumber","delimiter","isNaN","destroy","JumpToSlide","onInput","onBlur","onKeyDown","jumpInput","placeholder","show","indicesOnShow","focus","hide","jumpTimeout","jump","slideNumberFormat","getSlides","parseInt","getIndicesFromHash","oneBasedIndex","jumpAfter","delay","regex","RegExp","find","innerText","cancel","confirm","keyCode","stopImmediatePropagation","colorToRgb","color","hex3","r","charAt","hex6","rgb","rgba","Backgrounds","create","slideh","backgroundStack","createBackground","slidev","parallaxBackgroundImage","backgroundSize","parallaxBackgroundSize","backgroundRepeat","parallaxBackgroundRepeat","backgroundPosition","parallaxBackgroundPosition","container","contentElement","data","backgroundColor","backgroundGradient","backgroundTransition","backgroundOpacity","dataPreload","opacity","contrastClass","getContrastClass","contrastColor","computedBackgroundStyle","bubbleSlideContrastClassToElement","classToBubble","contains","includeAll","currentSlide","currentBackground","horizontalPast","rtl","horizontalFuture","childNodes","backgroundh","backgroundv","indexv","previousBackground","previousBackgroundHash","currentBackgroundHash","currentVideo","previousVideo","currentVideoParent","backgroundChanged","slideContent","currentBackgroundContent","backgroundImageURL","updateParallax","backgroundWidth","backgroundHeight","horizontalSlides","verticalSlides","getVerticalSlides","horizontalOffsetMultiplier","slideWidth","offsetWidth","horizontalSlideCount","parallaxBackgroundHorizontal","verticalOffsetMultiplier","verticalOffset","slideHeight","offsetHeight","verticalSlideCount","parallaxBackgroundVertical","autoAnimateCounter","AutoAnimate","run","fromSlide","toSlide","reset","allSlides","toSlideIndex","fromSlideIndex","autoAnimateStyleSheet","animationOptions","getAutoAnimateOptions","autoAnimate","slideDirection","fromSlideIsHidden","css","getAutoAnimatableElements","elements","autoAnimateElements","to","autoAnimateUnmatched","defaultUnmatchedDuration","duration","defaultUnmatchedDelay","getUnmatchedAutoAnimateElements","unmatchedElement","unmatchedOptions","id","autoAnimateTarget","fontWeight","sheet","removeChild","elementOptions","easing","fromProps","getAutoAnimatableProperties","toProps","styles","translate","scale","presentationScale","getScale","delta","scaleX","scaleY","round","propertyName","toValue","fromValue","explicitValue","toStyleProperties","keys","inheritedOptions","autoAnimateEasing","autoAnimateDuration","autoAnimatedParent","autoAnimateDelay","direction","properties","bounds","measure","center","getBoundingClientRect","offsetLeft","offsetTop","computedStyles","autoAnimateStyles","property","pairs","autoAnimateMatcher","getAutoAnimatePairs","reserved","pair","index","textNodes","findAutoAnimateMatches","node","nodeName","textContent","getLocalBoundingBox","fromScope","toScope","serializer","fromMatches","toMatches","key","fromElement","primaryIndex","secondaryIndex","rootElement","children","reduce","result","containsAnimatedElements","ScrollView","activatedCallbacks","onScroll","activate","stateBeforeActivation","getState","slideHTMLBeforeActivation","horizontalBackgrounds","presentationBackground","viewportElement","viewportStyles","pageElements","pageContainer","previousSlide","createPageElement","isVertical","contentContainer","shouldAutoAnimateBetween","page","slideBackground","pageBackground","stickyContainer","insertBefore","horizontalSlide","isVerticalStack","verticalSlide","createProgressBar","stack","setState","callback","restoreScrollPosition","passive","deactivate","stateBeforeDeactivation","removeProgressBar","toggle","override","isActive","progressBar","progressBarInner","progressBarPlayhead","firstChild","handleDocumentMouseMove","progress","clientY","top","progressBarHeight","scrollTop","scrollHeight","handleDocumentMouseUp","draggingProgressBar","showProgressBar","preventDefault","syncPages","syncScrollPosition","slideSize","getComputedSlideSize","innerWidth","innerHeight","useCompactLayout","scrollLayout","viewportHeight","compactHeight","pageHeight","scrollTriggerHeight","scrollSnapType","scrollSnap","slideTriggers","pages","pageElement","createPage","slideElement","stickyElement","backgroundElement","autoAnimatePages","activatePage","deactivatePage","createFragmentTriggersForPage","createAutoAnimateTriggersForPage","totalScrollTriggerCount","scrollTriggers","total","triggerStick","scrollSnapAlign","marginTop","removeProperty","scrollPadding","totalHeight","position","setTriggerRanges","scrollProgress","syncProgressBar","trigger","rangeStart","range","scrollTriggerSegmentSize","scrollTrigger","fragmentGroups","fragments","sort","autoAnimateElement","autoAnimatePage","indexh","viewportHeightFactor","playheadHeight","progressBarScrollableHeight","progressSegmentHeight","spacing","slideTrigger","progressBarSlide","scrollTriggerElements","triggerElement","scrollProgressMid","activePage","loaded","activateTrigger","deactivateTrigger","setProgressBarValue","getAllPages","hideProgressBarTimeout","prev","next","scrollToSlide","getScrollTriggerBySlide","storeScrollPosition","storeScrollPositionTimeout","sessionStorage","setItem","origin","pathname","scrollPosition","getItem","scrollOrigin","setCurrentScrollPage","backgrounds","sibling","getSlideByIndices","flatMap","getViewportElement","PrintView","slides","injectPageNumbers","pageWidth","floor","margin","Promise","body","layoutSlideContents","slideScrollHeights","left","contentHeight","numberOfPages","ceil","pdfMaxPagesPerSlide","pdfPageHeightOffset","showNotes","notes","getSlideNotes","notesSpacing","notesLayout","notesElement","bottom","numberElement","pdfSeparateFragments","previousFragmentStep","fragment","clonedPage","cloneNode","fragmentNumber","view","Fragments","disable","enable","availableRoutes","hiddenFragments","grouped","ordered","unordered","sorted","group","sortAll","changedFragments","shown","hidden","maxIndex","currentFragment","wasVisible","announceStatus","getStatusText","bubbles","goto","offset","lastVisibleFragment","fragmentInURL","writeURL","Overview","onSlideClicked","overview","cancelAutoSlide","getBackgroundsElement","overviewSlideWidth","overviewSlideHeight","updateSlidesVisibility","hslide","vslide","hbackground","vbackground","vmin","transformSlides","cueAutoSlide","Keyboard","shortcuts","bindings","onDocumentKeyDown","navigationMode","unbind","addKeyBinding","binding","description","removeKeyBinding","triggerKey","registerKeyboardShortcut","getShortcuts","getBindings","keyboardCondition","isFocused","autoSlideWasPaused","isAutoSliding","onUserInput","activeElementIsCE","isContentEditable","activeElementIsInput","activeElementIsNotes","unusedModifier","shiftKey","altKey","ctrlKey","metaKey","resumeKeyCodes","keyboard","isOverlayOpen","isPaused","useLinearMode","hasHorizontalSlides","hasVerticalSlides","triggered","action","skipFragments","right","undefined","up","Number","MAX_VALUE","down","togglePause","embedded","autoSlideStoppable","toggleAutoSlide","jumpToSlide","toggleJumpToSlide","closeOverlay","toggleHelp","Location","MAX_REPLACE_STATE_FREQUENCY","writeURLTimeout","replaceStateTimestamp","onWindowHashChange","hash","bits","hashIndexBase","hashOneBasedIndex","getElementById","decodeURIComponent","readURL","currentIndices","newIndices","history","debouncedReplaceState","replaceState","Date","now","replaceStateTimeout","encodeURIComponent","Controls","onNavigateLeftClicked","onNavigateRightClicked","onNavigateUpClicked","onNavigateDownClicked","onNavigatePrevClicked","onNavigateNextClicked","onEnterFullscreen","revealElement","controlsLeft","controlsRight","controlsUp","controlsDown","controlsPrev","controlsNext","controlsFullscreen","controlsRightArrow","controlsLeftArrow","controlsDownArrow","controlsLayout","controlsBackArrows","pointerEvents","eventName","routes","fragmentsRoutes","hasVerticalSiblings","parentElement","controlsTutorial","hasNavigatedVertically","hasNavigatedHorizontally","viewport","Progress","onProgressClicked","bar","getProgress","getMaxWidth","slidesTotal","slideIndex","clientX","targetIndices","Pointer","lastMouseWheelStep","cursorHidden","cursorInactiveTimeout","onDocumentCursorActive","onDocumentMouseScroll","mouseWheel","hideInactiveCursor","showCursor","cursor","hideCursor","hideCursorTime","wheelDelta","loadScript","script","async","defer","onload","onreadystatechange","onerror","err","Error","lastChild","Plugins","reveal","state","registeredPlugins","asyncDependencies","plugins","dependencies","registerPlugin","resolve","scripts","scriptsToLoad","condition","scriptLoadedCallback","initPlugins","warn","pluginValues","values","pluginsToInitialize","loadAsync","initNextPlugin","afterPlugInitialized","plugin","init","hasPlugin","getPlugin","getRegisteredPlugins","Overlay","onSlidesClicked","iframeTriggerSelector","mediaTriggerSelector","stateProps","previewLinks","hasLinkPreviews","hasMediaPreviews","createOverlay","dom","previewIframe","close","previewMedia","mediaType","fitMode","previewFit","previewImage","img","previewVideo","previewAutoplay","previewControls","loop","previewLoop","previewMuted","playsInline","showHelp","help","html","isOpen","every","linkTarget","mediaTarget","Touch","touchStartX","touchStartY","touchStartCount","touchCaptured","onPointerDown","onPointerMove","onPointerUp","onTouchStart","onTouchMove","onTouchEnd","msPointerEnabled","isSwipePrevented","touches","currentX","currentY","includeFragments","deltaX","deltaY","abs","pointerType","MSPOINTER_TYPE_TOUCH","STATE_FOCUS","STATE_BLUR","Focus","onRevealPointerDown","onDocumentPointerDown","Notes","updateVisibility","hasNotes","notesElements","Playback","progressCheck","diameter","diameter2","thickness","progressOffset","canvas","context","getContext","setPlaying","wasPlaying","animate","progressBefore","radius","iconSize","endAngle","PI","startAngle","save","clearRect","beginPath","arc","fillStyle","fill","lineWidth","strokeStyle","stroke","fillRect","moveTo","lineTo","restore","on","listener","off","defaultConfig","minScale","maxScale","respondToHashChanges","disableLayout","touch","shuffle","showHiddenSlides","autoSlide","autoSlideMethod","defaultTiming","postMessageEvents","focusBodyOnPageVisibilityChange","transition","transitionSpeed","scrollActivationWidth","POSITIVE_INFINITY","viewDistance","mobileViewDistance","sortFragmentsOnSync","VERSION","Deck","autoSlidePlayer","initialized","ready","navigationHistory","slidesTransform","autoSlideTimeout","autoSlideStartTime","autoSlidePaused","scrollView","printView","pointer","overlay","start","Util","wrapper","parent","childElementCount","Device","pauseOverlay","createSingletonNode","tagname","classname","nodes","testNode","statusElement","overflow","clip","createStatusElement","setupDOM","onPostMessage","setInterval","scrollLeft","onFullscreenChange","activatePrintView","activateScrollView","removeEventListeners","activateInitialView","text","nodeType","isAriaHidden","isDisplayHidden","altText","ensurePunctuation","child","trimmedText","isReady","numberOfSlides","resume","onAutoSlidePlayerClick","addEventListeners","onWindowResize","onTransitionEnd","onPageVisibilityChange","useCapture","transforms","createEvent","initEvent","dispatchPostMessage","dispatchSlideChanged","self","message","namespace","JSON","stringify","viewportWidth","size","oldScale","presentationWidth","presentationHeight","zoom","len","checkResponsiveScrollView","remainingHeight","getRemainingHeight","newHeight","oldHeight","nw","naturalWidth","videoWidth","nh","naturalHeight","videoHeight","es","setPreviousVerticalIndex","getPreviousVerticalIndex","attributeName","isLastVerticalSlide","nextElementSibling","isFirstSlide","isLastSlide","wasPaused","defaultPrevented","stateBefore","indexhBefore","indexvBefore","updateSlides","slideChanged","currentHorizontalSlide","currentVerticalSlides","autoAnimateTransition","stateLoop","j","splice","beforeSlide","random","slidesLength","printMode","loopedForwards","loopedBackwards","reverse","showFragmentsIn","hideFragmentsIn","wasPresent","slideState","distanceX","distanceY","horizontalSlidesLength","isOverview","verticalSlidesLength","oy","fragmentRoutes","pastCount","mainLoop","getSlide","indexf","fragmentAutoSlide","parentAutoSlide","slideAutoSlide","playbackRate","navigateNext","pauseAutoSlide","resumeAutoSlide","navigateLeft","navigateRight","navigateUp","navigateDown","navigatePrev","parse","method","args","anchor","fullscreenElement","webkitFullscreenElement","API","initialize","initOptions","setViewport","syncSlide","syncFragments","navigateFragment","prevFragment","nextFragment","availableFragments","toggleOverview","toggleScrollView","loadSlide","unloadSlide","showPreview","hidePreview","pausedFlag","overviewFlag","totalCount","allFragments","fragmentWeight","getSlidesAttributes","attributes","attribute","getPreviousSlide","getSlidePath","getPlugins","scroll","enqueuedAPICalls","deck"],"mappings":"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","x_google_ignoreList":[2]}